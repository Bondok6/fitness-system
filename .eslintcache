[{"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\index.js":"1","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\App.js":"2","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\context\\auth-context.js":"3","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\UI\\Backdrop\\Backdrop.js":"4","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\UI\\Sidebar\\Sidebar.js":"5","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\Table.js":"6","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\UI\\PoPup\\PoPup.js":"7","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\home.jsx":"8","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Pages\\Profile\\Profile.js":"9","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\about.jsx":"10","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\videoCategories.jsx":"11","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\contactUs.jsx":"12","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\videos.jsx":"13","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\online.jsx":"14","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\searchTrainer.jsx":"15","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\navbar.jsx":"16","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\approvedTrainees.jsx":"17","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\searchTrainee.jsx":"18","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\UI\\Spinner\\Spinner.js":"19","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\chooseWay.js":"20","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\TraineeCard.js":"21","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\TrainerCard.js":"22","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\context\\alerts-context.js":"23","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\chartjs.jsx":"24","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\forgetPassword.jsx":"25","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\resetPassword.jsx":"26","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\verifyEmail.jsx":"27","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\signup.jsx":"28","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\verify.jsx":"29","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\foodPopup.jsx":"30","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\foodTable.jsx":"31","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\video.jsx":"32","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\login.jsx":"33","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Helper\\shared\\shared.js":"34","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Helper\\Input\\Input.js":"35","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\index.js":"36","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\App.js":"37","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\UI\\Sidebar\\Sidebar.js":"38","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\UI\\Backdrop\\Backdrop.js":"39","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Table.js":"40","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\context\\auth-context.js":"41","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\about.jsx":"42","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\UI\\PoPup\\PoPup.js":"43","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\contactUs.jsx":"44","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\videoCategories.jsx":"45","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\home.jsx":"46","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\navbar.jsx":"47","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\videos.jsx":"48","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\searchTrainee.jsx":"49","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\searchTrainer.jsx":"50","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\online.jsx":"51","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\approvedTrainees.jsx":"52","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\UI\\Spinner\\Spinner.js":"53","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\context\\alerts-context.js":"54","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\chooseWay.js":"55","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\TraineeCard.js":"56","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\TrainerCard.js":"57","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\chartjs.jsx":"58","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\resetPassword.jsx":"59","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\forgetPassword.jsx":"60","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\verifyEmail.jsx":"61","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\verify.jsx":"62","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\signup.jsx":"63","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\foodTable.jsx":"64","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\foodPopup.jsx":"65","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\video.jsx":"66","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\login.jsx":"67","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Helper\\Input\\Input.js":"68","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Helper\\shared\\shared.js":"69","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Admin\\Home.js":"70","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Admin\\AddTrainer.js":"71","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Admin\\heper\\inputs.js":"72","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\UI\\ProfileModal\\ProfileModal.js":"73","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Profile\\Profile\\Profile.js":"74","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\store\\Messgaes\\messagesReducer.js":"75","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\store\\Messgaes\\messagesTypess.js":"76","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Chat\\chat.jsx":"77","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\store\\index.js":"78","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Chat\\messaging.jsx":"79","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\store\\Messgaes\\messagesActions.js":"80","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Chat\\contacts.jsx":"81","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Chat\\contact.jsx":"82","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Chat\\message.jsx":"83","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\QRCode\\qrCode.jsx":"84","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\context\\rest-context.js":"85"},{"size":453,"mtime":1614044256394,"results":"86","hashOfConfig":"87"},{"size":6421,"mtime":1618737691987,"results":"88","hashOfConfig":"87"},{"size":125,"mtime":1618737692100,"results":"89","hashOfConfig":"87"},{"size":676,"mtime":1613971219055,"results":"90","hashOfConfig":"87"},{"size":1604,"mtime":1613971219055,"results":"91","hashOfConfig":"87"},{"size":5225,"mtime":1618737691988,"results":"92","hashOfConfig":"87"},{"size":2359,"mtime":1618737692090,"results":"93","hashOfConfig":"87"},{"size":8312,"mtime":1618793823463,"results":"94","hashOfConfig":"87"},{"size":45447,"mtime":1618737692055,"results":"95","hashOfConfig":"87"},{"size":895,"mtime":1617066832094,"results":"96","hashOfConfig":"87"},{"size":2393,"mtime":1618313491721,"results":"97","hashOfConfig":"87"},{"size":1156,"mtime":1614177221997,"results":"98","hashOfConfig":"87"},{"size":4704,"mtime":1618737692053,"results":"99","hashOfConfig":"87"},{"size":6961,"mtime":1618737692048,"results":"100","hashOfConfig":"87"},{"size":2363,"mtime":1618737692051,"results":"101","hashOfConfig":"87"},{"size":7851,"mtime":1618737692020,"results":"102","hashOfConfig":"87"},{"size":2288,"mtime":1618737692014,"results":"103","hashOfConfig":"87"},{"size":2240,"mtime":1618737692049,"results":"104","hashOfConfig":"87"},{"size":175,"mtime":1614044256379,"results":"105","hashOfConfig":"87"},{"size":2511,"mtime":1618156835252,"results":"106","hashOfConfig":"87"},{"size":1559,"mtime":1618737691989,"results":"107","hashOfConfig":"87"},{"size":1897,"mtime":1618737691989,"results":"108","hashOfConfig":"87"},{"size":108,"mtime":1618737692099,"results":"109","hashOfConfig":"87"},{"size":1952,"mtime":1618072228167,"results":"110","hashOfConfig":"87"},{"size":3627,"mtime":1614044256347,"results":"111","hashOfConfig":"87"},{"size":5228,"mtime":1614044256347,"results":"112","hashOfConfig":"87"},{"size":4710,"mtime":1614044256363,"results":"113","hashOfConfig":"87"},{"size":7615,"mtime":1614044256347,"results":"114","hashOfConfig":"87"},{"size":4739,"mtime":1614044256347,"results":"115","hashOfConfig":"87"},{"size":7827,"mtime":1618737692017,"results":"116","hashOfConfig":"87"},{"size":7631,"mtime":1618737692019,"results":"117","hashOfConfig":"87"},{"size":1277,"mtime":1618313491721,"results":"118","hashOfConfig":"87"},{"size":3863,"mtime":1618737692015,"results":"119","hashOfConfig":"87"},{"size":1243,"mtime":1614044256363,"results":"120","hashOfConfig":"87"},{"size":1676,"mtime":1614044256363,"results":"121","hashOfConfig":"87"},{"size":1014,"mtime":1625697738628,"results":"122","hashOfConfig":"123"},{"size":7822,"mtime":1626737820264,"results":"124","hashOfConfig":"123"},{"size":1604,"mtime":1613971219055,"results":"125","hashOfConfig":"123"},{"size":676,"mtime":1613971219055,"results":"126","hashOfConfig":"123"},{"size":7496,"mtime":1625697737287,"results":"127","hashOfConfig":"123"},{"size":125,"mtime":1625697737962,"results":"128","hashOfConfig":"123"},{"size":895,"mtime":1617066832094,"results":"129","hashOfConfig":"123"},{"size":2359,"mtime":1625697737731,"results":"130","hashOfConfig":"123"},{"size":1156,"mtime":1614177221997,"results":"131","hashOfConfig":"123"},{"size":2131,"mtime":1625697737683,"results":"132","hashOfConfig":"123"},{"size":8661,"mtime":1625697737533,"results":"133","hashOfConfig":"123"},{"size":8111,"mtime":1625697737561,"results":"134","hashOfConfig":"123"},{"size":4704,"mtime":1625697737691,"results":"135","hashOfConfig":"123"},{"size":1960,"mtime":1625697737605,"results":"136","hashOfConfig":"123"},{"size":2363,"mtime":1625697737631,"results":"137","hashOfConfig":"123"},{"size":6961,"mtime":1625697737575,"results":"138","hashOfConfig":"123"},{"size":2288,"mtime":1625697737369,"results":"139","hashOfConfig":"123"},{"size":175,"mtime":1614044256379,"results":"140","hashOfConfig":"123"},{"size":108,"mtime":1625697737961,"results":"141","hashOfConfig":"123"},{"size":2511,"mtime":1625697737401,"results":"142","hashOfConfig":"123"},{"size":1265,"mtime":1625697737308,"results":"143","hashOfConfig":"123"},{"size":1712,"mtime":1625697737341,"results":"144","hashOfConfig":"123"},{"size":1985,"mtime":1625697737444,"results":"145","hashOfConfig":"123"},{"size":5228,"mtime":1614044256347,"results":"146","hashOfConfig":"123"},{"size":3627,"mtime":1614044256347,"results":"147","hashOfConfig":"123"},{"size":4710,"mtime":1614044256363,"results":"148","hashOfConfig":"123"},{"size":4739,"mtime":1614044256347,"results":"149","hashOfConfig":"123"},{"size":8453,"mtime":1626515256378,"results":"150","hashOfConfig":"123"},{"size":6442,"mtime":1625697737498,"results":"151","hashOfConfig":"123"},{"size":6606,"mtime":1625697737483,"results":"152","hashOfConfig":"123"},{"size":1277,"mtime":1625697737632,"results":"153","hashOfConfig":"123"},{"size":4324,"mtime":1625697737439,"results":"154","hashOfConfig":"123"},{"size":1676,"mtime":1614044256363,"results":"155","hashOfConfig":"123"},{"size":1243,"mtime":1614044256363,"results":"156","hashOfConfig":"123"},{"size":4336,"mtime":1626589483120,"results":"157","hashOfConfig":"123"},{"size":6594,"mtime":1626589483119,"results":"158","hashOfConfig":"123"},{"size":537,"mtime":1626589483121,"results":"159","hashOfConfig":"123"},{"size":10693,"mtime":1625697737746,"results":"160","hashOfConfig":"123"},{"size":44089,"mtime":1625697737234,"results":"161","hashOfConfig":"123"},{"size":2684,"mtime":1626363738627,"results":"162","hashOfConfig":"123"},{"size":986,"mtime":1625697738689,"results":"163","hashOfConfig":"123"},{"size":6667,"mtime":1626592874387,"results":"164","hashOfConfig":"123"},{"size":206,"mtime":1621499975416,"results":"165","hashOfConfig":"123"},{"size":5185,"mtime":1626589483141,"results":"166","hashOfConfig":"123"},{"size":4260,"mtime":1621499975385,"results":"167","hashOfConfig":"123"},{"size":1307,"mtime":1626589483138,"results":"168","hashOfConfig":"123"},{"size":1283,"mtime":1626589483137,"results":"169","hashOfConfig":"123"},{"size":549,"mtime":1626589483140,"results":"170","hashOfConfig":"123"},{"size":5322,"mtime":1626590598549,"results":"171","hashOfConfig":"123"},{"size":106,"mtime":1626589483166,"results":"172","hashOfConfig":"123"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},"bthxix",{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"175"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"175"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"175"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"175"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"175"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"175"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"175"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"175"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"175"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"175"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"175"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"175"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"175"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},"hlladt",{"filePath":"260","messages":"261","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"259"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"259"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"259"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"259"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"259"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"259"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"259"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"259"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"259"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"259"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"259"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"259"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"259"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"259"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"259"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"259"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"259"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"357"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"259"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"357"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"259"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"259"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"372"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"259"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\index.js",[],["378","379"],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\App.js",["380"],"import React, { useState, useCallback, useEffect, useContext } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Components/home\";\r\nimport Nav from \"./Components/navbar\";\r\nimport Contact from \"./Components/contactUs\";\r\nimport About from \"./Components/about\";\r\nimport Sidebar from \"./UI/Sidebar/Sidebar\";\r\nimport Backdrop from \"./UI/Backdrop/Backdrop\";\r\nimport PoPup from \"./UI/PoPup/PoPup\";\r\nimport Profile from \"./Pages/Profile/Profile\";\r\nimport Online from \"./Components/online\";\r\nimport VideoCategory from \"./Components/videoCategories\";\r\nimport Videos from \"./Components/videos\";\r\nimport SearchTrainee from \"./Components/searchTrainee\";\r\nimport SearchTrainer from \"./Components/searchTrainer\";\r\nimport Axios from \"axios\";\r\nimport AuthCont from \"./context/auth-context\";\r\nimport Table from \"./Components/Table\";\r\nimport Approved from './Components/approvedTrainees'\r\nfunction App() {\r\n  const [open, setOpen] = useState(false);\r\n  const [u, setU] = useState(false);\r\n  const [m, setM] = useState(false);\r\n  const [outer, setOuter] = useState(false);\r\n  const [inner, setInnre] = useState(false);\r\n  const [param, setParam] = useState(false);\r\n\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const [me, setMe] = useState({});\r\n\r\n  let Auth = useContext(AuthCont);\r\n\r\n  useEffect(() => {\r\n    async function getProfile() {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token) {\r\n        const res = await Axios.get(\"profile\");\r\n        if (res.status === 200 || 201) {\r\n          Auth.isAuth = true;\r\n          Auth.auth = res.data;\r\n          setMe(res.data);\r\n          setIsAuth(true);\r\n        }\r\n      }\r\n    }\r\n    getProfile();\r\n  }, []);\r\n\r\n  const openHandler = useCallback(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const closeHandler = useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n  const [open2, setOpen2] = useState(false);\r\n\r\n  const openHandler2 = useCallback((url, method, o, i, u) => {\r\n    setOpen2(true);\r\n    setU(url);\r\n    setM(method);\r\n    if (url === \"/food\"||url===\"/table\") {\r\n      setOuter(o);\r\n      setInnre(i);\r\n      setParam(u);\r\n    }\r\n  }, []);\r\n\r\n  const [foo,setFoo]=useState()\r\n\r\n  const foodTable=(f,method)=>{\r\n    setFoo(f)\r\n    setM(method);\r\n  }\r\n\r\n  const closeHandler2 = useCallback(() => {\r\n    setOpen2(false);\r\n  }, []);\r\n  return (\r\n    <React.Fragment>\r\n      <BrowserRouter>\r\n        <Nav openHandler={openHandler} openHandler2={openHandler2} />\r\n        <Backdrop\r\n          open={open}\r\n          clickHandler={openHandler}\r\n          closeHandler={closeHandler}\r\n          closeHandler2={closeHandler2}\r\n        />\r\n        <Sidebar\r\n          open={open}\r\n          clickHandler={openHandler}\r\n          closeHandler={closeHandler}\r\n        />\r\n        <PoPup\r\n          open={open2}\r\n          url={u}\r\n          method={m}\r\n          outer={outer}\r\n          inner={inner}\r\n          param={param}\r\n          clickHandler2={openHandler2}\r\n          closeHandler={closeHandler2}\r\n          foodTable={foodTable}\r\n        />\r\n        {isAuth && me.role === \"trainee\" ? (\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Home closeHandler2={closeHandler2} {...props} />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/profile\"\r\n              render={(props) => (\r\n                <Profile\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/profile/:id\"\r\n              render={(props) => (\r\n                <Profile\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route exact path=\"/searchTrainee\" component={SearchTrainee} />\r\n            <Route exact path=\"/searchTrainer\" component={SearchTrainer} />\r\n            <Route exact path=\"/online/:id\" component={Online} />\r\n            <Route exact path=\"/videoCategories\" component={VideoCategory} />\r\n            <Route exact path=\"/Videos/:id\" component={Videos} />\r\n          </Switch>\r\n        ) : isAuth && me.role === \"gym\" ? (\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Home closeHandler2={closeHandler2} {...props} />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/profile/:id\"\r\n              render={(props) => (\r\n                <Profile\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route exact path=\"/searchTrainee\" component={SearchTrainee} />\r\n            <Route exact path=\"/approvedTrainees\" component={Approved} />\r\n            <Route exact path=\"/searchTrainer\" component={SearchTrainer} />\r\n            <Route exact path=\"/online/:id\" component={Online} />\r\n            <Route exact path=\"/videoCategories\" component={VideoCategory} />\r\n            <Route exact path=\"/Videos/:id\" component={Videos} />\r\n            <Route\r\n              exact\r\n              path=\"/addDite/:id\"\r\n              render={(props) => (\r\n                <Table\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  food={foo}\r\n                  method={m}\r\n                  id={outer}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Home closeHandler2={closeHandler2} {...props} />\r\n              )}\r\n            />\r\n\r\n            <Route exact path=\"/contact\" component={Contact} />\r\n            <Route exact path=\"/about\" component={About} />\r\n          </Switch>\r\n        )}\r\n      </BrowserRouter>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\context\\auth-context.js",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\UI\\Backdrop\\Backdrop.js",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\UI\\Sidebar\\Sidebar.js",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\Table.js",["381","382","383","384","385","386","387"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport style from \"../assets/css/table.module.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nfunction Table(props) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const table = useRef();\r\n\r\n  const [loadind, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let l = document.getElementsByTagName(\"td\");\r\n    for (let i = 0; i < l.length; i++) {\r\n      if (l[i]) {\r\n        l[i].addEventListener(\"click\", (e) => {\r\n          props.openHandler2(\"/table\", i);\r\n        });\r\n      }\r\n    }\r\n  }, []);\r\n  //   console.log(props.food, props.method);\r\n\r\n  useEffect(() => {\r\n    let l = document.getElementsByTagName(\"td\");\r\n\r\n    let arr = [];\r\n    let ids = [];\r\n    let grams = [];\r\n    if (props.food) {\r\n      props.food.map((f) => {\r\n        arr.push(f.food);\r\n        ids.push(f._id);\r\n        grams.push(f.userGrams);\r\n      });\r\n      l[props.method].textContent = arr.join(\",\");\r\n      let food = [];\r\n      for (let i = 0; i < grams.length; i++) {\r\n        food.push({ grams: grams[i], food: ids[i] });\r\n      }\r\n      l[props.method].special_attribute = food;\r\n      //   console.log(props.method)\r\n      //   console.log(l[props.method].special_attribute)\r\n    }\r\n  }, [props.food]);\r\n\r\n  const addHandler = () => {\r\n    setLoading(true);\r\n    let system = [];\r\n    let l = document.getElementsByTagName(\"td\");\r\n    let time = document.getElementsByClassName(\"time\");\r\n    let days = document.getElementsByClassName(\"day\");\r\n    for (let i = 0; i < 7; i++) {\r\n      system[i] = new Object();\r\n      system[i][\"name\"] = days[i].textContent;\r\n      system[i][\"sys\"] = new Array();\r\n\r\n      for (let j = 0; j < 5; j++) {\r\n        system[i].sys[j] = new Object();\r\n        system[i].sys[j][\"time\"] = time[j].textContent;\r\n        system[i].sys[j][\"f\"] = new Array();\r\n        system[i].sys[j][\"f\"] = l[j * 7 + i].special_attribute;\r\n      }\r\n    }\r\n    axios\r\n      .put(`put-system?user=${props.match.params.id}`,{\r\n        system:{\r\n          date:moment(startDate).utc(),\r\n          system\r\n        }\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        // window.location.href = `/addDite/${props.match.params.id}`;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  let tab = (\r\n    <table class={style.table} ref={table}>\r\n      <thead>\r\n        <th />\r\n        <th className=\"day\">saturday</th>\r\n        <th className=\"day\">sunday</th>\r\n        <th className=\"day\">monday</th>\r\n        <th className=\"day\">tuesday</th>\r\n        <th className=\"day\">wednesday</th>\r\n        <th className=\"day\">thursday</th>\r\n        <th className=\"day\">friday</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th className=\"time\">8 Am</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th className=\"time\">11 Am</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th className=\"time\">3 Pm</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th className=\"time\">5 Pm</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th className=\"time\">7 Pm</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n  if (loadind) tab = <Spinner />;\r\n  return (\r\n    <div className={style.Table}>\r\n      <h2 class={style.section_title}>Creat Diet Plan</h2>\r\n\r\n      <div class={style.diet_plan}>\r\n        <label for=\"\"> diet plan </label>\r\n        <select>\r\n          <option value=\"intermittent\"> intermittent fasting</option>\r\n          <option value=\"hamada\"> hamada</option>\r\n          <option value=\"aboahmed\"> aboahmed</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class={style.diet_date}>\r\n        <DatePicker\r\n          selected={startDate}\r\n          onChange={(date) => setStartDate(date)}\r\n        />\r\n      </div>\r\n\r\n      {tab}\r\n      <button className={style.btn} onClick={() => addHandler()}>add</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\UI\\PoPup\\PoPup.js",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\home.jsx",["388"],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Pages\\Profile\\Profile.js",["389","390","391","392","393","394","395"],"import React, { useEffect, useState, useRef, useContext } from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport add from \"../../images/add.png\";\r\nimport line from \"../../images/svg/line.svg\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport LineChart from \"../../Components/chartjs\";\r\nimport TraineeCard from \"../../Components/TraineeCard\";\r\nimport TrainerCard from \"../../Components/TrainerCard\";\r\nimport style2 from \"../../assets/css/navbar.module.css\";\r\nimport AlertContext from \"../../context/alerts-context\";\r\nimport _ from \"lodash\";\r\n\r\nfunction generateRanges(startDate, endDate) {\r\n  let current = moment(startDate, \"DD/MM/YYYY\");\r\n  const end = moment(endDate, \"DD/MM/YYYY\");\r\n  let weeks = [];\r\n  while (current < end) {\r\n    let l = current.add(7, \"days\");\r\n    weeks = [...weeks, l.format(\"YYYY-MM-DD\")];\r\n  }\r\n  return weeks;\r\n}\r\n\r\nfunction Profile(props) {\r\n  const [profile, setProfile] = useState();\r\n  const imga = useRef();\r\n  const labe = useRef();\r\n  const alert = useRef();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [loading2, setLoading2] = useState(false);\r\n  const [loading3, setLoading3] = useState(false);\r\n\r\n  const [update, setUpdate] = useState();\r\n  const [system, setSystem] = useState();\r\n  const [dates, setDates] = useState([]);\r\n\r\n  const [current, setCurrent] = useState(\"\");\r\n\r\n  const [h, setH] = useState();\r\n  const [w, setW] = useState();\r\n\r\n  const height = useRef();\r\n  const weight = useRef();\r\n\r\n  const [weeks, setWeeks] = useState([]);\r\n  const [weekIndex, setWeekIndex] = useState(0);\r\n\r\n  const [currentWeekWeight, setCurrentWeekWeight] = useState([]);\r\n  const [currentWeekPerfectPath, setCurrentWeekPerfectPath] = useState([]);\r\n\r\n  const [trainees, setTraineees] = useState([]);\r\n  const [trainers, setTrainers] = useState([]);\r\n\r\n  const alers = useContext(AlertContext);\r\n\r\n  const al = _.find(\r\n    alers.alerts,\r\n    _.matchesProperty(\"user\", {\r\n      id: profile ? profile.id : \"\",\r\n      username: profile ? profile.username : \"\",\r\n      photo: profile ? profile.photo : \"\",\r\n      role: profile ? profile.role : \"\",\r\n    })\r\n  );\r\n\r\n  // console.log(al)\r\n\r\n  useEffect(() => {\r\n    // console.log(props.match.params.id);\r\n    axios\r\n      .get(\r\n        props.match.params.id\r\n          ? `fetch-profile?id=${props.match.params.id}`\r\n          : `fetch-profile`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        setProfile(res.data.user);\r\n        setSystem(res.data.system);\r\n        let newWeeks = generateRanges(\r\n          moment(res.data.system.perfectPathes[0].date).format(\"DD/MM/YYYY\"),\r\n          moment(\r\n            res.data.system.perfectPathes[\r\n              res.data.system.perfectPathes.length - 1\r\n            ].date\r\n          ).format(\"DD/MM/YYYY\")\r\n        );\r\n        setWeeks(newWeeks);\r\n        if (weekIndex === 0) {\r\n          if (weekIndex + 1 !== newWeeks.length) {\r\n            let ws = [];\r\n            let pws = [];\r\n            res.data.user.weights.map((w) => {\r\n              if (\r\n                moment(w.date).isBetween(\r\n                  moment(newWeeks[weekIndex]),\r\n                  moment(newWeeks[weekIndex + 1])\r\n                )\r\n              ) {\r\n                return ws.push(w.weight);\r\n              }\r\n            });\r\n            setCurrentWeekWeight(ws);\r\n            res.data.system.perfectPathes.map((w) => {\r\n              if (\r\n                moment(w.date).isBetween(\r\n                  moment(newWeeks[weekIndex]),\r\n                  moment(newWeeks[weekIndex + 1])\r\n                )\r\n              )\r\n                return pws.push(w.weight);\r\n            });\r\n            setCurrentWeekPerfectPath(pws);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n\r\n    axios\r\n      .get(\r\n        props.match.params.id\r\n          ? `getDates?id=${props.match.params.id}`\r\n          : `getDates`\r\n      )\r\n      .then((res) => {\r\n        setDates(res.data.syst);\r\n        setCurrent(res.data.syst[0].date);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, [\r\n    loading,\r\n    loading2,\r\n    loading3,\r\n    props.open2,\r\n    // props.match.params.id,\r\n    // weekIndex,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/getUsers?limit=3\").then((res) => {\r\n      setTraineees(res.data.docs);\r\n    });\r\n    axios.get(\"/fetch-gyms?limit=3\").then((res) => {\r\n      setTrainers(res.data.docs);\r\n    });\r\n  }, []);\r\n\r\n  const leftToggle = () => {\r\n    if (system) {\r\n      var indexOfStevie = dates.findIndex((i) => i.date === current);\r\n      if (indexOfStevie !== 0) {\r\n        setCurrent(dates[indexOfStevie - 1].date);\r\n        axios\r\n          .get(\r\n            props.match.params.id\r\n              ? `getSystemByDate?date=${current}&&id=${props.match.params.id}`\r\n              : `getSystemByDate?date=${current}`\r\n          )\r\n          .then((res) => {\r\n            setSystem(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const rightToggle = () => {\r\n    if (system) {\r\n      var indexOfStevie = dates.findIndex((i) => i.date === current);\r\n      if (indexOfStevie !== dates.length - 1) {\r\n        setCurrent(dates[indexOfStevie + 1].date);\r\n        axios\r\n          .get(\r\n            props.match.params.id\r\n              ? `getSystemByDate?date=${current}&&id=${props.match.params.id}`\r\n              : `getSystemByDate?date=${current}`\r\n          )\r\n          .then((res) => {\r\n            setSystem(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  const leftToggleChart = () => {\r\n    if (system)\r\n      if (weekIndex - 1 !== -1) {\r\n        let ws = [];\r\n        let pws = [];\r\n        profile.weights.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex - 1]),\r\n              moment(weeks[weekIndex])\r\n            )\r\n          )\r\n            ws.push(w.weight);\r\n        });\r\n        setCurrentWeekWeight(ws);\r\n        system.perfectPathes.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex - 1]),\r\n              moment(weeks[weekIndex])\r\n            )\r\n          )\r\n            pws.push(w.weight);\r\n        });\r\n        setCurrentWeekPerfectPath(pws);\r\n        let nextWeek = weekIndex - 1;\r\n\r\n        setWeekIndex(nextWeek);\r\n      }\r\n  };\r\n\r\n  const rightToggleChart = () => {\r\n    if (system)\r\n      if (weekIndex + 1 !== weeks.length) {\r\n        let ws = [];\r\n        let pws = [];\r\n        profile.weights.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex + 1]),\r\n              moment(weeks[weekIndex + 2])\r\n            )\r\n          )\r\n            ws.push(w.weight);\r\n        });\r\n        setCurrentWeekWeight(ws);\r\n        system.perfectPathes.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex + 1]),\r\n              moment(weeks[weekIndex + 2])\r\n            )\r\n          )\r\n            pws.push(w.weight);\r\n        });\r\n        setCurrentWeekPerfectPath(pws);\r\n        let nextWeek = weekIndex + 1;\r\n        setWeekIndex(nextWeek);\r\n      }\r\n  };\r\n\r\n  const addWeight = () => {\r\n    if (w) {\r\n      setLoading2(true);\r\n      axios\r\n        .post(`weight`, { weight: w })\r\n        .then((res) => {\r\n          weight.current.style.display = \"none\";\r\n          alert.current.style.visibility = \"visible\";\r\n          alert.current.style.opacity = \"1\";\r\n          setLoading2(false);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          setLoading2(false);\r\n        });\r\n    }\r\n  };\r\n  const addHeight = () => {\r\n    if (h) {\r\n      setLoading3(true);\r\n      axios\r\n        .post(`height`, { height: h })\r\n        .then((res) => {\r\n          height.current.style.display = \"none\";\r\n          alert.current.style.visibility = \"visible\";\r\n          alert.current.style.opacity = \"1\";\r\n          setLoading3(false);\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          setLoading3(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  let updateButton = props.match.params.id ? (\r\n    \"\"\r\n  ) : (\r\n    <label\r\n      style={{\r\n        background: \"black\",\r\n        color: \"#d9a404\",\r\n        width: \"100px\",\r\n        marginRight: \"10px\",\r\n        marginBottom: \"10px\",\r\n        textAlign: \"center\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      className={s.Images__update}\r\n      htmlFor=\"update\"\r\n    >\r\n      update\r\n    </label>\r\n  );\r\n\r\n  if (loading === true) {\r\n    updateButton = <Spinner />;\r\n  }\r\n\r\n  let weightComponent = (\r\n    <div>\r\n      {props.match.params.id ? (\r\n        \"\"\r\n      ) : (\r\n        <img\r\n          src={add}\r\n          alt=\"add\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => (weight.current.style.display = \"block\")}\r\n        />\r\n      )}\r\n      <span>Weight: </span>\r\n      {profile\r\n        ? profile.weights\r\n          ? profile.weights[0]\r\n            ? profile.weights[profile.weights.length - 1].weight\r\n            : \"\"\r\n          : \"\"\r\n        : \"\"}\r\n      kg\r\n      <div style={{ display: \"none\" }} ref={weight}>\r\n        <input\r\n          type=\"number\"\r\n          onChange={(e) => setW(e.target.value)}\r\n          style={{ height: \"30px\", padding: \"auto\", width: \"auto\" }}\r\n        />\r\n        <button\r\n          style={{\r\n            width: \"100px\",\r\n            backgroundColor: \"#181303\",\r\n            color: \"#d9a404\",\r\n            border: \"none\",\r\n            marginLeft: \"1px\",\r\n          }}\r\n          onClick={() => addWeight()}\r\n        >\r\n          Add Weight\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (loading3) weightComponent = <Spinner />;\r\n\r\n  let heightComponent = (\r\n    <div>\r\n      {props.match.params.id ? (\r\n        \"\"\r\n      ) : (\r\n        <img\r\n          src={add}\r\n          alt=\"add\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => (height.current.style.display = \"block\")}\r\n        />\r\n      )}\r\n      <span>height: </span>\r\n      {profile\r\n        ? profile.heights\r\n          ? profile.heights[0]\r\n            ? profile.heights[profile.heights.length - 1].height\r\n            : \"\"\r\n          : \"\"\r\n        : \"\"}\r\n      cm\r\n      <div style={{ display: \"none\" }} ref={height}>\r\n        <input\r\n          type=\"number\"\r\n          onChange={(e) => setH(e.target.value)}\r\n          style={{ height: \"30px\", padding: \"auto\", width: \"auto\" }}\r\n        />\r\n        <button\r\n          style={{\r\n            width: \"100px\",\r\n            backgroundColor: \"#181303\",\r\n            color: \"#d9a404\",\r\n            border: \"none\",\r\n            marginLeft: \"1px\",\r\n          }}\r\n          onClick={() => addHeight()}\r\n        >\r\n          Add Height\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (loading2) heightComponent = <Spinner />;\r\n\r\n  return (\r\n    <section className={s.profile}>\r\n      <div className=\"container\">\r\n        <div>\r\n          <img className={s.line} src={line} alt=\"line\" />\r\n          <div className={s.circle}>\r\n            <img\r\n              className={s.profile_img}\r\n              src={\r\n                profile\r\n                  ? profile.photo\r\n                    ? profile.photo\r\n                    : \"https://picsum.photos/220/220\"\r\n                  : \"https://picsum.photos/220/220\"\r\n              }\r\n              alt=\"profile\"\r\n              ref={imga}\r\n            />\r\n            {props.match.params.id ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <img\r\n                  className={s.add_img}\r\n                  src={add}\r\n                  alt=\"add\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <label htmlFor=\"img\" className={s.add_img} ref={labe}>\r\n                  <input\r\n                    type=\"file\"\r\n                    style={{ opacity: 0 }}\r\n                    id=\"img\"\r\n                    onChange={(event) => {\r\n                      if (event.target.files[0]) {\r\n                        const form = new FormData();\r\n                        form.append(\"photo\", event.target.files[0]);\r\n                        axios\r\n                          .patch(\"profile\", form)\r\n                          .then((res) => {})\r\n                          .catch((err) => {\r\n                            console.error(err);\r\n                          });\r\n\r\n                        var selectedFile = event.target.files[0];\r\n                        var reader = new FileReader();\r\n\r\n                        imga.current.title = selectedFile.name;\r\n                        reader.onload = function (event) {\r\n                          imga.current.src = event.target.result;\r\n                        };\r\n                        reader.readAsDataURL(selectedFile);\r\n                      }\r\n                    }}\r\n                  />\r\n                </label>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className={s.info}>\r\n            <h4>\r\n              {profile ? (profile.username ? profile.username : \"\") : \"\"}{\" \"}\r\n            </h4>\r\n            <div className={s.details}>\r\n              {weightComponent}\r\n              {heightComponent}\r\n              <div>\r\n                <span>Diet Plan: </span>Intermittent Fasting\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {al ? (\r\n          <div\r\n            style={{ margin: \"auto\", textAlign: \"center\", marginTop: \"-75px\" }}\r\n          >\r\n            <button\r\n              className={style2.accept}\r\n              onClick={() => {\r\n                console.log(\"here\")\r\n                setLoading(true);\r\n                axios\r\n                  .put(`approve?request=${al.id}`)\r\n                  .then((res) => {\r\n                    setLoading(false);\r\n                    console.log(res);\r\n                    window.location.href = \"/\";\r\n                  })\r\n                  .catch((err) => {\r\n                    setLoading(false);\r\n                    console.log(err);\r\n                  });\r\n              }}\r\n            >\r\n              accept\r\n            </button>\r\n            <button\r\n              className={style2.decline}\r\n              onClick={() => {\r\n                setLoading(true);\r\n                axios\r\n                  .put(`gymRefuse?request=${al.id}`)\r\n                  .then((res) => {\r\n                    setLoading(false);\r\n                    console.log(res);\r\n                    window.location.href = \"/\";\r\n                  })\r\n                  .catch((err) => {\r\n                    setLoading(false);\r\n                    console.log(err);\r\n                  });\r\n              }}\r\n            >\r\n              refuse\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {/* images section */}\r\n        <hr />\r\n        <div className={s.Images}>\r\n          <h2 className={s.Images__heading}>\r\n            {\" \"}\r\n            A comparison indicating your changes every month{\" \"}\r\n          </h2>\r\n          <div className={s.Images__info}>\r\n            <div className={s.Images__photo}>\r\n              <img\r\n                src={\r\n                  update\r\n                    ? update\r\n                    : \"https://res.cloudinary.com/derossy-backup/image/upload/v1555206304/deross-samples/placeholder-profile-male.jpg\"\r\n                }\r\n                alt=\"profile pic\"\r\n              />\r\n            </div>\r\n            <div className={s.Images__btns}>\r\n              <div className={s.Images__btns_monthes}>\r\n                {profile\r\n                  ? profile.images\r\n                    ? profile.images.length > 0\r\n                      ? profile.images.map((i, l) => {\r\n                          return (\r\n                            <button\r\n                              key={l}\r\n                              onClick={() => {\r\n                                return setUpdate(i.image);\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              month{\" \"}\r\n                              {moment(i.date)\r\n                                .locale(\"en\")\r\n                                .format(\"YYYY/MM/DD\")}{\" \"}\r\n                            </button>\r\n                          );\r\n                        })\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </div>\r\n              <input\r\n                style={{ opacity: 0 }}\r\n                type=\"file\"\r\n                id=\"update\"\r\n                onChange={(event) => {\r\n                  setLoading(true);\r\n                  if (event.target.files[0]) {\r\n                    const form = new FormData();\r\n                    form.append(\"image\", event.target.files[0]);\r\n                    axios\r\n                      .post(\"image\", form)\r\n                      .then((res) => {\r\n                        setLoading(false);\r\n                        alert.current.style.visibility = \"visible\";\r\n                        alert.current.style.opacity = \"1\";\r\n                      })\r\n                      .catch((err) => {\r\n                        console.error(err);\r\n                        setLoading(false);\r\n                      });\r\n                  }\r\n                }}\r\n              />\r\n              <Alert\r\n                ref={alert}\r\n                className={s.Alert}\r\n                severity=\"success\"\r\n                onClick={() => {\r\n                  alert.current.style.visibility = \"hidden\";\r\n                  alert.current.style.opacity = \"0\";\r\n                }}\r\n              >\r\n                This is a success alert — check it out!\r\n              </Alert>\r\n\r\n              {updateButton}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        {/* {system ? system.syst[0].system.map(s=>{\r\n          return ( */}\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            margin: \"10px 0px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ cursor: \"pointer\" }} onClick={() => leftToggle()}>\r\n            {\" \"}\r\n            <ArrowBackIosIcon />\r\n          </div>\r\n          <span> {moment(current).format(\"YYYY MM DD\")} </span>\r\n          <div style={{ cursor: \"pointer\" }} onClick={() => rightToggle()}>\r\n            {\" \"}\r\n            <ArrowForwardIosIcon />\r\n          </div>\r\n        </div>\r\n        <table className={s.table}>\r\n          <thead>\r\n            <th />\r\n            <th>saturday</th>\r\n            <th>sunday</th>\r\n            <th>monday</th>\r\n            <th>tuesday</th>\r\n            <th>wednesday</th>\r\n            <th>thursday</th>\r\n            <th>friday</th>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>8 Am</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>11 Am</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[1],\r\n                      system.syst[0].system[4]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>3 Pm</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>5 Pm</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>7 Pm</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <hr />\r\n        <div className={s.charts}>\r\n          <h3 style={{ marginLeft: \"30px\" }}>Motivation Charts</h3>\r\n          <div id=\"calendar_basic\" className={s.chart_content} />\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              margin: \"10px 0px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => leftToggleChart()}\r\n            >\r\n              {\" \"}\r\n              <ArrowBackIosIcon />\r\n            </div>\r\n            <span>\r\n              {\" \"}\r\n              {weeks\r\n                ? weeks[weekIndex]\r\n                  ? moment(weeks[weekIndex]).format(\"YYYY/MM/DD\")\r\n                  : \"\"\r\n                : \"\"}{\" \"}\r\n            </span>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => rightToggleChart()}\r\n            >\r\n              {\" \"}\r\n              <ArrowForwardIosIcon />\r\n            </div>\r\n          </div>\r\n          <LineChart\r\n            currentWeekPerfectPath={currentWeekPerfectPath}\r\n            currentWeekWeight={currentWeekWeight}\r\n            currentWeek={weeks[weekIndex]}\r\n          />\r\n        </div>\r\n        <hr />\r\n        <h2> Top Trending users </h2>\r\n        <div className={s.cards}>\r\n          {trainees.length > 0\r\n            ? trainees.map((trainee) => {\r\n                return (\r\n                  <TraineeCard\r\n                    photo={trainee.photo}\r\n                    username={trainee.username}\r\n                    id={trainee.id}\r\n                    key={trainee.id}\r\n                    weights={trainee.weights}\r\n                    heights={trainee.heights}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n        <h4 style={{ textAlign: \"right\", cursor: \"pointer\" }}>\r\n          {\" \"}\r\n          <span onClick={() => (window.location.href = \"/SearchTrainee\")}>\r\n            See More &gt;&gt;\r\n          </span>\r\n        </h4>\r\n        <hr />\r\n        <h2> Top Trending Trainers </h2>\r\n        <div className={s.cards}>\r\n          {trainers.length > 0\r\n            ? trainers.map((trainer) => {\r\n                return (\r\n                  <TrainerCard\r\n                    photo={trainer.photo}\r\n                    username={trainer.username}\r\n                    id={trainer.id}\r\n                    key={trainer.id}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n        <h4\r\n          style={{\r\n            textAlign: \"right\",\r\n            paddingBottom: \"20px\",\r\n            cursor: \"pointer\",\r\n            marginBottom: \"0\",\r\n          }}\r\n        >\r\n          <span onClick={() => (window.location.href = \"/SearchTrainer\")}>\r\n            {\" \"}\r\n            See More &gt;&gt;\r\n          </span>\r\n        </h4>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\about.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\videoCategories.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\contactUs.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\videos.jsx",["396","397","398"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport style from \"../assets/css/online.module.css\";\r\nimport style1 from \"../assets/css/home.module.css\";\r\nimport caption from \"../images/Logo/icon-caption.png\";\r\nimport icon from \"../images/Logo/icon.png\";\r\nimport hover from \"../images/Logo/icon-hover.png\";\r\n\r\nimport search from \"../images/online/search.png\";\r\nimport Video from \"./video\";\r\nimport axios from \"axios\";\r\n\r\nfunction Videos(props) {\r\n  const slider = useRef();\r\n  const prevBtn = useRef();\r\n  const nextBtn = useRef();\r\n\r\n  const [counter, setCounter] = useState(1);\r\n  const size = 200;\r\n\r\n  const [recommendations, setRecommendations] = useState([]);\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  const [sear,setSearch]=useState(\"\")\r\n\r\n  useEffect(() => {\r\n    // console.log(props.match.params.id)\r\n    axios\r\n      .get(\"/getRecommindations?limit=10\")\r\n      .then((res) => setRecommendations(res.data.docs));\r\n\r\n    axios\r\n      .get(`/videos?limit=8&&category=${props.match.params.id}&&title=${sear}`)\r\n      .then((res) => setVideos(res.data.docs));\r\n  }, [props.match.params.id,sear]);\r\n\r\n\r\n  useEffect(() => {\r\n    slider.current.style.transform = \"translateX(\" + -size * counter + \"px)\";\r\n  }, []);\r\n\r\n  const nextHandler = () => {\r\n    if (counter === recommendations.length - 6) return;\r\n    slider.current.style.transition = \"transform 0.4s ease-in-out\";\r\n    let c = counter + 1;\r\n    slider.current.style.transform = \"translateX(\" + -size * c + \"px)\";\r\n    setCounter(c);\r\n  };\r\n  const prevHandler = () => {\r\n    if (counter <= 0) return;\r\n    slider.current.style.transition = \"transform 0.4s ease-in-out\";\r\n    let c = counter - 1;\r\n    slider.current.style.transform = \"translateX(\" + -size * c + \"px)\";\r\n    setCounter(c);\r\n  };\r\n\r\n  return (\r\n    <section class={style.online}>\r\n      <div class=\"container\">\r\n        <div class={style.searchBox}>\r\n          <img class={style.searchIcon} src={search} alt=\"search-icon\" />\r\n          <input\r\n            class={style.searchTxt}\r\n            type=\"search\"\r\n            placeholder=\"type to search\"\r\n            onChange={(e)=>setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div class={style.sliderContainer}>\r\n          <div class={style.slider} ref={slider}>\r\n            {recommendations.length > 0\r\n              ? recommendations.map((r) => {\r\n                  return (\r\n                    <img\r\n                      key={r.id}\r\n                      id={r.id}\r\n                      src={r.image}\r\n                      alt=\"\"\r\n                      style={{ width: \"200px\", height: \"180px\",cursor:'pointer',marginRight:'10px' }}\r\n                      onClick={()=>{\r\n                        window.location.href=`/online/${r.id}`\r\n                      }}\r\n                    />\r\n                  );\r\n                })\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n\r\n        <a\r\n          class={style.carouselControlPrev}\r\n          ref={prevBtn}\r\n          onClick={() => nextHandler()}\r\n        >\r\n          <span class={style.carouselControlPrevIcon}></span>\r\n        </a>\r\n        <a\r\n          class={style.carouselControlNext}\r\n          ref={nextBtn}\r\n          onClick={() => prevHandler()}\r\n        >\r\n          <span class={style.carouselControlNextIcon}></span>\r\n        </a>\r\n\r\n        <div className={style.videos}>\r\n          {videos.length > 0\r\n            ? videos.map((v) => {\r\n                return (\r\n                  <Video\r\n                    key={v.id}\r\n                    id={v.id}\r\n                    views={v.views.length}\r\n                    image={v.image}\r\n                    username={v.user.username}\r\n                    title={v.title}\r\n                    rating={v.rating}\r\n                    photo={v.user.photo}\r\n                    createdAt={v.createdAt}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"}\r\n          {/* <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video />\r\n          <Video /> */}\r\n        </div>\r\n      </div>\r\n      <footer\r\n        className=\"links\"\r\n        style={{ padding: \"25px\", background: \"black\", marginTop: \"15px\" }}\r\n      >\r\n        <ul>\r\n          <li className={style1.icon}>\r\n            <img src={icon} alt=\"icon\" />\r\n          </li>\r\n          <li className={style1.iconhover}>\r\n            <img src={hover} alt=\"icon-hover\" />\r\n          </li>\r\n        </ul>\r\n        <div className={style1.iconcaption}>\r\n          <img src={caption} alt=\"icon-caption\" />\r\n        </div>\r\n      </footer>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\online.jsx",["399","400","401","402"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport style from \"../assets/css/online.module.css\";\r\nimport search from \"../images/online/search.png\";\r\nimport comment from \"../images/online/comment.png\";\r\nimport style1 from \"../assets/css/home.module.css\";\r\nimport caption from \"../images/Logo/icon-caption.png\";\r\nimport icon from \"../images/Logo/icon.png\";\r\nimport hover from \"../images/Logo/icon-hover.png\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nexport function Online(props) {\r\n  const slider = useRef();\r\n  const prevBtn = useRef();\r\n  const nextBtn = useRef();\r\n\r\n  const [counter, setCounter] = useState(1);\r\n  const size = 200;\r\n\r\n  const [video, setVideo] = useState({});\r\n  const [videos, setVideos] = useState({});\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // const [me, setMe] = useState({});\r\n  const [comm, setComment] = useState(\"\");\r\n\r\n  const [sear,setSearch]=useState(\"\")\r\n\r\n  useEffect(() => {\r\n    axios.get(`/getVideo?id=${props.match.params.id}`).then((res) => {\r\n      setVideo(res.data);\r\n\r\n      axios\r\n        .get(`/videos?limit=8&&category=${res.data.category}&&title=${sear}`)\r\n        .then((res) => setVideos(res.data.docs));\r\n    });\r\n  }, [props.match.params.id,loading,sear]);\r\n\r\n  useEffect(() => {\r\n    slider.current.style.transform = \"translateX(\" + -size * counter + \"px)\";\r\n  }, []);\r\n\r\n\r\n  const nextHandler = () => {\r\n    if (counter === videos.length - 5) return;\r\n    slider.current.style.transition = \"transform 0.4s ease-in-out\";\r\n    let c = counter + 1;\r\n    slider.current.style.transform = \"translateX(\" + -size * c + \"px)\";\r\n    setCounter(c);\r\n  };\r\n  const prevHandler = () => {\r\n    if (counter <= 0) return;\r\n    slider.current.style.transition = \"transform 0.4s ease-in-out\";\r\n    let c = counter - 1;\r\n    slider.current.style.transform = \"translateX(\" + -size * c + \"px)\";\r\n    setCounter(c);\r\n  };\r\n\r\n  let c = (\r\n    <div class={style.writeComment}>\r\n      <div class={style.commentIcon}>\r\n        <img src={comment} alt=\"comment-icon\" />\r\n      </div>\r\n      <div class={style.commentText}>\r\n        <textarea\r\n          placeholder=\"Write a Comment ...\"\r\n          onChange={(e) => {\r\n            setComment(e.target.value);\r\n          }}\r\n        ></textarea>\r\n        <button\r\n          class={style.postBtn}\r\n          onClick={() => {\r\n            if (comm !== \"\") {\r\n              setLoading(true);\r\n              axios\r\n                .post(\"/addComent\", {\r\n                  comment: comm,\r\n                  videoId: props.match.params.id,\r\n                })\r\n                .then((res) => {\r\n                  setLoading(false);\r\n                });\r\n            }\r\n          }}\r\n        >\r\n          Post\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (loading) c = <Spinner />;\r\n\r\n  return (\r\n    <section class={style.online}>\r\n      <div class=\"container\">\r\n        <div class={style.searchBox}>\r\n          <img class={style.searchIcon} src={search} alt=\"search-icon\" />\r\n          <input\r\n            class={style.searchTxt}\r\n            type=\"search\"\r\n            placeholder=\"type to search\"\r\n            onChange={(e)=>setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div class={style.sliderContainer}>\r\n          <div class={style.slider} ref={slider}>\r\n            {videos.length > 0\r\n              ? videos.map((r) => {\r\n                  return (\r\n                    <img\r\n                      key={r.id}\r\n                      id={r.id}\r\n                      src={r.image}\r\n                      alt=\"\"\r\n                      style={{ width: \"200px\", height: \"200px\",cursor:'pointer' }}\r\n                      onClick={()=>{\r\n                        window.location.href=`/online/${r.id}`\r\n                      }}\r\n                      \r\n                    />\r\n                  );\r\n                })\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n\r\n        <a\r\n          class={style.carouselControlPrev}\r\n          ref={prevBtn}\r\n          onClick={() => nextHandler()}\r\n        >\r\n          <span class={style.carouselControlPrevIcon}></span>\r\n        </a>\r\n        <a\r\n          class={style.carouselControlNext}\r\n          ref={nextBtn}\r\n          onClick={() => prevHandler()}\r\n        >\r\n          <span class={style.carouselControlNextIcon}></span>\r\n        </a>\r\n\r\n        <div class={style.video}>\r\n          <iframe\r\n            width=\"900\"\r\n            height=\"415\"\r\n            src={video.video?video.video:\"\"}\r\n            frameborder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowfullscreen\r\n          ></iframe>\r\n        </div>\r\n\r\n        <div class={style.comments}>\r\n          <div class={style.title}>\r\n            <h3>Comments</h3>\r\n            <div className={style.triangleDown}></div>\r\n          </div>\r\n\r\n          {video.comments\r\n            ? video.comments.length > 0\r\n              ? video.comments.map((c) => {\r\n                  return (\r\n                    <div class={style.comment} style={{marginLeft:'120px'}}>\r\n                      <div>\r\n                        <img\r\n                          class={style.person}\r\n                          src={c.user.photo}\r\n                          alt=\"person\"\r\n                          style={{\r\n                            borderRadius: \"50%\",\r\n                            width: \"80px\",\r\n                            height: \"80px\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div class={style.commentContent}>\r\n                        <h6>{c.user.username}</h6>\r\n                        <span>{new Date(c.date).toLocaleDateString()}</span>\r\n                        <p>{c.comment}</p>\r\n\r\n                        <div class={style.commentFooter}></div>\r\n\r\n                        <div class={style.replay}>\r\n                          <textarea\r\n                            placeholder=\"Write a Replay ...\"\r\n                            id=\"replay\"\r\n                          ></textarea>\r\n                          <button class={style.postBtn}>Post</button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n              : \"\"\r\n            : \"\"}\r\n        </div>\r\n        {c}\r\n      </div>\r\n      <footer\r\n        className=\"links\"\r\n        style={{ padding: \"25px\", background: \"black\", marginTop: \"15px\" }}\r\n      >\r\n        <ul>\r\n          <li className={style1.icon}>\r\n            <img src={icon} alt=\"icon\" />\r\n          </li>\r\n          <li className={style1.iconhover}>\r\n            <img src={hover} alt=\"icon-hover\" />\r\n          </li>\r\n        </ul>\r\n        <div className={style1.iconcaption}>\r\n          <img src={caption} alt=\"icon-caption\" />\r\n        </div>\r\n      </footer>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Online;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\searchTrainer.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\navbar.jsx",["403"],"import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../images/Logo/icon.png\";\r\nimport style from \"../assets/css/navbar.module.css\";\r\nimport TocIcon from \"@material-ui/icons/Toc\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport Axios from \"axios\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport AlertContext from '../context/alerts-context'\r\n\r\nexport const Nav = (props) => {\r\n  const nav = useRef();\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [notifications, setNotifications] = useState(0);\r\n\r\n  const [requests, setRequests] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const alerts=useContext(AlertContext)\r\n\r\n  useEffect(() => {\r\n    if (auth.auth.role === \"gym\")\r\n      Axios.get(\"count-requests\").then((res) => {\r\n        setNotifications(res.data);\r\n      });\r\n  }, [auth.auth.role, loading,alerts]);\r\n  useEffect(() => {\r\n    console.log(\"here\")\r\n    if (auth.auth.role === \"gym\")\r\n      Axios.get(\"fetch-requests\").then((res) => {\r\n        setRequests(res.data.docs);\r\n        alerts.alerts=res.data.docs\r\n      });\r\n  }, [auth.auth.role, loading, alerts]);\r\n\r\n  let alers =\r\n    requests.length > 0\r\n      ? requests.map((request) => {\r\n          return (\r\n            <div className={style.user} >\r\n              <img src={request.user.photo} className={style.user__image} onClick={()=>window.location.href=`/profile/${request.user.id}`} />\r\n              <div>\r\n                <div className={style.user__name} onClick={()=>window.location.href=`/profile/${request.user.id}`}>{request.user.username}</div>\r\n                <button\r\n                  className={style.accept}\r\n                  onClick={() => {\r\n                    setLoading(true);\r\n                    Axios.put(`approve?request=${request.id}`)\r\n                      .then((res) => {\r\n                        setLoading(false);\r\n                        console.log(res);\r\n                      })\r\n                      .catch((err) => {\r\n                        setLoading(false);\r\n                        console.log(err);\r\n                      });\r\n                  }}\r\n                >\r\n                  Accept\r\n                </button>\r\n                <button\r\n                  className={style.decline}\r\n                  onClick={() => {\r\n                    setLoading(true);\r\n                    Axios.put(`gymRefuse?request=${request.id}`)\r\n                      .then((res) => {\r\n                        setLoading(false);\r\n                        console.log(res);\r\n                      })\r\n                      .catch((err) => {\r\n                        setLoading(false);\r\n                        console.log(err);\r\n                      });\r\n                  }}\r\n                >\r\n                  Decline\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      : \"\";\r\n\r\n  if (loading) alers = <Spinner />;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header>\r\n        <nav className={style.navbar}>\r\n          <div className={style.toggler} onClick={() => props.openHandler()}>\r\n            <TocIcon />\r\n          </div>\r\n          <div className={`${style.brandlogo} mx-4`}>\r\n            {\" \"}\r\n            <img src={logo} alt=\"logo\" />\r\n          </div>\r\n          <div className={style.navbarlinks}>\r\n            {localStorage.getItem(\"token\") && auth.auth.role === \"trainee\" ? (\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/videoCategories\">categories</Link>\r\n                </li>\r\n\r\n                <li>\r\n                  <Link to=\"/searchTrainer\">trainers</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/searchTrainee\">Users</Link>\r\n                </li>\r\n              </ul>\r\n            ) : localStorage.getItem(\"token\") && auth.auth.role === \"gym\" ? (\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/videoCategories\">categories</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/approvedTrainees\">My Trainees</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/searchTrainer\">trainers</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/searchTrainee\">Users</Link>\r\n                </li>\r\n              </ul>\r\n            ) : (\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/contact\">contact us</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/about\">about</Link>\r\n                </li>\r\n              </ul>\r\n            )}\r\n          </div>\r\n          {localStorage.getItem(\"token\") && auth.auth.role === \"gym\" ? (\r\n            <div className={style.register}>\r\n              <span className={style.signup}>\r\n                <Link\r\n                  className={style.icons}\r\n                  onClick={() => {\r\n                    nav.current.style.display === \"none\"\r\n                      ? (nav.current.style.display = \"block\")\r\n                      : (nav.current.style.display = \"none\");\r\n                  }}\r\n                >\r\n                  <NotificationsNoneIcon />\r\n                  <span className={style.count}>{notifications}</span>\r\n                </Link>\r\n                {/* add hidden class ${style.hidden} */}\r\n                <div\r\n                  className={`${style.menu} `}\r\n                  style={{ display: \"none\" }}\r\n                  ref={nav}\r\n                >\r\n                  {alers}\r\n                </div>\r\n\r\n                <Link\r\n                  className={style.icons}\r\n                  onClick={() => {\r\n                    localStorage.removeItem(\"token\");\r\n                    return (window.location.href = \"/\");\r\n                  }}\r\n                >\r\n                  <ExitToAppIcon />\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          ) : localStorage.getItem(\"token\") && auth.auth.role === \"trainee\" ? (\r\n            <div className={style.register}>\r\n              <span className={style.signup}>\r\n                <Link to=\"/profile\" className={style.icons}>\r\n                  <FaceIcon />\r\n                </Link>\r\n                <Link\r\n                  className={style.icons}\r\n                  onClick={() => {\r\n                    localStorage.removeItem(\"token\");\r\n                    return (window.location.href = \"/\");\r\n                  }}\r\n                >\r\n                  <ExitToAppIcon />\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div className={style.register}>\r\n              <span className={style.login}>\r\n                <Link\r\n                  onClick={() => {\r\n                    props.openHandler2(\"/login\");\r\n                  }}\r\n                >\r\n                  login\r\n                </Link>\r\n              </span>\r\n              <span className={style.line}>&#124;</span>\r\n              <span className={style.signup}>\r\n                <Link\r\n                  onClick={() => {\r\n                    props.openHandler2(\"/chooseWay\");\r\n                  }}\r\n                >\r\n                  sign up\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          )}\r\n        </nav>\r\n      </header>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\approvedTrainees.jsx",["404"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport style from \"../assets/css/search.module.css\";\r\nimport TraineeCard from \"./TraineeCard\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nexport function Contact() {\r\n  const [trainees, setTrainees] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [loading2, setLoading2] = useState(false);\r\n\r\n  //pagination\r\n  const [page, setPage] = useState(1);\r\n  const handleChangePage = (event, value) => {\r\n    setPage(value);\r\n  };\r\n  ////\r\n\r\n  useEffect(() => {\r\n    setLoading2(true);\r\n\r\n    axios\r\n      .get(`/fetch-approved`)\r\n      .then((res) => {\r\n        setTrainees(res.data.docs);\r\n        setLoading2(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading2(false);\r\n        console.log(err);\r\n      });\r\n  }, [search]);\r\n\r\n  let out = (\r\n    <div className={style.cards}>\r\n      {trainees.length > 0\r\n        ? trainees.map((trainee) => {\r\n            return (\r\n              <TraineeCard\r\n                photo={trainee.user.photo}\r\n                username={trainee.user.username}\r\n                id={trainee.user.id}\r\n                key={trainee.user.id}\r\n                weights={trainee.user.weights}\r\n                heights={trainee.user.heights}\r\n                trainer={true}\r\n              />\r\n            );\r\n          })\r\n        : \"\"}\r\n    </div>\r\n  );\r\n  if (loading2) out = <Spinner />;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className={style.rating}>\r\n        <div className=\"container\">\r\n          {/* <div className={style.search}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search ...\"\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n          </div> */}\r\n          {out}\r\n        </div>\r\n        <div style={{ paddingTop: \"20px\" }}>\r\n          <Pagination\r\n            style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            page={page}\r\n            onChange={handleChangePage}\r\n            count={\r\n              trainees ? (trainees.docs ? parseInt(trainees.totalPages) : 1) : 1\r\n            }\r\n          />\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\searchTrainee.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\UI\\Spinner\\Spinner.js",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\chooseWay.js",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\TraineeCard.js",["405"],"import React from \"react\";\r\nimport s from \"../Pages/Profile/Profile.module.css\";\r\n\r\nfunction TraineeCard(props) {\r\n  return (\r\n    <div className={s.card_container}>\r\n      <div className={s.upper_container}>\r\n        <div className={s.image_container}>\r\n          <img src={props.photo} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={s.lower_container}>\r\n        <div>\r\n          <h3 style={{ lineHeight: \"initial\" }}>{props.username}</h3>\r\n          <div className={s.weight}>\r\n            <h4>\r\n              Before:{\" \"}\r\n              <span>\r\n                {\" \"}\r\n                {props.weights[0] ? props.weights[0].weight : \"begainer\"}{\" \"}\r\n              </span>{\" \"}\r\n              kg{\" \"}\r\n            </h4>\r\n            <h4>\r\n              After:{\" \"}\r\n              <span>\r\n                {\" \"}\r\n                {props.weights[props.weights.length - 1]\r\n                  ? props.weights[props.weights.length - 1].weight\r\n                  : \"begainer\"}{\" \"}\r\n              </span>{\" \"}\r\n              kg{\" \"}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n        <div className={s.points}>\r\n          🏆 Points: <span>50</span>\r\n        </div>\r\n        <div>\r\n          {!props.trainer ? (\r\n            <a href={`/profile/${props.id}`} className={s.btn}>\r\n              View profile\r\n            </a>\r\n          ) : (\r\n            <a href={`/addDite/${props.id}`} className={s.btn}>\r\n              Add Diet\r\n            </a>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TraineeCard;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\TrainerCard.js",["406","407","408"],"import React, { useContext, useState } from \"react\";\r\nimport s from \"../Pages/Profile/Profile.module.css\";\r\nimport Star from \"../images/Path 2171@2x.png\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport axios from \"axios\";\r\nimport authContext from \"../context/auth-context\";\r\n// axios;\r\nfunction TraineeCard(props) {\r\n  const [loadind, setLoading] = useState(false);\r\n  const auth = useContext(authContext);\r\n\r\n  let button = (\r\n    <div>\r\n      <a\r\n        href=\"#\"\r\n        className={s.btn}\r\n        onClick={() => {\r\n          if (props.requested&&auth.auth.role!=='gym') {\r\n            if (!props.requested.includes(auth.auth.id)) {\r\n              setLoading(true);\r\n              axios\r\n                .post(`request?gym=${props.id}`)\r\n                .then((res) => {\r\n                  props.load(loadind)\r\n                  setLoading(false);\r\n                  console.log(res);\r\n\r\n                })\r\n                .catch((err) => {\r\n                  setLoading(false);\r\n                  console.log(err);\r\n                });\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {props.requested&&auth.auth.role!=='gym' ? props.requested.includes(auth.auth.id)\r\n          ? \"requested\"\r\n          : \"Add Request\":''}\r\n      </a>\r\n    </div>\r\n  );\r\n  if (loadind) button = <Spinner btn={true} />;\r\n\r\n  return (\r\n    <div className={s.card_container}>\r\n      <div className={s.upper_container}>\r\n        <div className={s.image_container}>\r\n          <img src={props.photo} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={s.lower_container}>\r\n        <div>\r\n          <h3 style={{ lineHeight: \"initial\" }}>{props.username}</h3>\r\n        </div>\r\n        <div className={s.points}>\r\n          <img style={{ height: \"20px\" }} src={Star} /> Rating: <span>5</span>\r\n        </div>\r\n        {button}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TraineeCard;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\context\\alerts-context.js",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\chartjs.jsx",["409"],"import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = (props) => {\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  let current = props.currentWeek;\r\n\r\n  const options = {\r\n    animations: {\r\n      tension: {\r\n        duration: 5000,\r\n        easing: 'linear',\r\n        from: 1,\r\n        to: 0,\r\n        loop: true,\r\n      }\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            \r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.currentWeek) {\r\n      let a = [];\r\n      for (let i = 0; i < 7; i++) {\r\n        a.push(moment(current).format(\"YYYY/MM/DD\"));\r\n        current = moment(current).add(1, \"d\");\r\n      }\r\n\r\n      const d = {\r\n        labels: a,\r\n        datasets: [\r\n          {\r\n            label: \"Your Path\",\r\n            data: props.currentWeekWeight,\r\n            fill: false,\r\n            backgroundColor: \"#F20544\",\r\n            borderColor: \"#F20544\",\r\n          },\r\n          {\r\n            label: \"Perfect Path\",\r\n            data: props.currentWeekPerfectPath,\r\n            fill: false,\r\n            backgroundColor: \"black\",\r\n            borderColor: \"black\",\r\n          },\r\n        ],\r\n      };\r\n      setData(d);\r\n\r\n    }\r\n  }, [\r\n    props.currentWeekPerfectPath,\r\n    props.currentWeekWeight,\r\n    props.currentWeek,\r\n    \r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        <div\r\n          className=\"links\"\r\n          style={{ width: \"50%\", fontSize: \"1.2rem\", marginLeft: \"30px\" }}\r\n        >\r\n          A chart that shows you the difference between the rate of change of\r\n          your weight during a certain period of time and the normal rate that\r\n          you should follow\r\n        </div>\r\n      </div>\r\n      <Line data={data} options={options} type=\"line\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\forgetPassword.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\resetPassword.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\verifyEmail.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\signup.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\verify.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\foodPopup.jsx",["410","411","412"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport s from \"../Pages/Profile/Profile.module.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nfunction FoodPopup(props) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alCalories, setAlCalories] = useState(0);\r\n  let allCalories = 0;\r\n  // console.log(props.param)\r\n  // console.log(props.outer)\r\n  \r\n  useEffect(() => {\r\n    setCalPg(0);\r\n    setMyIngredients([]);\r\n    setAlCalories(0);\r\n    setSearch(\"\");\r\n  }, [props.food]);\r\n\r\n  useEffect(() => {\r\n    props.food.f.map((f) => {\r\n      allCalories +=\r\n        (parseFloat(f.food.cal) / parseFloat(f.food.gram)) *\r\n        parseFloat(f.grams);\r\n    });\r\n    setAlCalories(allCalories);\r\n  }, [props.food]);\r\n\r\n  const [search, setSearch] = useState();\r\n  const [response, setResponse] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`search-additions?food=${search}`)\r\n      .then((res) => {\r\n        setResponse(res.data.docs);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, [search]);\r\n\r\n  const [calPg, setCalPg] = useState(0);\r\n\r\n  const [myIngredients, setMyIngredients] = useState([]);\r\n\r\n  const clickIngredient = (ing) => {\r\n    if (\r\n      [ing, ...myIngredients].length === new Set([ing, ...myIngredients]).size\r\n    ) {\r\n      let calPerGrams = 0;\r\n      ing.userGrams = 1;\r\n      calPerGrams =\r\n        parseFloat(ing.cal).toPrecision(5) /\r\n        parseFloat(ing.gram).toPrecision(5);\r\n      var res = calPg + calPerGrams;\r\n\r\n      res = parseFloat(res);\r\n\r\n      setMyIngredients([...new Set([ing, ...myIngredients])]);\r\n\r\n      setCalPg(res);\r\n    }\r\n  };\r\n  const removeIngredient = (ing) => {\r\n    let calPerGrams = 0;\r\n    calPerGrams =\r\n      parseFloat(ing.cal).toPrecision(5) / parseFloat(ing.gram).toPrecision(5);\r\n\r\n    calPerGrams = calPerGrams * ing.userGrams;\r\n\r\n    if (parseFloat(calPg - calPerGrams) < 0.001) {\r\n      setCalPg(0);\r\n      setMyIngredients([]);\r\n    } else {\r\n      setCalPg(parseFloat(calPg - calPerGrams));\r\n\r\n      setMyIngredients(myIngredients.filter((i) => i._id !== ing._id));\r\n    }\r\n  };\r\n\r\n  const updateHandler = () => {\r\n    // console.log(allCalories <= calPg);\r\n    if (allCalories <= calPg) {\r\n      setLoading(true);\r\n      let arr = [];\r\n      myIngredients.map((i) => {\r\n        arr.push({\r\n          food: i._id,\r\n          grams: i.userGrams,\r\n        });\r\n      });\r\n      axios\r\n        .put(`updateAdd`, {\r\n          outerSystem: props.outer,\r\n          innerSystem: props.inner,\r\n          foodId: props.food._id,\r\n          food: arr,\r\n        })\r\n        .then((res) => {\r\n          //   setResponse(res.data.docs);\r\n          setCalPg(0);\r\n          setMyIngredients([]);\r\n          setAlCalories(0);\r\n          setLoading(false);\r\n          setSearch(\"\");\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          setLoading(false);\r\n          setSearch();\r\n          setCalPg(0);\r\n          setMyIngredients([]);\r\n          setAlCalories(0);\r\n        });\r\n    }\r\n  };\r\n\r\n  let table = (\r\n    <div style={{ color: \"#fff\" }}>\r\n      <input\r\n        style={{ margin: \" 0 auto\", display: \"block\", color: \"#fff\" }}\r\n        type=\"search\"\r\n        placeholder=\"Search For Food .. \"\r\n        onChange={(e) => {\r\n          return setSearch(e.target.value);\r\n        }}\r\n      />\r\n      <div className={s.Images__btns}>\r\n        <div className={s.additions}>\r\n          {response\r\n            ? response.map((r) => {\r\n                return (\r\n                  <button style={{ position: \"relative\", cursor: \"auto\" }}>\r\n                    {r.food}\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: \"1px\",\r\n                        right: \"1px\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() => clickIngredient(r)}\r\n                    >\r\n                      {\" \"}\r\n                      <AddIcon />\r\n                    </div>\r\n                  </button>\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n      <div className={s.myFood}>\r\n        <div className={s.myfood__name}>Current Food</div>\r\n        <div className={s.myfood__cal}>Current Calories</div>\r\n      </div>\r\n      <div className={s.myFood}>\r\n        <div>\r\n          {props.food.f.map((f) => {\r\n            return <button>{f.food.food}</button>;\r\n          })}\r\n        </div>\r\n        <div className={s.cal_num}>{alCalories}</div>\r\n        {/* <div>{calPg}</div> */}\r\n      </div>\r\n      <hr />\r\n      <div className={s.newFood}>\r\n        <div className={s.newFood__name}> New Food </div>\r\n        <div style={{ display: \"flex\" }}>\r\n          {\" \"}\r\n          {myIngredients.map((m) => (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <button\r\n                onClick={() => removeIngredient(m)}\r\n                style={{\r\n                  border: \"1px solid\",\r\n                  background: \"black\",\r\n                  color: \"#d9a404\",\r\n                  marginRight: \"5px\",\r\n                  marginBottom: \"5px\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {m.food}{\" \"}\r\n              </button>\r\n\r\n              <div style={{ display: \"flex\" }}>\r\n                {\" \"}\r\n                <span style={{ margin: \"0 5px\" }}>{m.userGrams}</span>{\" \"}\r\n                <input\r\n                  style={{ width: \"70px\", height: \"30px\" }}\r\n                  type=\"number\"\r\n                  defaultValue=\"1\"\r\n                  //   value={m.userGrams}\r\n                  onChange={(e) => {\r\n                    var indexOfStevie = myIngredients.findIndex(\r\n                      (i) => i._id === m._id\r\n                    );\r\n                    // console.log(indexOfStevie)\r\n                    let ings = myIngredients;\r\n                    let calo =\r\n                      calPg -\r\n                      ings[indexOfStevie].userGrams *\r\n                        (parseFloat(m.cal).toPrecision(5) /\r\n                          parseFloat(m.gram).toPrecision(5));\r\n                    ings[indexOfStevie].userGrams = e.target.value;\r\n                    ings[indexOfStevie].userGrams = e.target.value;\r\n                    setMyIngredients(ings);\r\n                    setCalPg(\r\n                      calo +\r\n                        ings[indexOfStevie].userGrams *\r\n                          (parseFloat(m.cal).toPrecision(5) /\r\n                            parseFloat(m.gram).toPrecision(5))\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}{\" \"}\r\n        </div>\r\n      </div>\r\n      <div className={s.newFood}>\r\n        <div className={s.newFood__cal}> New Calories</div>\r\n        <div className={s.newFood_cal_num}>\r\n          {parseFloat(calPg).toPrecision(5)}\r\n        </div>\r\n      </div>\r\n      {props.param ? (\r\n        \"\"\r\n      ) : (\r\n        <button\r\n          style={{\r\n            border: \"1px solid\",\r\n            background: \"black\",\r\n            color: \"#d9a404\",\r\n            marginRight: \"5px\",\r\n            marginBottom: \"5px\",\r\n            paddingRight: \"15px\",\r\n            paddingLeft: \"15px\",\r\n            display: \"block\",\r\n            margin: \"auto\",\r\n          }}\r\n          onClick={() => updateHandler()}\r\n        >\r\n          {\" \"}\r\n          Update Item{\" \"}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (loading) table = <Spinner />;\r\n\r\n  return table;\r\n}\r\n\r\nexport default FoodPopup;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\foodTable.jsx",["413","414","415"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport s from \"../Pages/Profile/Profile.module.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nfunction FoodPopup(props) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [alCalories, setAlCalories] = useState(0);\r\n  let allCalories = 0;\r\n  // console.log(props.param)\r\n  // console.log(props.outer)\r\n\r\n  useEffect(() => {\r\n    setCalPg(0);\r\n    setMyIngredients([]);\r\n    setAlCalories(0);\r\n    setSearch(\"\");\r\n  }, [props.food]);\r\n\r\n  useEffect(() => {\r\n    if (props.food) {\r\n      if (props.food.f) {\r\n        props.food.f.map((f) => {\r\n          allCalories +=\r\n            (parseFloat(f.food.cal) / parseFloat(f.food.gram)) *\r\n            parseFloat(f.grams);\r\n        });\r\n      }\r\n    }\r\n    setAlCalories(allCalories);\r\n  }, [props.food]);\r\n\r\n  const [search, setSearch] = useState();\r\n  const [response, setResponse] = useState();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`search-additions?food=${search}`)\r\n      .then((res) => {\r\n        setResponse(res.data.docs);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, [search]);\r\n\r\n  const [calPg, setCalPg] = useState(0);\r\n\r\n  const [myIngredients, setMyIngredients] = useState([]);\r\n\r\n  const clickIngredient = (ing) => {\r\n    if (\r\n      [ing, ...myIngredients].length === new Set([ing, ...myIngredients]).size\r\n    ) {\r\n      let calPerGrams = 0;\r\n      ing.userGrams = 1;\r\n      calPerGrams =\r\n        parseFloat(ing.cal).toPrecision(5) /\r\n        parseFloat(ing.gram).toPrecision(5);\r\n      var res = calPg + calPerGrams;\r\n\r\n      res = parseFloat(res);\r\n\r\n      setMyIngredients([...new Set([ing, ...myIngredients])]);\r\n\r\n      setCalPg(res);\r\n    }\r\n  };\r\n  const removeIngredient = (ing) => {\r\n    let calPerGrams = 0;\r\n    calPerGrams =\r\n      parseFloat(ing.cal).toPrecision(5) / parseFloat(ing.gram).toPrecision(5);\r\n\r\n    calPerGrams = calPerGrams * ing.userGrams;\r\n\r\n    if (parseFloat(calPg - calPerGrams) < 0.001) {\r\n      setCalPg(0);\r\n      setMyIngredients([]);\r\n    } else {\r\n      setCalPg(parseFloat(calPg - calPerGrams));\r\n\r\n      setMyIngredients(myIngredients.filter((i) => i._id !== ing._id));\r\n    }\r\n  };\r\n\r\n  const updateHandler = () => {\r\n    // console.log(allCalories <= calPg);\r\n    if (allCalories <= calPg) {\r\n      setLoading(true);\r\n      let arr = [];\r\n      myIngredients.map((i) => {\r\n        arr.push({\r\n          food: i._id,\r\n          grams: i.userGrams,\r\n        });\r\n      });\r\n        // console.log(myIngredients) \r\n        console.log(myIngredients)\r\n        setLoading(false)\r\n        // console.log(props.method)s\r\n      props.foodTable(myIngredients,props.method)\r\n    }\r\n  };\r\n  // console.log(props.food,props.method)\r\n  let table = (\r\n    <div style={{ color: \"#fff\" }}>\r\n      <input\r\n        style={{ margin: \" 0 auto\", display: \"block\", color: \"#fff\" }}\r\n        type=\"search\"\r\n        placeholder=\"Search For Food .. \"\r\n        onChange={(e) => {\r\n          return setSearch(e.target.value);\r\n        }}\r\n      />\r\n      <div className={s.Images__btns}>\r\n        <div className={s.additions}>\r\n          {response\r\n            ? response.map((r) => {\r\n                return (\r\n                  <button style={{ position: \"relative\", cursor: \"auto\" }}>\r\n                    {r.food}\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: \"1px\",\r\n                        right: \"1px\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={() => clickIngredient(r)}\r\n                    >\r\n                      {\" \"}\r\n                      <AddIcon />\r\n                    </div>\r\n                  </button>\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n      <div className={s.myFood}>\r\n        <div className={s.myfood__name}>Current Food</div>\r\n        <div className={s.myfood__cal}>Current Calories</div>\r\n      </div>\r\n      <div className={s.myFood}>\r\n        <div>\r\n          {props.food\r\n            ? props.food.f\r\n              ? props.food.f.map((f) => {\r\n                  return <button>{f.food.food}</button>;\r\n                })\r\n              : \"\"\r\n            : \"\"}\r\n        </div>\r\n        <div className={s.cal_num}>{alCalories}</div>\r\n        {/* <div>{calPg}</div> */}\r\n      </div>\r\n      <hr />\r\n      <div className={s.newFood}>\r\n        <div className={s.newFood__name}> New Food </div>\r\n        <div style={{ display: \"flex\" }}>\r\n          {\" \"}\r\n          {myIngredients.map((m) => (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <button\r\n                onClick={() => removeIngredient(m)}\r\n                style={{\r\n                  border: \"1px solid\",\r\n                  background: \"black\",\r\n                  color: \"#d9a404\",\r\n                  marginRight: \"5px\",\r\n                  marginBottom: \"5px\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                {m.food}{\" \"}\r\n              </button>\r\n\r\n              <div style={{ display: \"flex\" }}>\r\n                {\" \"}\r\n                <span style={{ margin: \"0 5px\" }}>{m.userGrams}</span>{\" \"}\r\n                <input\r\n                  style={{ width: \"70px\", height: \"30px\" }}\r\n                  type=\"number\"\r\n                  defaultValue=\"1\"\r\n                  //   value={m.userGrams}\r\n                  onChange={(e) => {\r\n                    var indexOfStevie = myIngredients.findIndex(\r\n                      (i) => i._id === m._id\r\n                    );\r\n                    // console.log(indexOfStevie)\r\n                    let ings = myIngredients;\r\n                    let calo =\r\n                      calPg -\r\n                      ings[indexOfStevie].userGrams *\r\n                        (parseFloat(m.cal).toPrecision(5) /\r\n                          parseFloat(m.gram).toPrecision(5));\r\n                    ings[indexOfStevie].userGrams = e.target.value;\r\n                    ings[indexOfStevie].userGrams = e.target.value;\r\n                    setMyIngredients(ings);\r\n                    setCalPg(\r\n                      calo +\r\n                        ings[indexOfStevie].userGrams *\r\n                          (parseFloat(m.cal).toPrecision(5) /\r\n                            parseFloat(m.gram).toPrecision(5))\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}{\" \"}\r\n        </div>\r\n      </div>\r\n      <div className={s.newFood}>\r\n        <div className={s.newFood__cal}> New Calories</div>\r\n        <div className={s.newFood_cal_num}>\r\n          {parseFloat(calPg).toPrecision(5)}\r\n        </div>\r\n      </div>\r\n      {props.param ? (\r\n        \"\"\r\n      ) : (\r\n        <button\r\n          style={{\r\n            border: \"1px solid\",\r\n            background: \"black\",\r\n            color: \"#d9a404\",\r\n            marginRight: \"5px\",\r\n            marginBottom: \"5px\",\r\n            paddingRight: \"15px\",\r\n            paddingLeft: \"15px\",\r\n            display: \"block\",\r\n            margin: \"auto\",\r\n          }}\r\n          onClick={() => updateHandler()}\r\n        >\r\n          {\" \"}\r\n          Update Item{\" \"}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (loading) table = <Spinner />;\r\n\r\n  return table;\r\n}\r\n\r\nexport default FoodPopup;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\video.jsx",["416"],"import React from \"react\";\r\nimport style from \"../assets/css/online.module.css\";\r\nimport vidIcon from \"../images/Path 20.svg\";\r\nimport star from \"../images/Path 2171.svg\";\r\n\r\nfunction video(props) {\r\n  return (\r\n    <div className={style.videos__child} onClick={()=>{\r\n      window.location.href=`/online/${props.id}`\r\n    }}>\r\n      <div className={style.videos__video}>\r\n        <div className={style.videos__image}>\r\n          <img src={props.image} alt=\"video\" className={style.videos__photo} />\r\n          <img src={vidIcon} alt=\"videoIcon\" className={style.videos__icon} />\r\n        </div>\r\n        <div className={style.videos__bio}>\r\n          <img src={props.photo} />\r\n          <div className={style.videos__about}>\r\n            <div className={style.videos__creatorName}>\r\n              <h3>{props.username}</h3>\r\n              <p>{props.createdAt}</p>\r\n            </div>\r\n\r\n            <p className={style.videos__info}>{props.title}</p>\r\n            <div className={style.videos__rating}>\r\n              <p>{props.views}</p>\r\n              <div>\r\n                {props.rating}\r\n                <img src={star} alt=\"star\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default video;\r\n","E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Components\\authentication\\login.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Helper\\shared\\shared.js",[],"E:\\FCI scu\\Graduation Project\\project\\main project\\Smart-Fitness-Gym\\src\\Helper\\Input\\Input.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\index.js",[],["417","418"],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\App.js",["419","420","421","422","423"],"import React, { useState, useCallback, useEffect, useContext } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Components/home\";\r\nimport Nav from \"./Components/navbar\";\r\nimport Contact from \"./Components/contactUs\";\r\nimport About from \"./Components/about\";\r\nimport Sidebar from \"./UI/Sidebar/Sidebar\";\r\nimport Backdrop from \"./UI/Backdrop/Backdrop\";\r\nimport PoPup from \"./UI/PoPup/PoPup\";\r\nimport Profile from \"./Components/Profile/Profile/Profile\";\r\nimport Online from \"./Components/online\";\r\nimport VideoCategory from \"./Components/videoCategories\";\r\nimport Videos from \"./Components/videos\";\r\nimport SearchTrainee from \"./Components/searchTrainee\";\r\nimport SearchTrainer from \"./Components/searchTrainer\";\r\nimport Axios from \"axios\";\r\nimport AuthCont from \"./context/auth-context\";\r\nimport Table from \"./Components/Table\";\r\nimport Approved from \"./Components/approvedTrainees\";\r\nimport AdminHome from \"./Components/Admin/Home\";\r\nimport AddTrainer from \"./Components/Admin/AddTrainer\";\r\nimport Chat from \"./Components/Chat/chat\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport io from \"socket.io-client\";\r\nimport Qr from \"./Components/QRCode/qrCode\";\r\n// import myTrainees from \"./Components/trainer/myTrainees\";\r\n\r\nfunction App() {\r\n  const [open, setOpen] = useState(false);\r\n  const [u, setU] = useState(false);\r\n  const [m, setM] = useState(false);\r\n  const [outer, setOuter] = useState(false);\r\n  const [inner, setInnre] = useState(false);\r\n  const [param, setParam] = useState(false);\r\n\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const [me, setMe] = useState({});\r\n\r\n  let Auth = useContext(AuthCont);\r\n\r\n  useEffect(() => {\r\n    async function getProfile() {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (token) {\r\n        const res = await Axios.get(\"profile\");\r\n        if (res.status === 200 || 201) {\r\n          Auth.isAuth = true;\r\n          Auth.auth = res.data;\r\n          setMe(res.data);\r\n          setIsAuth(true);\r\n        }\r\n      }\r\n    }\r\n    getProfile();\r\n  }, []);\r\n\r\n  const openHandler = useCallback(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  const closeHandler = useCallback(() => {\r\n    setOpen(false);\r\n  }, []);\r\n  const [open2, setOpen2] = useState(false);\r\n\r\n  const openHandler2 = useCallback((url, method, o, i, u) => {\r\n    setOpen2(true);\r\n    setU(url);\r\n    setM(method);\r\n    if (url === \"/food\" || url === \"/table\") {\r\n      setOuter(o);\r\n      setInnre(i);\r\n      setParam(u);\r\n    }\r\n  }, []);\r\n\r\n  const [foo, setFoo] = useState();\r\n\r\n  const foodTable = (f, method) => {\r\n    setFoo(f);\r\n    setM(method);\r\n  };\r\n\r\n  const closeHandler2 = useCallback(() => {\r\n    setOpen2(false);\r\n  }, []);\r\n\r\n  const [socket, setSocket] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   const s = io(\"https://smartfitnessgym.herokuapp.com/chat\");\r\n  //   s.on(\"connect\", () => {\r\n  //     s.emit(\"authenticate\", { token: localStorage.getItem(\"token\") });\r\n  //   });\r\n\r\n  //   setSocket(s);\r\n  // }, []);\r\n\r\n  // console.log(me.role)\r\n  return (\r\n    <React.Fragment>\r\n      <BrowserRouter>\r\n        <Nav openHandler={openHandler} openHandler2={openHandler2} />\r\n        <Backdrop\r\n          open={open}\r\n          clickHandler={openHandler}\r\n          closeHandler={closeHandler}\r\n          closeHandler2={closeHandler2}\r\n        />\r\n        <Sidebar\r\n          open={open}\r\n          clickHandler={openHandler}\r\n          closeHandler={closeHandler}\r\n        />\r\n        {/* <Route exact path=\"/AdminHome\" component={AdminHome} /> */}\r\n        {/* <Route exact path=\"/AddTrainer\" component={AddTrainer} /> */}\r\n        <PoPup\r\n          open={open2}\r\n          url={u}\r\n          method={m}\r\n          outer={outer}\r\n          inner={inner}\r\n          param={param}\r\n          clickHandler2={openHandler2}\r\n          closeHandler={closeHandler2}\r\n          foodTable={foodTable}\r\n        />\r\n        {isAuth && me.role === \"trainee\" ? (\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Home closeHandler2={closeHandler2} {...props} />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/profile\"\r\n              render={(props) => (\r\n                <Profile\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/profile/:id\"\r\n              render={(props) => (\r\n                <Profile\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route exact path=\"/searchTrainee\" component={SearchTrainee} />\r\n            {/* <Route exact path=\"/chat\" component={Chat} /> */}\r\n            <Route exact path=\"/searchTrainer\" component={SearchTrainer} />\r\n            <Route exact path=\"/online/:id\" component={Online} />\r\n            <Route exact path=\"/videoCategories\" component={VideoCategory} />\r\n            <Route exact path=\"/Videos/:id\" component={Videos} />\r\n          </Switch>\r\n        ) : isAuth && me.role === \"gym\" ? (\r\n          <Switch>\r\n            <Route exact path=\"/Qr\" component={Qr} />\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Home closeHandler2={closeHandler2} {...props} />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              exact\r\n              path=\"/profile/:id\"\r\n              render={(props) => (\r\n                <Profile\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route exact path=\"/searchTrainee\" component={SearchTrainee} />\r\n            {/* <Route exact path=\"/myTrainees\" component={myTrainees} /> */}\r\n            <Route exact path=\"/chat\" component={Chat} />\r\n            <Route exact path=\"/approvedTrainees\" component={Approved} />\r\n            <Route exact path=\"/searchTrainer\" component={SearchTrainer} />\r\n            <Route exact path=\"/online/:id\" component={Online} />\r\n            <Route exact path=\"/videoCategories\" component={VideoCategory} />\r\n            <Route exact path=\"/Videos/:id\" component={Videos} />\r\n            <Route\r\n              exact\r\n              path=\"/addDite/:id\"\r\n              render={(props) => (\r\n                <Table\r\n                  closeHandler2={closeHandler2}\r\n                  openHandler2={openHandler2}\r\n                  open2={open2}\r\n                  food={foo}\r\n                  method={m}\r\n                  id={outer}\r\n                  {...props}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        ) : isAuth && me.role === \"admin\" ? (\r\n          <Switch>\r\n            <Route exact path=\"/AdminHome\" component={AdminHome} />\r\n            <Route exact path=\"/AddTrainer\" component={AddTrainer} />\r\n          </Switch>\r\n        ) : (\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Home closeHandler2={closeHandler2} {...props} />\r\n              )}\r\n            />\r\n            <Route exact path=\"/contact\" component={Contact} />\r\n            <Route exact path=\"/about\" component={About} />\r\n            <Route exact path=\"/AddTrainer\" component={AddTrainer} />\r\n          </Switch>\r\n        )}\r\n      </BrowserRouter>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\UI\\Sidebar\\Sidebar.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\UI\\Backdrop\\Backdrop.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Table.js",["424","425","426","427","428","429","430","431"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport style from \"../assets/css/table.module.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\n\r\nfunction Table(props) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const table = useRef();\r\n\r\n  const [loadind, setLoading] = useState(false);\r\n\r\n\r\n  const [fields1, setFields1] = useState([{ value: null, value1: null }]);\r\n\r\n  function handleChange1(i, event, l) {\r\n    const values = [...fields1];\r\n    if (l === 1) {\r\n      values[i].value1 = event.target.value;\r\n    } else {\r\n      values[i].value = event.target.value;\r\n    }\r\n    setFields1(values);\r\n  }\r\n\r\n  function handleAdd1() {\r\n    const values = [...fields1];\r\n    values.push({ value: null, value1: null });\r\n    setFields1(values);\r\n  }\r\n\r\n  function handleRemove1(i) {\r\n    const values = [...fields1];\r\n    values.splice(i, 1);\r\n    setFields1(values);\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    let l = document.getElementsByTagName(\"td\");\r\n    for (let i = 0; i < l.length; i++) {\r\n      if (l[i]) {\r\n        l[i].addEventListener(\"click\", (e) => {\r\n          props.openHandler2(\"/table\", i);\r\n        });\r\n      }\r\n    }\r\n  }, []);\r\n  //   console.log(props.food, props.method);\r\n\r\n  useEffect(() => {\r\n    let l = document.getElementsByTagName(\"td\");\r\n\r\n    let arr = [];\r\n    let ids = [];\r\n    let grams = [];\r\n    if (props.food) {\r\n      props.food.map((f) => {\r\n        arr.push(f.food);\r\n        ids.push(f._id);\r\n        grams.push(f.userGrams);\r\n      });\r\n      l[props.method].textContent = arr.join(\",\");\r\n      let food = [];\r\n      for (let i = 0; i < grams.length; i++) {\r\n        food.push({ grams: grams[i], food: ids[i] });\r\n      }\r\n      l[props.method].special_attribute = food;\r\n      //   console.log(props.method)\r\n      //   console.log(l[props.method].special_attribute)\r\n    }\r\n  }, [props.food]);\r\n\r\n  const addHandler = () => {\r\n    setLoading(true);\r\n    let system = [];\r\n    let l = document.getElementsByTagName(\"td\");\r\n    let time = document.getElementsByClassName(\"time\");\r\n    let days = document.getElementsByClassName(\"day\");\r\n    for (let i = 0; i < 7; i++) {\r\n      system[i] = new Object();\r\n      system[i][\"name\"] = days[i].textContent;\r\n      system[i][\"sys\"] = new Array();\r\n\r\n      for (let j = 0; j < 5; j++) {\r\n        system[i].sys[j] = new Object();\r\n        system[i].sys[j][\"time\"] = time[j].textContent;\r\n        system[i].sys[j][\"f\"] = new Array();\r\n        system[i].sys[j][\"f\"] = l[j * 7 + i].special_attribute;\r\n      }\r\n    }\r\n    axios\r\n      .put(`put-system?user=${props.match.params.id}`,{\r\n        system:{\r\n          date:moment(startDate).utc(),\r\n          system\r\n        }\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setLoading(false);\r\n        // window.location.href = `/addDite/${props.match.params.id}`;\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  let tab = (\r\n    <table class={style.table} ref={table}>\r\n      <thead>\r\n        <th />\r\n        <th className=\"day\">saturday</th>\r\n        <th className=\"day\">sunday</th>\r\n        <th className=\"day\">monday</th>\r\n        <th className=\"day\">tuesday</th>\r\n        <th className=\"day\">wednesday</th>\r\n        <th className=\"day\">thursday</th>\r\n        <th className=\"day\">friday</th>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th className=\"time\">8 Am</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th className=\"time\">11 Am</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th className=\"time\">3 Pm</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th className=\"time\">5 Pm</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th className=\"time\">7 Pm</th>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n          <td data-label></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n  if (loadind) tab = <Spinner />;\r\n  return (\r\n    <div className={style.Table}>\r\n      <h2 class={style.section_title}>Creat Diet Plan</h2>\r\n\r\n      <button type=\"button\" onClick={() => handleAdd1()} className=\"add\">\r\n          +\r\n        </button>\r\n        {fields1.length > 1\r\n          ? fields1.map((field, idx) => {\r\n              if (idx !== 1) {\r\n                return (\r\n                  <div\r\n                    key={`${field}-${idx}`}\r\n                    style={{ display: \"flex\", alignItems: \"center\" }}\r\n                  >\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Add Weight\"\r\n                      className=\"Modal__input\"\r\n                      value={field.value || \"\"}\r\n                      onChange={(e) => handleChange1(idx, e)}\r\n                      style={{ marginRight: \"3px\" }}\r\n                    />\r\n                    {/* <input\r\n                      type=\"number\"\r\n                      placeholder=\"Add Date\"\r\n                      className=\"Modal__input\"\r\n                      value={field.value1 || \"\"}\r\n                      onChange={(e) => handleChange1(idx, e, 1)}\r\n                      style={{ marginRight: \"3px\" }}\r\n                    /> */}\r\n                     <div class={style.diet_date}>\r\n        <DatePicker\r\n          // selected={startDate}\r\n          value={field.value1 || \"\"}\r\n          onChange={(e) => handleChange1(idx, e, 1)}\r\n        />\r\n      </div>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleRemove1(idx)}\r\n                      className=\"remove\"\r\n                    >\r\n                      X\r\n                    </button>\r\n                  </div>\r\n                );\r\n              }\r\n            })\r\n          : \"\"}\r\n\r\n      {/* <div class={style.diet_plan}>\r\n        <label for=\"\"> diet plan </label>\r\n        <select>\r\n          <option value=\"intermittent\"> intermittent fasting</option>\r\n          <option value=\"hamada\"> hamada</option>\r\n          <option value=\"aboahmed\"> aboahmed</option>\r\n        </select>\r\n      </div> */}\r\n\r\n      <div class={style.diet_date}>\r\n        <DatePicker\r\n          selected={startDate}\r\n          onChange={(date) => setStartDate(date)}\r\n        />\r\n      </div>\r\n\r\n      {tab}\r\n      <button className={style.btn} onClick={() => addHandler()}>add</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\context\\auth-context.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\about.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\UI\\PoPup\\PoPup.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\contactUs.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\videoCategories.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\home.jsx",["432"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport style from '../assets/css/home.module.css';\r\nimport Star from '../images/svg/star.svg';\r\nimport Wave1 from '../images/svg/wave-1.svg';\r\nimport Wave2 from '../images/svg/wave-2.svg';\r\nimport QR from '../images/svg/qr.svg';\r\nimport gym1 from '../images/gym-1.jpg';\r\nimport gym2 from '../images/gym-2.jpg';\r\nimport gym3 from '../images/gym-3.jpg';\r\nimport join from '../images/join-now.jpg';\r\n// import doctor from \"../images/doctor.png\";\r\nimport caption from '../images/Logo/icon-caption.png';\r\nimport icon from '../images/Logo/icon.png';\r\nimport hover from '../images/Logo/icon-hover.png';\r\nimport Doc from '../images/svg/doctor.svg';\r\n\r\nexport class Home extends Component {\r\n\tcomponentDidMount() {\r\n\t\taxios\r\n\t\t\t.get('profile')\r\n\t\t\t.then((res) => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tuser: res.data\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\t// if (this.state.user) {\r\n\t\t//   return (\r\n\t\t//     <div className=\"conatiner mt-5\">\r\n\t\t//       <h2> You are login successfully </h2>\r\n\t\t//       <h3>Welcome, {this.state.user.username}</h3>\r\n\t\t//     </div>\r\n\t\t//   )\r\n\t\t// }\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<section id=\"top\" onClick={() => this.props.closeHandler2()}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tid=\"carouselExampleControls\"\r\n\t\t\t\t\t\tclassName=\"carousel slide\"\r\n\t\t\t\t\t\tdata-bs-ride=\"carousel\"\r\n\t\t\t\t\t\tonClick={() => this.props.closeHandler2()}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<div className=\"carousel-inner\">\r\n\t\t\t\t\t\t\t<div className=\"carousel-item active\">\r\n\t\t\t\t\t\t\t\t<div className={`${style.images} ${style.image1}`} />\r\n\r\n\t\t\t\t\t\t\t\t<div className={`${style.fcaption} ${style.fade}`}>\r\n\t\t\t\t\t\t\t\t\t<h3>play your favorite workout</h3>\r\n\t\t\t\t\t\t\t\t\t<div className={style.btncontainer}>\r\n\t\t\t\t\t\t\t\t\t\t<button className={style.fbtn}>get in contact</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className={style.fbtn}>learn more</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"carousel-item\">\r\n\t\t\t\t\t\t\t\t<div className={`${style.images} ${style.image2}`} />\r\n\r\n\t\t\t\t\t\t\t\t<div className={style.scaption}>\r\n\t\t\t\t\t\t\t\t\t<h3>Take the next step to be more fit</h3>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tOnline personal training makes it easy to fit a good workout into any routine.\r\n\t\t\t\t\t\t\t\t\t\tGet a small portion of the time and dedicate it to your health and fitness. You\r\n\t\t\t\t\t\t\t\t\t\tdeserve it, and we can't wait to meet you.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className={style.btncontainer}>\r\n\t\t\t\t\t\t\t\t\t\t<button className={style.sbtn}>View Schedule</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className={style.sbtn}>Tutorial</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"carousel-item\">\r\n\t\t\t\t\t\t\t\t<div className={`${style.images} ${style.image3}`} />\r\n\r\n\t\t\t\t\t\t\t\t<div className={style.tcaption}>\r\n\t\t\t\t\t\t\t\t\t<h3>Have you ever felt bored with the diet ?</h3>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\twe will suggest alternatives to you with the same number of calories for fruits\r\n\t\t\t\t\t\t\t\t\t\tand vegetables that you want to change in easy ways\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<button className={style.tbtn}>learn more</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"carousel-item\">\r\n\t\t\t\t\t\t\t\t<div className={`${style.images} ${style.image4}`} />\r\n\r\n\t\t\t\t\t\t\t\t<div className={style.ftcaption}>\r\n\t\t\t\t\t\t\t\t\t<h3>Have trouble getting to the nearest gymnasium ?</h3>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tYou can find the nearest gym and set directions to go there using Google Maps.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t<div className={style.link}>\r\n\t\t\t\t\t\t\t\t\t\t<a href=\"#\"> learn more</a>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\tclassName={`${style['carousel-control-prev']}`}\r\n\t\t\t\t\t\t\thref=\"#carouselExampleControls\"\r\n\t\t\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\t\t\tdata-bs-slide=\"prev\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className=\"carousel-control-prev-icon\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\tclassName={`${style['carousel-control-next']}`}\r\n\t\t\t\t\t\t\thref=\"#carouselExampleControls\"\r\n\t\t\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\t\t\tdata-bs-slide=\"next\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<span className=\"carousel-control-next-icon\" />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t<section className={style.recommend}>\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<div className={style.qrsection}>\r\n\t\t\t\t\t\t\t<img src={QR} alt=\"qr-code\" className={style.qrimg} />\r\n\t\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\t\tyou can scan QR-code which available on sports machines, and We show him the correct way\r\n\t\t\t\t\t\t\t\tto perform this exercise.\r\n\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button className={style.qrbtn}>learn more</button>\r\n\t\t\t\t\t\t<h2>Recommended gym for you</h2>\r\n\r\n\t\t\t\t\t\t<div className={style.cards}>\r\n\t\t\t\t\t\t\t<div className={style.card}>\r\n\t\t\t\t\t\t\t\t<img src={gym1} alt=\"gym\" className={style.cardimg} />\r\n\r\n\t\t\t\t\t\t\t\t<div className={style.cardcaption}>\r\n\t\t\t\t\t\t\t\t\t<h3>Elsheik zayed city</h3>\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t<img src={Star} alt=\"stars\" className={style.svg} />\r\n\t\t\t\t\t\t\t\t\t\t<img src={Star} alt=\"stars\" className={style.svg} />\r\n\t\t\t\t\t\t\t\t\t\t<img src={Star} alt=\"stars\" className={style.svg} />\r\n\t\t\t\t\t\t\t\t\t\t<img src={Star} alt=\"stars\" className={style.svg} />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={style.card}>\r\n\t\t\t\t\t\t\t\t<img src={gym2} alt=\"gym\" className={style.cardimg} />\r\n\r\n\t\t\t\t\t\t\t\t<div className={style.cardcaption}>\r\n\t\t\t\t\t\t\t\t\t<h3>Elsheik zayed city</h3>\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t<img src={Star} alt=\"stars\" className={style.svg} />\r\n\t\t\t\t\t\t\t\t\t\t<img src={Star} alt=\"stars\" className={style.svg} />\r\n\t\t\t\t\t\t\t\t\t\t<img src={Star} alt=\"stars\" className={style.svg} />\r\n\t\t\t\t\t\t\t\t\t\t<img src={Star} alt=\"stars\" className={style.svg} />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className={style.card}>\r\n\t\t\t\t\t\t\t\t<img src={gym3} alt=\"gym\" className={style.cardimg} />\r\n\t\t\t\t\t\t\t\t<div className={style.cardcaption}>\r\n\t\t\t\t\t\t\t\t\t<h3>Elsheik zayed city</h3>\r\n\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t<img src={Star} alt=\"stars\" className={style.svg} />\r\n\t\t\t\t\t\t\t\t\t\t<img src={Star} alt=\"stars\" className={style.svg} />\r\n\t\t\t\t\t\t\t\t\t\t<img src={Star} alt=\"stars\" className={style.svg} />\r\n\t\t\t\t\t\t\t\t\t\t<img src={Star} alt=\"stars\" className={style.svg} />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t<div className={style.onlinetraining}>\r\n\t\t\t\t\t<div className={`container ${style.flexsection}`}>\r\n\t\t\t\t\t\t<div className={style.textsection}>\r\n\t\t\t\t\t\t\t<h2>online training</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\tLive training is the best way to make exercises at home to keep fit and improve personal\r\n\t\t\t\t\t\t\t\tfitness and health, Since the workout sessions aren’t done in person, you can choose to\r\n\t\t\t\t\t\t\t\tworkout anytime you like. We’re all busy. You don’t want to have to coordinate schedules\r\n\t\t\t\t\t\t\t\twith someone who trains in a gym across town, or rush to and from work to get to the\r\n\t\t\t\t\t\t\t\tgym. Another bonus is that many online workouts contain a lot of bodyweight exercises,\r\n\t\t\t\t\t\t\t\twhich can be completed at home.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={style.joinnow}>\r\n\t\t\t\t\t\t\t<img src={join} alt=\"join now\" />\r\n\t\t\t\t\t\t\t<div className={style.hover}>\r\n\t\t\t\t\t\t\t\t<h4>just sign up </h4>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tOnline training is the best way to make exercises at home to keep fit and improve\r\n\t\t\t\t\t\t\t\t\tpersonal fitness and health, Since the workout sessions aren’t done in person, you\r\n\t\t\t\t\t\t\t\t\tcan choose to workout anytime you like.\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={style.waveone}>\r\n\t\t\t\t\t<img src={Wave1} alt=\"wave\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={style.wavetwo}>\r\n\t\t\t\t\t<img src={Wave2} alt=\"wave\" />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={style.askdoctor}>\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<img src={Doc} alt=\"doctor\" />\r\n\t\t\t\t\t\t<div className={style.asktext}>\r\n\t\t\t\t\t\t\t<h2>ask doctor</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tIf you want to communicate with a doctor, gym trainer, or a nutritionist you can do this\r\n\t\t\t\t\t\t\t\t, just signup and the official will respond to you with a diet suitable for your\r\n\t\t\t\t\t\t\t\tcondition\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<footer className=\"links\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li className={style.icon}>\r\n\t\t\t\t\t\t\t<img src={icon} alt=\"icon\" />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className={style.iconhover}>\r\n\t\t\t\t\t\t\t<img src={hover} alt=\"icon-hover\" />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<div className={style.iconcaption}>\r\n\t\t\t\t\t\t<img src={caption} alt=\"icon-caption\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t&copy;\r\n\t\t\t\t\t\t<script>document.write(new Date().getFullYear());</script> team work smart fitness system .\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>&ldquo;its going to be hard, but hard is not impossible.&rdquo; &mdash; Project owners</p>\r\n\t\t\t\t</footer>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\navbar.jsx",["433"],"import React, { useEffect, useRef, useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../images/Logo/icon.png\";\r\nimport style from \"../assets/css/navbar.module.css\";\r\nimport TocIcon from \"@material-ui/icons/Toc\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport Axios from \"axios\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport Spinner from \"../UI/Spinner/Spinner\";\r\nimport AlertContext from '../context/alerts-context'\r\n\r\nexport const Nav = (props) => {\r\n  const nav = useRef();\r\n\r\n  const auth = useContext(AuthContext);\r\n  const alerts=useContext(AlertContext)\r\n\r\n  const [notifications, setNotifications] = useState(0);\r\n\r\n  const [requests, setRequests] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    if (auth.auth.role === \"gym\")\r\n      Axios.get(\"count-requests\").then((res) => {\r\n        setNotifications(res.data);\r\n      });\r\n  }, [auth.auth.role, loading,alerts]);\r\n  useEffect(() => {\r\n    if (auth.auth.role === \"gym\")\r\n      Axios.get(\"fetch-requests\").then((res) => {\r\n        setRequests(res.data.docs);\r\n        alerts.alerts=res.data.docs\r\n      });\r\n  }, [auth.auth.role, loading, alerts]);\r\n\r\n  let alers =\r\n    requests.length > 0\r\n      ? requests.map((request) => {\r\n          return (\r\n            <div className={style.user} >\r\n              <img src={request.user.photo} className={style.user__image} onClick={()=>window.location.href=`/profile/${request.user.id}`} />\r\n              <div>\r\n                <div className={style.user__name} onClick={()=>window.location.href=`/profile/${request.user.id}`}>{request.user.username}</div>\r\n                <button\r\n                  className={style.accept}\r\n                  onClick={() => {\r\n                    setLoading(true);\r\n                    Axios.put(`approve?request=${request.id}`)\r\n                      .then((res) => {\r\n                        setLoading(false);\r\n                        console.log(res);\r\n                      })\r\n                      .catch((err) => {\r\n                        setLoading(false);\r\n                        console.log(err);\r\n                      });\r\n                  }}\r\n                >\r\n                  Accept\r\n                </button>\r\n                <button\r\n                  className={style.decline}\r\n                  onClick={() => {\r\n                    setLoading(true);\r\n                    Axios.put(`gymRefuse?request=${request.id}`)\r\n                      .then((res) => {\r\n                        setLoading(false);\r\n                        console.log(res);\r\n                      })\r\n                      .catch((err) => {\r\n                        setLoading(false);\r\n                        console.log(err);\r\n                      });\r\n                  }}\r\n                >\r\n                  Decline\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      : \"\";\r\n\r\n  if (loading) alers = <Spinner />;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <header>\r\n        <nav className={style.navbar}>\r\n          <div className={style.toggler} onClick={() => props.openHandler()}>\r\n            <TocIcon />\r\n          </div>\r\n          <div className={`${style.brandlogo} mx-4`}>\r\n            {\" \"}\r\n            <img src={logo} alt=\"logo\" />\r\n          </div>\r\n          <div className={style.navbarlinks}>\r\n            {localStorage.getItem(\"token\") && auth.auth.role === \"trainee\" ? (\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/videoCategories\">categories</Link>\r\n                </li>\r\n\r\n                <li>\r\n                  <Link to=\"/searchTrainer\">trainers</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/searchTrainee\">Users</Link>\r\n                </li>\r\n              </ul>\r\n            ) : localStorage.getItem(\"token\") && auth.auth.role === \"gym\" ? (\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/videoCategories\">categories</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/approvedTrainees\">My Trainees</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/searchTrainer\">trainers</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/searchTrainee\">Users</Link>\r\n                </li>\r\n              </ul>\r\n            ) : (\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">home</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/contact\">contact us</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to=\"/about\">about</Link>\r\n                </li>\r\n              </ul>\r\n            )}\r\n          </div>\r\n          {localStorage.getItem(\"token\") && auth.auth.role === \"gym\" ? (\r\n            <div className={style.register}>\r\n              <span className={style.signup}>\r\n                <Link\r\n                  className={style.icons}\r\n                  onClick={() => {\r\n                    nav.current.style.display === \"none\"\r\n                      ? (nav.current.style.display = \"block\")\r\n                      : (nav.current.style.display = \"none\");\r\n                  }}\r\n                >\r\n                  <NotificationsNoneIcon />\r\n                  <span className={style.count}>{notifications}</span>\r\n                </Link>\r\n                {/* add hidden class ${style.hidden} */}\r\n                <div\r\n                  className={`${style.menu} `}\r\n                  style={{ display: \"none\" }}\r\n                  ref={nav}\r\n                >\r\n                  {alers}\r\n                </div>\r\n\r\n                <Link to=\"/chat\" className={style.icons}>\r\n                  <ChatIcon />\r\n                </Link>\r\n\r\n                <Link\r\n                  className={style.icons}\r\n                  onClick={() => {\r\n                    localStorage.removeItem(\"token\");\r\n                    return (window.location.href = \"/\");\r\n                  }}\r\n                >\r\n                  <ExitToAppIcon />\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          ) : localStorage.getItem(\"token\") && auth.auth.role === \"trainee\" ? (\r\n            <div className={style.register}>\r\n              <span className={style.signup}>\r\n\r\n                <Link to=\"/chat\" className={style.icons}>\r\n                  <ChatIcon />\r\n                </Link>\r\n                <Link to=\"/profile\" className={style.icons}>\r\n                  <FaceIcon />\r\n                </Link>\r\n                <Link\r\n                  className={style.icons}\r\n                  onClick={() => {\r\n                    localStorage.removeItem(\"token\");\r\n                    return (window.location.href = \"/\");\r\n                  }}\r\n                >\r\n                  <ExitToAppIcon />\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div className={style.register}>\r\n              <span className={style.login}>\r\n                <Link\r\n                  onClick={() => {\r\n                    props.openHandler2(\"/login\");\r\n                  }}\r\n                >\r\n                  login\r\n                </Link>\r\n              </span>\r\n              <span className={style.line}>&#124;</span>\r\n              <span className={style.signup}>\r\n                <Link\r\n                  onClick={() => {\r\n                    props.openHandler2(\"/chooseWay\");\r\n                  }}\r\n                >\r\n                  sign up\r\n                </Link>\r\n              </span>\r\n            </div>\r\n          )}\r\n        </nav>\r\n      </header>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\videos.jsx",["434","435","436"],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\searchTrainee.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\searchTrainer.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\online.jsx",["437","438","439","440"],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\approvedTrainees.jsx",["441"],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\UI\\Spinner\\Spinner.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\context\\alerts-context.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\chooseWay.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\TraineeCard.js",["442"],"import React from 'react';\r\nimport s from './Profile/Profile/Profile.module.css';\r\n\r\nfunction TraineeCard(props) {\r\n\treturn (\r\n\t\t<div className={s.card_container}>\r\n\t\t\t<div className={s.upper_container}>\r\n\t\t\t\t<div className={s.image_container}>\r\n\t\t\t\t\t<img src={props.photo} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.lower_container}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 style={{ lineHeight: 'initial' }}>{props.username}</h3>\r\n\t\t\t\t\t<div className={s.weight}>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tBefore: <span> {props.weights[0] ? props.weights[0].weight : 'begainer'} </span> kg{' '}\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t<h4>\r\n\t\t\t\t\t\t\tAfter:{' '}\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{props.weights[props.weights.length - 1] ? (\r\n\t\t\t\t\t\t\t\t\tprops.weights[props.weights.length - 1].weight\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t'begainer'\r\n\t\t\t\t\t\t\t\t)}{' '}\r\n\t\t\t\t\t\t\t</span>{' '}\r\n\t\t\t\t\t\t\tkg{' '}\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.points}>\r\n\t\t\t\t\t🏆 Points: <span>50</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{!props.trainer ? (\r\n\t\t\t\t\t\t<a href={`/profile/${props.id}`} className={s.btn}>\r\n\t\t\t\t\t\t\tView profile\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<a href={`/addDite/${props.id}`} className={s.btn}>\r\n\t\t\t\t\t\t\tAdd Diet\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TraineeCard;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\TrainerCard.js",["443","444","445"],"import React, { useContext, useState } from 'react';\r\nimport s from './Profile/Profile/Profile.module.css';\r\nimport Star from '../images/Path 2171@2x.png';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\nimport axios from 'axios';\r\nimport authContext from '../context/auth-context';\r\n// axios;\r\nfunction TraineeCard(props) {\r\n\tconst [ loadind, setLoading ] = useState(false);\r\n\tconst auth = useContext(authContext);\r\n\r\n\tlet button = (\r\n\t\t<div>\r\n\t\t\t<a\r\n\t\t\t\thref=\"#\"\r\n\t\t\t\tclassName={s.btn}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tif (props.requested && auth.auth.role !== 'gym') {\r\n\t\t\t\t\t\tif (!props.requested.includes(auth.auth.id)) {\r\n\t\t\t\t\t\t\tsetLoading(true);\r\n\t\t\t\t\t\t\taxios\r\n\t\t\t\t\t\t\t\t.post(`request?gym=${props.id}`)\r\n\t\t\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\t\t\tprops.load(loadind);\r\n\t\t\t\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{props.requested && auth.auth.role !== 'gym' ? props.requested.includes(auth.auth.id) ? (\r\n\t\t\t\t\t'requested'\r\n\t\t\t\t) : (\r\n\t\t\t\t\t'Add Request'\r\n\t\t\t\t) : (\r\n\t\t\t\t\t''\r\n\t\t\t\t)}\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t);\r\n\tif (loadind) button = <Spinner btn={true} />;\r\n\r\n\treturn (\r\n\t\t<div className={s.card_container}>\r\n\t\t\t<div className={s.upper_container}>\r\n\t\t\t\t<div className={s.image_container}>\r\n\t\t\t\t\t<img src={props.photo} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.lower_container}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3 style={{ lineHeight: 'initial' }}>{props.username}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.points}>\r\n\t\t\t\t\t<img style={{ height: '20px' }} src={Star} /> Rating: <span>5</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t{button}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TraineeCard;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\chartjs.jsx",["446"],"import moment from \"moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = (props) => {\r\n  const [data, setData] = useState({});\r\n\r\n  let current = props.currentWeek;\r\n\r\n  const options = {\r\n    animations: {\r\n      tension: {\r\n        duration: 5000,\r\n        easing: \"linear\",\r\n        from: 1,\r\n        to: 0,\r\n        loop: true,\r\n      },\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.currentWeek) {\r\n      let a = [];\r\n      for (let i = 0; i < 7; i++) {\r\n        a.push(moment(current).format(\"YYYY/MM/DD\"));\r\n        current = moment(current).add(1, \"d\");\r\n      }\r\n\r\n      const d = {\r\n        labels: a,\r\n        datasets: [\r\n          {\r\n            label: \"Your Path\",\r\n            data: props.currentWeekWeight,\r\n            fill: false,\r\n            backgroundColor: \"#F20544\",\r\n            borderColor: \"#F20544\",\r\n          },\r\n          {\r\n            label: \"Perfect Path\",\r\n            data: props.currentWeekPerfectPath,\r\n            fill: false,\r\n            backgroundColor: \"black\",\r\n            borderColor: \"black\",\r\n          },\r\n        ],\r\n      };\r\n      setData(d);\r\n    }\r\n  }, [\r\n    props.currentWeekPerfectPath,\r\n    props.currentWeekWeight,\r\n    props.currentWeek,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"header\">\r\n        {!props.param && (\r\n          <div\r\n            className=\"links\"\r\n            style={{ width: \"50%\", fontSize: \"1.2rem\", marginLeft: \"30px\" }}\r\n          >\r\n            A chart that shows you the difference between the rate of change of\r\n            your weight during a certain period of time and the normal rate that\r\n            you should follow\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Line data={data} options={options} type=\"line\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\resetPassword.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\forgetPassword.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\verifyEmail.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\verify.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\signup.jsx",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\foodTable.jsx",["447","448","449"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport s from './Profile/Profile/Profile.module.css';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\n\r\nfunction FoodPopup(props) {\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\r\n\tconst [ alCalories, setAlCalories ] = useState(0);\r\n\tlet allCalories = 0;\r\n\t// console.log(props.param)\r\n\t// console.log(props.outer)\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsetCalPg(0);\r\n\t\t\tsetMyIngredients([]);\r\n\t\t\tsetAlCalories(0);\r\n\t\t\tsetSearch('');\r\n\t\t},\r\n\t\t[ props.food ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tif (props.food) {\r\n\t\t\t\tif (props.food.f) {\r\n\t\t\t\t\tprops.food.f.map((f) => {\r\n\t\t\t\t\t\tallCalories += parseFloat(f.food.cal) / parseFloat(f.food.gram) * parseFloat(f.grams);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetAlCalories(allCalories);\r\n\t\t},\r\n\t\t[ props.food ]\r\n\t);\r\n\r\n\tconst [ search, setSearch ] = useState();\r\n\tconst [ response, setResponse ] = useState();\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\taxios\r\n\t\t\t\t.get(`search-additions?food=${search}`)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetResponse(res.data.docs);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\t[ search ]\r\n\t);\r\n\r\n\tconst [ calPg, setCalPg ] = useState(0);\r\n\r\n\tconst [ myIngredients, setMyIngredients ] = useState([]);\r\n\r\n\tconst clickIngredient = (ing) => {\r\n\t\tif ([ ing, ...myIngredients ].length === new Set([ ing, ...myIngredients ]).size) {\r\n\t\t\tlet calPerGrams = 0;\r\n\t\t\ting.userGrams = 1;\r\n\t\t\tcalPerGrams = parseFloat(ing.cal).toPrecision(5) / parseFloat(ing.gram).toPrecision(5);\r\n\t\t\tvar res = calPg + calPerGrams;\r\n\r\n\t\t\tres = parseFloat(res);\r\n\r\n\t\t\tsetMyIngredients([ ...new Set([ ing, ...myIngredients ]) ]);\r\n\r\n\t\t\tsetCalPg(res);\r\n\t\t}\r\n\t};\r\n\tconst removeIngredient = (ing) => {\r\n\t\tlet calPerGrams = 0;\r\n\t\tcalPerGrams = parseFloat(ing.cal).toPrecision(5) / parseFloat(ing.gram).toPrecision(5);\r\n\r\n\t\tcalPerGrams = calPerGrams * ing.userGrams;\r\n\r\n\t\tif (parseFloat(calPg - calPerGrams) < 0.001) {\r\n\t\t\tsetCalPg(0);\r\n\t\t\tsetMyIngredients([]);\r\n\t\t} else {\r\n\t\t\tsetCalPg(parseFloat(calPg - calPerGrams));\r\n\r\n\t\t\tsetMyIngredients(myIngredients.filter((i) => i._id !== ing._id));\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateHandler = () => {\r\n\t\t// console.log(allCalories <= calPg);\r\n\t\tif (allCalories <= calPg) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tlet arr = [];\r\n\t\t\tmyIngredients.map((i) => {\r\n\t\t\t\tarr.push({\r\n\t\t\t\t\tfood: i._id,\r\n\t\t\t\t\tgrams: i.userGrams\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t// console.log(myIngredients)\r\n\t\t\tconsole.log(myIngredients);\r\n\t\t\tsetLoading(false);\r\n\t\t\t// console.log(props.method)s\r\n\t\t\tprops.foodTable(myIngredients, props.method);\r\n\t\t}\r\n\t};\r\n\t// console.log(props.food,props.method)\r\n\tlet table = (\r\n\t\t<div style={{ color: '#fff' }}>\r\n\t\t\t<input\r\n\t\t\t\tstyle={{ margin: ' 0 auto', display: 'block', color: '#fff' }}\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tplaceholder=\"Search For Food .. \"\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\treturn setSearch(e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className={s.Images__btns}>\r\n\t\t\t\t<div className={s.additions}>\r\n\t\t\t\t\t{response ? (\r\n\t\t\t\t\t\tresponse.map((r) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<button style={{ position: 'relative', cursor: 'auto' }}>\r\n\t\t\t\t\t\t\t\t\t{r.food}\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\t\t\t\ttop: '1px',\r\n\t\t\t\t\t\t\t\t\t\t\tright: '1px',\r\n\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => clickIngredient(r)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.myFood}>\r\n\t\t\t\t<div className={s.myfood__name}>Current Food</div>\r\n\t\t\t\t<div className={s.myfood__cal}>Current Calories</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.myFood}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{props.food ? props.food.f ? (\r\n\t\t\t\t\t\tprops.food.f.map((f) => {\r\n\t\t\t\t\t\t\treturn <button>{f.food.food}</button>;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.cal_num}>{alCalories}</div>\r\n\t\t\t\t{/* <div>{calPg}</div> */}\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t\t<div className={s.newFood}>\r\n\t\t\t\t<div className={s.newFood__name}> New Food </div>\r\n\t\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t{myIngredients.map((m) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => removeIngredient(m)}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborder: '1px solid',\r\n\t\t\t\t\t\t\t\t\tbackground: 'black',\r\n\t\t\t\t\t\t\t\t\tcolor: '#d9a404',\r\n\t\t\t\t\t\t\t\t\tmarginRight: '5px',\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{m.food}{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t<span style={{ margin: '0 5px' }}>{m.userGrams}</span>{' '}\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '70px', height: '30px' }}\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tdefaultValue=\"1\"\r\n\t\t\t\t\t\t\t\t\t//   value={m.userGrams}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\tvar indexOfStevie = myIngredients.findIndex((i) => i._id === m._id);\r\n\t\t\t\t\t\t\t\t\t\t// console.log(indexOfStevie)\r\n\t\t\t\t\t\t\t\t\t\tlet ings = myIngredients;\r\n\t\t\t\t\t\t\t\t\t\tlet calo =\r\n\t\t\t\t\t\t\t\t\t\t\tcalPg -\r\n\t\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams *\r\n\t\t\t\t\t\t\t\t\t\t\t\t(parseFloat(m.cal).toPrecision(5) / parseFloat(m.gram).toPrecision(5));\r\n\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\tsetMyIngredients(ings);\r\n\t\t\t\t\t\t\t\t\t\tsetCalPg(\r\n\t\t\t\t\t\t\t\t\t\t\tcalo +\r\n\t\t\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams *\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(parseFloat(m.cal).toPrecision(5) /\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparseFloat(m.gram).toPrecision(5))\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}{' '}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.newFood}>\r\n\t\t\t\t<div className={s.newFood__cal}> New Calories</div>\r\n\t\t\t\t<div className={s.newFood_cal_num}>{parseFloat(calPg).toPrecision(5)}</div>\r\n\t\t\t</div>\r\n\t\t\t{props.param ? (\r\n\t\t\t\t''\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborder: '1px solid',\r\n\t\t\t\t\t\tbackground: 'black',\r\n\t\t\t\t\t\tcolor: '#d9a404',\r\n\t\t\t\t\t\tmarginRight: '5px',\r\n\t\t\t\t\t\tmarginBottom: '5px',\r\n\t\t\t\t\t\tpaddingRight: '15px',\r\n\t\t\t\t\t\tpaddingLeft: '15px',\r\n\t\t\t\t\t\tdisplay: 'block',\r\n\t\t\t\t\t\tmargin: 'auto'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={() => updateHandler()}\r\n\t\t\t\t>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tUpdate Item{' '}\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n\r\n\tif (loading) table = <Spinner />;\r\n\r\n\treturn table;\r\n}\r\n\r\nexport default FoodPopup;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\foodPopup.jsx",["450","451","452"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport s from './Profile/Profile/Profile.module.css';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Spinner from '../UI/Spinner/Spinner';\r\n\r\nfunction FoodPopup(props) {\r\n\tconst [ loading, setLoading ] = useState(false);\r\n\r\n\tconst [ alCalories, setAlCalories ] = useState(0);\r\n\tlet allCalories = 0;\r\n\t// console.log(props.param)\r\n\t// console.log(props.outer)\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tsetCalPg(0);\r\n\t\t\tsetMyIngredients([]);\r\n\t\t\tsetAlCalories(0);\r\n\t\t\tsetSearch('');\r\n\t\t},\r\n\t\t[ props.food ]\r\n\t);\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tprops.food.f.map((f) => {\r\n\t\t\t\tallCalories += parseFloat(f.food.cal) / parseFloat(f.food.gram) * parseFloat(f.grams);\r\n\t\t\t});\r\n\t\t\tsetAlCalories(allCalories);\r\n\t\t},\r\n\t\t[ props.food ]\r\n\t);\r\n\r\n\tconst [ search, setSearch ] = useState();\r\n\tconst [ response, setResponse ] = useState();\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\taxios\r\n\t\t\t\t.get(`search-additions?food=${search}`)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetResponse(res.data.docs);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\t[ search ]\r\n\t);\r\n\r\n\tconst [ calPg, setCalPg ] = useState(0);\r\n\r\n\tconst [ myIngredients, setMyIngredients ] = useState([]);\r\n\r\n\tconst clickIngredient = (ing) => {\r\n\t\tif ([ ing, ...myIngredients ].length === new Set([ ing, ...myIngredients ]).size) {\r\n\t\t\tlet calPerGrams = 0;\r\n\t\t\ting.userGrams = 1;\r\n\t\t\tcalPerGrams = parseFloat(ing.cal).toPrecision(5) / parseFloat(ing.gram).toPrecision(5);\r\n\t\t\tvar res = calPg + calPerGrams;\r\n\r\n\t\t\tres = parseFloat(res);\r\n\r\n\t\t\tsetMyIngredients([ ...new Set([ ing, ...myIngredients ]) ]);\r\n\r\n\t\t\tsetCalPg(res);\r\n\t\t}\r\n\t};\r\n\tconst removeIngredient = (ing) => {\r\n\t\tlet calPerGrams = 0;\r\n\t\tcalPerGrams = parseFloat(ing.cal).toPrecision(5) / parseFloat(ing.gram).toPrecision(5);\r\n\r\n\t\tcalPerGrams = calPerGrams * ing.userGrams;\r\n\r\n\t\tif (parseFloat(calPg - calPerGrams) < 0.001) {\r\n\t\t\tsetCalPg(0);\r\n\t\t\tsetMyIngredients([]);\r\n\t\t} else {\r\n\t\t\tsetCalPg(parseFloat(calPg - calPerGrams));\r\n\r\n\t\t\tsetMyIngredients(myIngredients.filter((i) => i._id !== ing._id));\r\n\t\t}\r\n\t};\r\n\r\n\tconst updateHandler = () => {\r\n\t\tconsole.log(alCalories , calPg);\r\n\t\tif (alCalories >= calPg) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tlet arr = [];\r\n\t\t\tmyIngredients.map((i) => {\r\n\t\t\t\tarr.push({\r\n\t\t\t\t\tfood: i._id,\r\n\t\t\t\t\tgrams: i.userGrams\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\taxios\r\n\t\t\t\t.put(`updateAdd`, {\r\n\t\t\t\t\touterSystem: props.outer,\r\n\t\t\t\t\tinnerSystem: props.inner,\r\n\t\t\t\t\tfoodId: props.food._id,\r\n\t\t\t\t\tfood: arr\r\n\t\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\t//   setResponse(res.data.docs);\r\n\t\t\t\t\tsetCalPg(0);\r\n\t\t\t\t\tsetMyIngredients([]);\r\n\t\t\t\t\tsetAlCalories(0);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetSearch('');\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetSearch();\r\n\t\t\t\t\tsetCalPg(0);\r\n\t\t\t\t\tsetMyIngredients([]);\r\n\t\t\t\t\tsetAlCalories(0);\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tlet table = (\r\n\t\t<div style={{ color: '#fff' }}>\r\n\t\t\t<input\r\n\t\t\t\tstyle={{ margin: ' 0 auto', display: 'block', color: '#fff' }}\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tplaceholder=\"Search For Food .. \"\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\treturn setSearch(e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<div className={s.Images__btns}>\r\n\t\t\t\t<div className={s.additions}>\r\n\t\t\t\t\t{response ? (\r\n\t\t\t\t\t\tresponse.map((r) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<button style={{ position: 'relative', cursor: 'auto' }}>\r\n\t\t\t\t\t\t\t\t\t{r.food}\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\t\t\t\ttop: '1px',\r\n\t\t\t\t\t\t\t\t\t\t\tright: '1px',\r\n\t\t\t\t\t\t\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => clickIngredient(r)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.myFood}>\r\n\t\t\t\t<div className={s.myfood__name}>Current Food</div>\r\n\t\t\t\t<div className={s.myfood__cal}>Current Calories</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.myFood}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{props.food.f.map((f,i) => {\r\n\t\t\t\t\t\treturn <button key={i}>{f.food.food}</button>;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.cal_num}>{alCalories}</div>\r\n\t\t\t\t{/* <div>{calPg}</div> */}\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t\t<div className={s.newFood}>\r\n\t\t\t\t<div className={s.newFood__name}> New Food </div>\r\n\t\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\t{myIngredients.map((m,i) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tonClick={() => removeIngredient(m)}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborder: '1px solid',\r\n\t\t\t\t\t\t\t\t\tbackground: 'black',\r\n\t\t\t\t\t\t\t\t\tcolor: '#d9a404',\r\n\t\t\t\t\t\t\t\t\tmarginRight: '5px',\r\n\t\t\t\t\t\t\t\t\tmarginBottom: '5px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t{m.food}{' '}\r\n\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t<div style={{ display: 'flex' }}>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\t<span style={{ margin: '0 5px' }}>{m.userGrams}</span>{' '}\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: '70px', height: '30px' }}\r\n\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\tdefaultValue=\"1\"\r\n\t\t\t\t\t\t\t\t\t//   value={m.userGrams}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\tvar indexOfStevie = myIngredients.findIndex((i) => i._id === m._id);\r\n\t\t\t\t\t\t\t\t\t\t// console.log(indexOfStevie)\r\n\t\t\t\t\t\t\t\t\t\tlet ings = myIngredients;\r\n\t\t\t\t\t\t\t\t\t\tlet calo =\r\n\t\t\t\t\t\t\t\t\t\t\tcalPg -\r\n\t\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams *\r\n\t\t\t\t\t\t\t\t\t\t\t\t(parseFloat(m.cal).toPrecision(5) / parseFloat(m.gram).toPrecision(5));\r\n\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\tsetMyIngredients(ings);\r\n\t\t\t\t\t\t\t\t\t\tsetCalPg(\r\n\t\t\t\t\t\t\t\t\t\t\tcalo +\r\n\t\t\t\t\t\t\t\t\t\t\t\tings[indexOfStevie].userGrams *\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(parseFloat(m.cal).toPrecision(5) /\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparseFloat(m.gram).toPrecision(5))\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}{' '}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.newFood}>\r\n\t\t\t\t<div className={s.newFood__cal}> New Calories</div>\r\n\t\t\t\t<div className={s.newFood_cal_num}>{parseFloat(calPg).toPrecision(5)}</div>\r\n\t\t\t</div>\r\n\t\t\t{props.param ? (\r\n\t\t\t\t''\r\n\t\t\t) : (\r\n\t\t\t\t<button\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tborder: '1px solid',\r\n\t\t\t\t\t\tbackground: 'black',\r\n\t\t\t\t\t\tcolor: '#d9a404',\r\n\t\t\t\t\t\tmarginRight: '5px',\r\n\t\t\t\t\t\tmarginBottom: '5px',\r\n\t\t\t\t\t\tpaddingRight: '15px',\r\n\t\t\t\t\t\tpaddingLeft: '15px',\r\n\t\t\t\t\t\tdisplay: 'block',\r\n\t\t\t\t\t\tmargin: 'auto'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={() => updateHandler()}\r\n\t\t\t\t>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tUpdate Item{' '}\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n\r\n\tif (loading) table = <Spinner />;\r\n\r\n\treturn table;\r\n}\r\n\r\nexport default FoodPopup;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\video.jsx",["453"],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\authentication\\login.jsx",["454"],"import React, { Component, useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport style from \"../../assets/css/authentication/login.module.css\";\r\nimport logo from \"../../images/Logo/pinkLogo.png\";\r\nimport Input from \"../../Helper/Input/Input\";\r\nimport { updatedObject, checkValidity } from \"../../Helper/shared/shared\";\r\nimport Spinner from \"../../UI/Spinner/Spinner\";\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\nexport function Login(props) {\r\n  const Auth = useContext(AuthContext);\r\n\r\n  const [controls, setControls] = useState({\r\n    password: {\r\n      value: \"\",\r\n      valid: false,\r\n      validation: {\r\n        required: true,\r\n        minLength: 4,\r\n      },\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"password\",\r\n        placeholder: \"Password\",\r\n      },\r\n      touched: false,\r\n    },\r\n\r\n    phone: {\r\n      value: \"\",\r\n      valid: false,\r\n      validation: {\r\n        required: true,\r\n        isPhone: true,\r\n      },\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Phone\",\r\n        id: \"phone\",\r\n      },\r\n      touched: false,\r\n    },\r\n  });\r\n\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(null);\r\n\r\n\r\n\r\n  const on = (event, elementName) => {\r\n    const updated = updatedObject(controls, {\r\n      [elementName]: updatedObject(controls[elementName], {\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          controls[elementName].validation\r\n        ),\r\n        value: event.target.value,\r\n        touched: true,\r\n      }),\r\n    });\r\n    setControls(updated);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (controls.password.valid && controls.phone.valid) {\r\n      // this.setState({ loading: true, error: null });\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      let p = \"+2\";\r\n      let phone = p.concat(controls.phone.value);\r\n\r\n      const data = {\r\n        phone: phone,\r\n        password: controls.password.value,\r\n      };\r\n\r\n      axios({\r\n        url: \"login-phone\",\r\n        method: \"POST\",\r\n        data: data,\r\n      })\r\n        .then((res) => {\r\n          localStorage.setItem(\"token\", res.data.token);\r\n          localStorage.setItem(\"userId\", res.data.user.id);\r\n          window.location.href = \"/\";\r\n          setLoading(false);\r\n          Auth.isAuth = true;\r\n          Auth.auth = res.data;\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          setError(err.response.data.message);\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n\r\n  let body = (\r\n    <React.Fragment>\r\n      {error ? <p className={style.Error}> {error} </p> : \"\"}\r\n      <div className={style.login}>\r\n        <form onSubmit={submitHandler}>\r\n          <div>\r\n            <img src={logo} alt=\"logo-icon\" className={style.logo} />\r\n          </div>\r\n\r\n          <div className={style.input}>\r\n            <Input\r\n              inValid={!controls.phone.valid}\r\n              changed={(e) => on(e, \"phone\")}\r\n              value={controls.phone.value}\r\n              elementType={controls.phone.elementType}\r\n              hasValidity\r\n              touched={controls.phone.touched}\r\n              elementConfig={controls.phone.elementConfig}\r\n              class={style.inp}\r\n            />\r\n          </div>\r\n\r\n          <div className={style.input}>\r\n            <Input\r\n              inValid={!controls.password.valid}\r\n              changed={(e) => on(e, \"password\")}\r\n              value={controls.password.value}\r\n              elementType={controls.password.elementType}\r\n              hasValidity\r\n              touched={controls.password.touched}\r\n              elementConfig={controls.password.elementConfig}\r\n              class={style.inp}\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className={style.btn}>\r\n            Login\r\n          </button>\r\n\r\n          <div className={style.anchor}>\r\n            <Link onClick={() => props.openHandler2(\"/forget\")}>\r\n              {\" \"}\r\n              forget password\r\n            </Link>\r\n          </div>\r\n          <hr />\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n  if (loading) body = <Spinner />;\r\n  return body;\r\n}\r\n\r\nexport default Login;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Helper\\Input\\Input.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Helper\\shared\\shared.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Admin\\Home.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Admin\\AddTrainer.js",["455","456","457"],"import React, { useState, useContext } from \"react\";\r\nimport style from \"../../assets/css/admin.module.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport content from \"./heper/inputs\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport context from \"../../context/rest-context\";\r\nimport axios from \"axios\";\r\n\r\nimport { MapContainer, TileLayer, Marker, useMapEvents } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\nimport Popup from \"react-leaflet-editable-popup\";\r\nimport icon from \"leaflet/dist/images/marker-icon.png\";\r\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\r\n\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.css\";\r\nimport \"leaflet-control-geocoder/dist/Control.Geocoder.js\";\r\n\r\n// \"leaflet\": \"^1.7.1\",\r\n//     \"leaflet-control-geocoder\": \"^1.13.0\",\r\n//  \"react-leaflet\": \"^3.0.5\",\r\n//     \"react-leaflet-editable-popup\": \"^2.0.3\",\r\n\r\nconst schema = yup.object().shape({\r\n  username: yup.string().required(),\r\n  about: yup.string().required(),\r\n  password: yup.string().required(),\r\n  email: yup.string().required().email(),\r\n  phone: yup\r\n    .number()\r\n    .required()\r\n    .test(\"len\", \"Max 11 numbers\", (val) => val.toString().length <= 11),\r\n});\r\n\r\nlet DefaultIcon = L.icon({\r\n  iconUrl: icon,\r\n  shadowUrl: iconShadow,\r\n});\r\n\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nfunction AddMarkerToClick(props) {\r\n  const obj = useContext(context);\r\n\r\n  const [markers, setMarkers] = useState();\r\n\r\n  const map = useMapEvents({\r\n    click(e) {\r\n      console.log(e);\r\n      console.log(L.Control.Geocoder);\r\n      if (L.Control.Geocoder) {\r\n        const geocoder = L.Control.Geocoder.nominatim();\r\n\r\n        console.log(\"2\");\r\n        geocoder.reverse(\r\n          e.latlng,\r\n          map.options.crs.scale(map.getZoom()),\r\n          (results) => {\r\n            obj.name = obj.name ? (results[0] ? results[0].name : \"\") : \"\";\r\n            props.clickHandler1(\r\n              results[0] ? (results[0].name ? results[0].name : \"\") : \"\",\r\n              e.latlng\r\n            );\r\n            let newMarker = e.latlng;\r\n\r\n            setMarkers(newMarker);\r\n          }\r\n        );\r\n      }\r\n    },\r\n  });\r\n\r\n  if (props.mark !== \"\" && !markers) {\r\n    setMarkers(props.mark);\r\n    // console.log(props.mark)\r\n    // console.log(markers)\r\n  }\r\n\r\n  if (props.clear && markers !== \"\") setMarkers(\"\");\r\n\r\n  return (\r\n    <>\r\n      {/* {markers.map(marker =>  */}\r\n      {markers ? (\r\n        <Marker position={markers}>\r\n          <Popup>\"\"</Popup>\r\n        </Marker>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AddTrainer(props) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [mark, setMark] = useState(\"\");\r\n  const [place, setPlace] = useState(\"\");\r\n  const [coordinates, setCoordinates] = useState();\r\n  const [clear, setClear] = useState(false);\r\n  const [gender, setGender] = useState(\"male\");\r\n\r\n  const height = { height: \"30vh\", width: \"50vh\" };\r\n  const center = { lat: 51.5, lng: 0.12 };\r\n  const clickHandler1 = (data, coorinates) => {\r\n    console.log(coordinates);\r\n    setPlace(data);\r\n    setCoordinates(coorinates);\r\n  };\r\n\r\n  // form.append(\"address[0][sub]\", place);\r\n  // form.append(\"address[0][location][typeCo]\", \"Point\");\r\n  // form.append(\"address[0][location][coordinates][0]\", coordinates.lng);\r\n  // form.append(\"address[0][location][coordinates][1]\", coordinates.lat);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({ resolver: yupResolver(schema) });\r\n  const onSubmit = async (data) => {\r\n    console.log(data)\r\n  \r\n    const body = data;\r\n    const location = {\r\n      type: \"point\",\r\n      coordinates: [coordinates.lng, coordinates.lat],\r\n    };\r\n    body[\"location\"] = location;\r\n    body[\"gender\"] = gender;\r\n    console.log(data);\r\n    const response = await axios.post(\"/add-gym\", body);\r\n    console.log(response);\r\n  };\r\n\r\n  console.log(errors);\r\n  return (\r\n    <section className={style.add_trainer}>\r\n      <h1 className={style.add_title}>Add trainer</h1>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)} className={style.information}>\r\n        {content.inputs.map((input, key) => {\r\n          return (\r\n            <React.Fragment key={key}>\r\n              <input\r\n                name={input.name}\r\n                placeholder={input.placeholder}\r\n                type={input.type}\r\n                {...register(input.name)}\r\n                style={{\r\n                  border: errors[input.name]\r\n                    ? \"1px solid rgb(172, 50, 50)\"\r\n                    : \"\",\r\n                }}\r\n              />\r\n              <p className={style.message}>{errors[input.name]?.message}</p>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n        <div style={{ width: \"50%\", zIndex: 10000, position: \"relative\" }}>\r\n          <DatePicker\r\n            selected={startDate}\r\n            onChange={(date) => setStartDate(date)}\r\n          />\r\n        </div>\r\n\r\n        <div className={style.gender_info}>\r\n          <div> Gender </div>\r\n          <label className={style.contain}>\r\n            Male\r\n            <input\r\n              type=\"radio\"\r\n              defaultChecked=\"checked\"\r\n              name=\"radio\"\r\n              className={style.radio}\r\n              value=\"male\"\r\n              onChange={(e) => setGender(e.target.value)}\r\n            />\r\n            <span className={style.checkmark}></span>\r\n          </label>\r\n          <label className={style.contain}>\r\n            Female\r\n            <input\r\n              type=\"radio\"\r\n              name=\"radio\"\r\n              className={style.radio}\r\n              value=\"female\"\r\n              onChange={(e) => setGender(e.target.value)}\r\n            />\r\n            <span className={style.checkmark}></span>\r\n          </label>\r\n        </div>\r\n\r\n        <MapContainer style={height} center={center} zoom={8}>\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n          <AddMarkerToClick\r\n            clickHandler1={clickHandler1}\r\n            mark={mark}\r\n            clear={clear}\r\n          />\r\n        </MapContainer>\r\n        <button type=\"submit\" className={style.addBtn}>\r\n          Add Trainer\r\n        </button>\r\n      </form>\r\n      {/* </div> */}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AddTrainer;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Admin\\heper\\inputs.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\UI\\ProfileModal\\ProfileModal.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Profile\\Profile\\Profile.js",["458","459","460","461","462","463","464","465"],"import React, { useEffect, useState, useRef, useContext } from \"react\";\r\nimport s from \"./Profile.module.css\";\r\nimport add from \"../../../images/add.png\";\r\nimport line from \"../../../images/svg/line.svg\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Spinner from \"../../../UI/Spinner/Spinner\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport LineChart from \"../../chartjs\";\r\nimport TraineeCard from \"../../TraineeCard\";\r\nimport TrainerCard from \"../../TrainerCard\";\r\nimport style2 from \"../../../assets/css/navbar.module.css\";\r\nimport AlertContext from \"../../../context/alerts-context\";\r\nimport _ from \"lodash\";\r\nimport ProfileModal from \"../../../UI/ProfileModal/ProfileModal\";\r\n// import { Line } from 'react-chartjs-2';\r\n\r\nfunction generateRanges(startDate, endDate) {\r\n  let current = moment(startDate, \"DD/MM/YYYY\");\r\n  const end = moment(endDate, \"DD/MM/YYYY\");\r\n  let weeks = [];\r\n  while (current < end) {\r\n    let l = current.add(7, \"days\");\r\n    weeks = [...weeks, l.format(\"YYYY-MM-DD\")];\r\n  }\r\n  return weeks;\r\n}\r\n\r\nfunction Profile(props) {\r\n  const [profile, setProfile] = useState();\r\n  const imga = useRef();\r\n  const labe = useRef();\r\n  const alert = useRef();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [loading2, setLoading2] = useState(false);\r\n  // const [loading3, setLoading3] = useState(false);\r\n\r\n  const [update, setUpdate] = useState();\r\n  const [system, setSystem] = useState();\r\n  const [dates, setDates] = useState([]);\r\n\r\n  const [current, setCurrent] = useState(\"\");\r\n\r\n  const [weeks, setWeeks] = useState([]);\r\n  const [weekIndex, setWeekIndex] = useState(0);\r\n\r\n  const [currentWeekWeight, setCurrentWeekWeight] = useState([]);\r\n  const [currentWeekPerfectPath, setCurrentWeekPerfectPath] = useState([]);\r\n\r\n  const [trainees, setTraineees] = useState([]);\r\n  const [trainers, setTrainers] = useState([]);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const alers = useContext(AlertContext);\r\n\r\n  const al = _.find(\r\n    alers.alerts,\r\n    _.matchesProperty(\"user\", {\r\n      id: profile ? profile.id : \"\",\r\n      username: profile ? profile.username : \"\",\r\n      photo: profile ? profile.photo : \"\",\r\n      role: profile ? profile.role : \"\",\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        props.match.params.id\r\n          ? `fetch-profile?id=${props.match.params.id}`\r\n          : `fetch-profile`\r\n      )\r\n      .then((res) => {\r\n        setProfile(res.data.user);\r\n        setSystem(res.data.system);\r\n        let newWeeks = generateRanges(\r\n          moment(res.data.system.perfectPathes[0].date).format(\"DD/MM/YYYY\"),\r\n          moment(\r\n            res.data.system.perfectPathes[\r\n              res.data.system.perfectPathes.length - 1\r\n            ].date\r\n          ).format(\"DD/MM/YYYY\")\r\n        );\r\n        setWeeks(newWeeks);\r\n        if (weekIndex === 0) {\r\n          if (weekIndex + 1 !== newWeeks.length) {\r\n            let ws = [];\r\n            let pws = [];\r\n            res.data.user.weights.map((w) => {\r\n              if (\r\n                moment(w.date).isBetween(\r\n                  moment(newWeeks[weekIndex]),\r\n                  moment(newWeeks[weekIndex + 1])\r\n                )\r\n              ) {\r\n                return ws.push(w.weight);\r\n              }\r\n            });\r\n            setCurrentWeekWeight(ws);\r\n            res.data.system.perfectPathes.map((w) => {\r\n              if (\r\n                moment(w.date).isBetween(\r\n                  moment(newWeeks[weekIndex]),\r\n                  moment(newWeeks[weekIndex + 1])\r\n                )\r\n              )\r\n                return pws.push(w.weight);\r\n            });\r\n            setCurrentWeekPerfectPath(pws);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n\r\n    axios\r\n      .get(\r\n        props.match.params.id\r\n          ? `getDates?id=${props.match.params.id}`\r\n          : `getDates`\r\n      )\r\n      .then((res) => {\r\n        setDates(res.data.syst);\r\n        setCurrent(res.data.syst[0].date);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, [loading, loading2, props.open2]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/getUsers?limit=3\").then((res) => {\r\n      setTraineees(res.data.docs);\r\n    });\r\n    axios.get(\"/fetch-gyms?limit=3\").then((res) => {\r\n      setTrainers(res.data.docs);\r\n    });\r\n  }, []);\r\n\r\n  const updateHandler = async (info) => {\r\n    //     badHabbit: \"I have a sweet tooth  \"\r\n    // energyLevel: \"I need a nap after meals\"\r\n    // goalWeight: \"80\"\r\n    // height: \"30\"\r\n    // lastIdealWeight: \"1-2 years ago\"\r\n    // sleepEveryNight: \"6-7 hours\"\r\n    // walkDaily: \"1-2 hours \"\r\n    // waterDaily: \"More than 6 glasses\"\r\n    // weight: \"40\"\r\n    // workout: \"1-2 workouts a week \"\r\n\r\n    ////axios update profile\r\n    const res = await axios.post(\"/updateInfo\", info);\r\n    console.log(res);\r\n    setLoading2(true);\r\n    setLoading2(false);\r\n  };\r\n\r\n  const leftToggle = () => {\r\n    // if (system) {\r\n      var indexOfStevie = dates.findIndex((i) => i.date === current);\r\n      if (indexOfStevie !== 0) {\r\n        setCurrent(dates[indexOfStevie - 1].date);\r\n        axios\r\n          .get(\r\n            props.match.params.id\r\n              ? `getSystemByDate?date=${dates[indexOfStevie - 1].date}&&id=${props.match.params.id}`\r\n              : `getSystemByDate?date=${dates[indexOfStevie - 1].date}`\r\n          )\r\n          .then((res) => {\r\n            setSystem(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      }\r\n    // }\r\n  };\r\n\r\n  const rightToggle = () => {\r\n    // console.log(system)\r\n    // if (system) {\r\n      // console.log(current)\r\n      var indexOfStevie = dates.findIndex((i) => i.date === current);\r\n      if (indexOfStevie !== dates.length - 1) {\r\n        setCurrent(dates[indexOfStevie + 1].date);\r\n        // console.log(dates[indexOfStevie + 1].date)\r\n        axios\r\n          .get(\r\n            props.match.params.id\r\n              ? `getSystemByDate?date=${dates[indexOfStevie + 1].date}&&id=${props.match.params.id}`\r\n              : `getSystemByDate?date=${dates[indexOfStevie + 1].date}`\r\n          )\r\n          .then((res) => {\r\n            // console.log(res.data)\r\n            setSystem(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      }\r\n    // }\r\n  };\r\n\r\n  const leftToggleChart = () => {\r\n    if (system)\r\n      if (weekIndex - 1 !== -1) {\r\n        let ws = [];\r\n        let pws = [];\r\n        profile.weights.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex - 1]),\r\n              moment(weeks[weekIndex])\r\n            )\r\n          )\r\n            ws.push(w.weight);\r\n        });\r\n        setCurrentWeekWeight(ws);\r\n        system.perfectPathes.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex - 1]),\r\n              moment(weeks[weekIndex])\r\n            )\r\n          )\r\n            pws.push(w.weight);\r\n        });\r\n        setCurrentWeekPerfectPath(pws);\r\n        let nextWeek = weekIndex - 1;\r\n\r\n        setWeekIndex(nextWeek);\r\n      }\r\n  };\r\n\r\n  const rightToggleChart = () => {\r\n    if (system)\r\n      if (weekIndex + 1 !== weeks.length) {\r\n        let ws = [];\r\n        let pws = [];\r\n        profile.weights.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex + 1]),\r\n              moment(weeks[weekIndex + 2])\r\n            )\r\n          )\r\n            ws.push(w.weight);\r\n        });\r\n        setCurrentWeekWeight(ws);\r\n        system.perfectPathes.map((w) => {\r\n          if (\r\n            moment(w.date).isBetween(\r\n              moment(weeks[weekIndex + 1]),\r\n              moment(weeks[weekIndex + 2])\r\n            )\r\n          )\r\n            pws.push(w.weight);\r\n        });\r\n        setCurrentWeekPerfectPath(pws);\r\n        let nextWeek = weekIndex + 1;\r\n        setWeekIndex(nextWeek);\r\n      }\r\n  };\r\n\r\n  let updateButton = props.match.params.id ? (\r\n    \"\"\r\n  ) : (\r\n    <label\r\n      style={{\r\n        background: \"black\",\r\n        color: \"#d9a404\",\r\n        width: \"100px\",\r\n        marginRight: \"200px\",\r\n        marginBottom: \"10px\",\r\n        textAlign: \"center\",\r\n        cursor: \"pointer\",\r\n      }}\r\n      className={s.Images__update}\r\n      htmlFor=\"update\"\r\n    >\r\n      update\r\n    </label>\r\n  );\r\n\r\n  let weightComponent = (\r\n    <div>\r\n      <span>Weight: </span>\r\n      {profile\r\n        ? profile.weights\r\n          ? profile.weights[0]\r\n            ? profile.weights[profile.weights.length - 1].weight\r\n            : \"\"\r\n          : \"\"\r\n        : \"\"}\r\n      kg\r\n    </div>\r\n  );\r\n\r\n  let heightComponent = (\r\n    <div>\r\n      <span>height: </span>\r\n      {profile\r\n        ? profile.heights\r\n          ? profile.heights[0]\r\n            ? profile.heights[profile.heights.length - 1].height\r\n            : \"\"\r\n          : \"\"\r\n        : \"\"}\r\n      cm\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <section className={s.profile}>\r\n      <div className=\"container\">\r\n        <div>\r\n          <img className={s.line} src={line} alt=\"line\" />\r\n          <div className={s.circle}>\r\n            <img\r\n              className={s.profile_img}\r\n              src={\r\n                profile\r\n                  ? profile.photo\r\n                    ? profile.photo\r\n                    : \"https://picsum.photos/220/220\"\r\n                  : \"https://picsum.photos/220/220\"\r\n              }\r\n              alt=\"profile\"\r\n              ref={imga}\r\n            />\r\n            {props.match.params.id ? (\r\n              \"\"\r\n            ) : (\r\n              <>\r\n                <img\r\n                  className={s.add_img}\r\n                  src={add}\r\n                  alt=\"add\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <label htmlFor=\"img\" className={s.add_img} ref={labe}>\r\n                  <input\r\n                    type=\"file\"\r\n                    style={{ opacity: 0 }}\r\n                    id=\"img\"\r\n                    onChange={(event) => {\r\n                      if (event.target.files[0]) {\r\n                        const form = new FormData();\r\n                        form.append(\"photo\", event.target.files[0]);\r\n                        axios\r\n                          .patch(\"profile\", form)\r\n                          .then((res) => {})\r\n                          .catch((err) => {\r\n                            console.error(err);\r\n                          });\r\n\r\n                        var selectedFile = event.target.files[0];\r\n                        var reader = new FileReader();\r\n\r\n                        imga.current.title = selectedFile.name;\r\n                        reader.onload = function (event) {\r\n                          imga.current.src = event.target.result;\r\n                        };\r\n                        reader.readAsDataURL(selectedFile);\r\n                      }\r\n                    }}\r\n                  />\r\n                </label>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className={s.info}>\r\n            <h4>\r\n              {profile ? (profile.username ? profile.username : \"\") : \"\"}{\" \"}\r\n            </h4>\r\n            <div className={s.details}>\r\n              {weightComponent}\r\n              {heightComponent}\r\n              <div>\r\n                <span>Diet Plan: </span>Intermittent Fasting\r\n              </div>\r\n\r\n              {props.match.params.id ? (\r\n                \"\"\r\n              ) : (\r\n                <div>\r\n                  {\" \"}\r\n                  <button className={s.updateBtn} onClick={() => openModal()}>\r\n                    {\" \"}\r\n                    Update{\" \"}\r\n                  </button>{\" \"}\r\n                </div>\r\n              )}\r\n\r\n              {open && (\r\n                <ProfileModal\r\n                  updateHandler={updateHandler}\r\n                  closeModal={closeModal}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {al ? (\r\n          <div\r\n            style={{ margin: \"auto\", textAlign: \"center\", marginTop: \"-75px\" }}\r\n          >\r\n            <button\r\n              className={style2.accept}\r\n              onClick={() => {\r\n                console.log(\"here\");\r\n                setLoading(true);\r\n                axios\r\n                  .put(`approve?request=${al.id}`)\r\n                  .then((res) => {\r\n                    setLoading(false);\r\n                    console.log(res);\r\n                    window.location.href = \"/\";\r\n                  })\r\n                  .catch((err) => {\r\n                    setLoading(false);\r\n                    console.log(err);\r\n                  });\r\n              }}\r\n            >\r\n              accept\r\n            </button>\r\n            <button\r\n              className={style2.decline}\r\n              onClick={() => {\r\n                setLoading(true);\r\n                axios\r\n                  .put(`gymRefuse?request=${al.id}`)\r\n                  .then((res) => {\r\n                    setLoading(false);\r\n                    console.log(res);\r\n                    window.location.href = \"/\";\r\n                  })\r\n                  .catch((err) => {\r\n                    setLoading(false);\r\n                    console.log(err);\r\n                  });\r\n              }}\r\n            >\r\n              refuse\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {/* images section */}\r\n        <hr />\r\n        <div className={s.Images}>\r\n          <h2 className={s.Images__heading}>\r\n            {\" \"}\r\n            A comparison indicating your changes every month{\" \"}\r\n          </h2>\r\n          <div className={s.Images__info}>\r\n            <div className={s.Images__photo}>\r\n              <img\r\n                src={\r\n                  update\r\n                    ? update\r\n                    : \"https://res.cloudinary.com/derossy-backup/image/upload/v1555206304/deross-samples/placeholder-profile-male.jpg\"\r\n                }\r\n                alt=\"profile pic\"\r\n              />\r\n            </div>\r\n            <div className={s.Images__btns}>\r\n              <div className={s.Images__btns_monthes}>\r\n                {profile\r\n                  ? profile.images\r\n                    ? profile.images.length > 0\r\n                      ? profile.images.map((i, l) => {\r\n                          return (\r\n                            <button\r\n                              key={l}\r\n                              onClick={() => {\r\n                                return setUpdate(i.image);\r\n                              }}\r\n                            >\r\n                              {\" \"}\r\n                              month{\" \"}\r\n                              {moment(i.date)\r\n                                .locale(\"en\")\r\n                                .format(\"YYYY/MM/DD\")}{\" \"}\r\n                            </button>\r\n                          );\r\n                        })\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </div>\r\n              <input\r\n                style={{ opacity: 0 }}\r\n                type=\"file\"\r\n                id=\"update\"\r\n                onChange={(event) => {\r\n                  setLoading(true);\r\n                  if (event.target.files[0]) {\r\n                    const form = new FormData();\r\n                    form.append(\"image\", event.target.files[0]);\r\n                    axios\r\n                      .post(\"image\", form)\r\n                      .then((res) => {\r\n                        setLoading(false);\r\n                        alert.current.style.visibility = \"visible\";\r\n                        alert.current.style.opacity = \"1\";\r\n                      })\r\n                      .catch((err) => {\r\n                        console.error(err);\r\n                        setLoading(false);\r\n                      });\r\n                  }\r\n                }}\r\n              />\r\n              <Alert\r\n                ref={alert}\r\n                className={s.Alert}\r\n                severity=\"success\"\r\n                onClick={() => {\r\n                  alert.current.style.visibility = \"hidden\";\r\n                  alert.current.style.opacity = \"0\";\r\n                }}\r\n              >\r\n                This is a success alert — check it out!\r\n              </Alert>\r\n\r\n              {updateButton}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        {/* {system ? system.syst[0].system.map(s=>{\r\n          return ( */}\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            margin: \"10px 0px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <div style={{ cursor: \"pointer\" }} onClick={() => leftToggle()}>\r\n            {\" \"}\r\n            <ArrowBackIosIcon />\r\n          </div>\r\n          <span> {moment(current).format(\"YYYY MM DD\")} </span>\r\n          <div style={{ cursor: \"pointer\" }} onClick={() => rightToggle()}>\r\n            {\" \"}\r\n            <ArrowForwardIosIcon />\r\n          </div>\r\n        </div>\r\n        <table className={s.table}>\r\n          <thead>\r\n            <th />\r\n            <th>saturday</th>\r\n            <th>sunday</th>\r\n            <th>monday</th>\r\n            <th>tuesday</th>\r\n            <th>wednesday</th>\r\n            <th>thursday</th>\r\n            <th>friday</th>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>8 Am</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[0],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[0].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>11 Am</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[1],\r\n                      system.syst[0].system[4]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[1],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[1].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>3 Pm</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[2],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[2].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>5 Pm</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[3],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[3].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n\r\n            <tr>\r\n              <td>7 Pm</td>\r\n              <td\r\n                data-label=\"Sat\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[0].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[0]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[0].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"sun\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[1].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[1]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[1].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"tuesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[2].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[2]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[2].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"wednesday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[3].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[3]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[3].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[4].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[4]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[4].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[5].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[5]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[5].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n              <td\r\n                data-label=\"friday\"\r\n                onClick={(e) => {\r\n                  if (system)\r\n                    props.openHandler2(\r\n                      \"/food\",\r\n                      system.syst[0].system[6].sys[4],\r\n                      system.syst[0]._id,\r\n                      system.syst[0].system[6]._id,\r\n                      props.match.params.id\r\n                    );\r\n                }}\r\n              >\r\n                {system\r\n                  ? system.syst[0].system[6].sys[4].f.map(\r\n                      (f) => f.food.food + \", \"\r\n                    )\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <hr />\r\n        <div className={s.charts}>\r\n          <h3 style={{ marginLeft: \"30px\" }}>Motivation Charts</h3>\r\n          <div id=\"calendar_basic\" className={s.chart_content} />\r\n          <div\r\n            style={{\r\n              textAlign: \"center\",\r\n              margin: \"10px 0px\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => leftToggleChart()}\r\n            >\r\n              {\" \"}\r\n              <ArrowBackIosIcon />\r\n            </div>\r\n            <span>\r\n              {\" \"}\r\n              {weeks\r\n                ? weeks[weekIndex]\r\n                  ? moment(weeks[weekIndex]).format(\"YYYY/MM/DD\")\r\n                  : \"\"\r\n                : \"\"}{\" \"}\r\n            </span>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => rightToggleChart()}\r\n            >\r\n              {\" \"}\r\n              <ArrowForwardIosIcon />\r\n            </div>\r\n          </div>\r\n          <LineChart\r\n            currentWeekPerfectPath={currentWeekPerfectPath}\r\n            currentWeekWeight={currentWeekWeight}\r\n            currentWeek={weeks[weekIndex]}\r\n          />\r\n        </div>\r\n        <hr />\r\n        <h2> Top Trending users </h2>\r\n        <div className={s.cards}>\r\n          {trainees.length > 0\r\n            ? trainees.map((trainee) => {\r\n                return (\r\n                  <TraineeCard\r\n                    photo={trainee.photo}\r\n                    username={trainee.username}\r\n                    id={trainee.id}\r\n                    key={trainee.id}\r\n                    weights={trainee.weights}\r\n                    heights={trainee.heights}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n        <h4 style={{ textAlign: \"right\", cursor: \"pointer\" }}>\r\n          {\" \"}\r\n          <span onClick={() => (window.location.href = \"/SearchTrainee\")}>\r\n            See More &gt;&gt;\r\n          </span>\r\n        </h4>\r\n        <hr />\r\n        <h2> Top Trending Trainers </h2>\r\n        <div className={s.cards}>\r\n          {trainers.length > 0\r\n            ? trainers.map((trainer) => {\r\n                return (\r\n                  <TrainerCard\r\n                    photo={trainer.photo}\r\n                    username={trainer.username}\r\n                    id={trainer.id}\r\n                    key={trainer.id}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n        <h4\r\n          style={{\r\n            textAlign: \"right\",\r\n            paddingBottom: \"20px\",\r\n            cursor: \"pointer\",\r\n            marginBottom: \"0\",\r\n          }}\r\n        >\r\n          <span onClick={() => (window.location.href = \"/SearchTrainer\")}>\r\n            {\" \"}\r\n            See More &gt;&gt;\r\n          </span>\r\n        </h4>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\store\\Messgaes\\messagesReducer.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\store\\Messgaes\\messagesTypess.js",[],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Chat\\chat.jsx",["466","467","468","469","470","471"],"import React, { useEffect, useState, useCallback } from \"react\";\r\nimport chatCss from \"../../assets/css/chat.module.css\";\r\n// import photo from \"../../images/friend_1.png\";\r\nimport Contacts from \"./contacts\";\r\nimport Messaging from \"./messaging\";\r\nimport io from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nfunction Chat() {\r\n  const [contacts, setContacts] = useState();\r\n  const [currentConversationMessages, setCurrentConversationMessages] =\r\n    useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [currentContact, setCurrentContact] = useState();\r\n  const [socket, setSocket] = useState();\r\n  const [conversations, setConversations] = useState({});\r\n  const [recommendations, setRecommendations] = useState([]);\r\n\r\n  const [changed, setChanged] = useState(false);\r\n\r\n  const fetchAll = useCallback(async () => {\r\n    const cons = await axios.get(\"/conversations\");\r\n\r\n    const contObj = {};\r\n    cons.data.docs.map((c) => {\r\n      return (contObj[c.id] = c);\r\n    });\r\n    setContacts(contObj);\r\n    const fullConversations = cons.data.docs.map((c) =>\r\n      axios.get(`/conversations/${c.id}/messages`)\r\n    );\r\n    const recommendedContacts = axios.get(\"/fetch-recommendations\");\r\n    const res = await Promise.all([...fullConversations, recommendedContacts]);\r\n    let conversationsResult = res.slice(0, res.length - 1);\r\n    let convObj = {};\r\n    setRecommendations(res[res.length - 1]);\r\n    conversationsResult.map(\r\n      (c) => (convObj[c.config.url.split(\"/\")[2]] = c.data)\r\n    );\r\n    setConversations(convObj);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchAll();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const s = io(\"https://smartfitnessgym.herokuapp.com/chat\");\r\n    s.on(\"connect\", () => {\r\n      s.emit(\"authenticate\", { token: localStorage.getItem(\"token\") });\r\n    });\r\n    setSocket(s);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const slider = document.querySelector(\"#slider\");\r\n    const sliderImages = document.querySelectorAll(\"#slider img\");\r\n\r\n    //Buttons\r\n    const prevBtn = document.querySelector(\"#prev\");\r\n    const nextBtn = document.querySelector(\"#next\");\r\n\r\n    let counter = 1;\r\n    const size = 100;\r\n\r\n    if (slider) {\r\n      slider.style.transform = \"translateX(\" + -size * counter + \"px)\";\r\n    }\r\n    if (nextBtn) {\r\n      nextBtn.addEventListener(\"click\", () => {\r\n        if (counter == sliderImages.length - Object.values(contacts).length) return;\r\n        slider.style.transition = \"transform 0.4s ease-in-out\";\r\n        counter++;\r\n        slider.style.transform = \"translateX(\" + -size * counter + \"px)\";\r\n      });\r\n    }\r\n    if (prevBtn) {\r\n      prevBtn.addEventListener(\"click\", () => {\r\n        if (counter <= 0) return;\r\n        slider.style.transition = \"transform 0.4s ease-in-out\";\r\n        counter--;\r\n        slider.style.transform = \"translateX(\" + -size * counter + \"px)\";\r\n      });\r\n    }\r\n  }, [contacts && Object.values(contacts).length]);\r\n\r\n  const pageHandler = async () => {};\r\n\r\n  const currentHandler = async (con) => {\r\n    setCurrentConversationMessages(\r\n      conversations[con.id]\r\n        ? {\r\n            ...conversations[con.id],\r\n            docs: conversations[con.id].docs,\r\n          }\r\n        : {}\r\n    );\r\n    setConversations((prev) => {\r\n      return {\r\n        ...prev,\r\n        [con.id]: {\r\n          ...conversations[con.id],\r\n          docs: conversations[con.id].docs,\r\n        },\r\n      };\r\n    });\r\n    setCurrentPage(1);\r\n    setCurrentContact(con);\r\n    if (currentContact) {\r\n      const oLdConversation = await axios.get(\r\n        `/conversations/${currentContact.id}/messages`\r\n      );\r\n      setConversations((prev) => {\r\n        return {\r\n          ...prev,\r\n          [currentContact.id]: oLdConversation.data,\r\n        };\r\n      });\r\n    }\r\n  };\r\n  const changedHandler = () => {\r\n    setChanged(false);\r\n  };\r\n\r\n  const addMessage = (content) => {\r\n    socket.emit(\"message\", {\r\n      to: currentContact.users[\r\n        parseInt(currentContact.users[0].id) ===\r\n        parseInt(localStorage.getItem(\"userId\"))\r\n          ? 1\r\n          : 0\r\n      ].id, //id user\r\n      conversation: currentContact.id, //id conversation\r\n      content,\r\n    });\r\n  };\r\n\r\n  //////////contacts last message handler\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"contact\", (conversation) => {\r\n        setContacts((prev) => {\r\n          return {\r\n            ...prev,\r\n            [conversation.id]: {\r\n              ...prev[conversation.id],\r\n              lastMessage: conversation.lastMessage,\r\n            },\r\n          };\r\n        });\r\n      });\r\n    }\r\n  }, [socket]);\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* Slider */}\r\n      <div className=\"container\" style={{ paddingTop: \"90px\" }}>\r\n        <div className={chatCss.slider_container}>\r\n          <div className={chatCss.slider} id=\"slider\">\r\n            {recommendations.data\r\n              ? recommendations.data.docs\r\n                ? recommendations.data.docs.map((c) => (\r\n                    <span\r\n                      key={c.id}\r\n                      onClick={async () => {\r\n                        await axios.post(\"/create-conversation\", { to: c.id });\r\n                        fetchAll();\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <img src={c.photo} alt={c.id} />\r\n                    </span>\r\n                  ))\r\n                : \"\"\r\n              : \"\"}\r\n          </div>\r\n        </div>\r\n\r\n        <a\r\n          className={`carousel-control-prev ${chatCss.carousel_control_prev}`}\r\n          id=\"prev\"\r\n        >\r\n          <span className=\"carousel-control-prev-icon\"></span>\r\n        </a>\r\n        <a\r\n          className={`carousel-control-next ${chatCss.carousel_control_next}`}\r\n          id=\"next\"\r\n        >\r\n          <span className=\"carousel-control-next-icon\"></span>\r\n        </a>\r\n      </div>\r\n      {/* End Slider */}\r\n\r\n      <div className={`container ${chatCss.content}`}>\r\n        <div className=\"row no-gutters\">\r\n          <Contacts\r\n            socket={socket}\r\n            currentHandler={currentHandler}\r\n            currentContact={currentContact}\r\n            contacts={contacts ? Object.values(contacts) : []}\r\n          />\r\n          <Messaging\r\n            socket={socket}\r\n            currentContact={currentContact}\r\n            addMessage={addMessage}\r\n            currentConversation={currentConversationMessages}\r\n            changedHandler={changedHandler}\r\n            changed={changed}\r\n            currentPage={currentPage}\r\n            pageHandler={pageHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Chat);\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\store\\index.js",[],["472","473"],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Chat\\messaging.jsx",["474"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport chatCss from \"../../assets/css/chat.module.css\";\r\nimport Message from \"./message\";\r\n\r\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from \"emoji-picker-react\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { InsertEmoticon } from \"@material-ui/icons\";\r\n\r\nfunction Messaging(props) {\r\n  const [message, setMessage] = useState(\"\");\r\n  const sms = useRef();\r\n  const chosenEmoji = useRef([]);\r\n  const emoj = useRef();\r\n  const emoji = useRef();\r\n  const [resultedMessages, setResultedMessages] = useState(\r\n    props.currentConversation\r\n  );\r\n  const [resultedConract, setResultedContact] = useState(props.currentContact);\r\n  useEffect(() => {\r\n    setResultedMessages(props.currentConversation);\r\n  }, [props.currentConversation]);\r\n\r\n  useEffect(() => {\r\n    setResultedContact(props.currentContact);\r\n  }, [props.currentContact]);\r\n\r\n  // console.log(resultedConract)\r\n\r\n  const onEmojiClick = (event, emojiObject) => {\r\n    chosenEmoji.current = [...chosenEmoji.current, emojiObject];\r\n    setMessage(\r\n      chosenEmoji.current[chosenEmoji.current.length - 1].emoji + message\r\n    );\r\n    sms.current.value +=\r\n      chosenEmoji.current[chosenEmoji.current.length - 1].emoji;\r\n  };\r\n  const openEmoji = () => {\r\n    const span = emoj.current;\r\n    span.style.visibility = span.style.visibility === \"hidden\" ? \"\" : \"hidden\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.socket) {\r\n      props.socket.on(`new message`, (body) => {\r\n        setResultedMessages((prev) => {\r\n          return {\r\n            ...prev,\r\n            docs: [...prev.docs, body.message],\r\n          };\r\n        });\r\n      });\r\n    }\r\n  }, [props.socket]);\r\n\r\n  useEffect(() => {\r\n    var messageBody = document.querySelector(\"#messageBody\");\r\n    messageBody.scrollTop = messageBody.scrollHeight - messageBody.clientHeight;\r\n  }, [resultedMessages]);\r\n\r\n\r\n  return (\r\n    <div class=\"col-md-8\">\r\n      <div class={chatCss.friend_header}>\r\n        <img\r\n          src={\r\n            resultedConract\r\n              ? resultedConract.users\r\n                ? parseInt(resultedConract.users[0].id) ===\r\n                  parseInt(localStorage.getItem(\"userId\"))\r\n                  ? resultedConract.users[1].photo\r\n                  : resultedConract.users[0].photo\r\n                : \"https://res.cloudinary.com/derossy-backup/image/upload/v1555206304/deross-samples/placeholder-profile-male.jpg\"\r\n              : \"https://res.cloudinary.com/derossy-backup/image/upload/v1555206304/deross-samples/placeholder-profile-male.jpg\"\r\n          }\r\n          alt=\"friend image\"\r\n          class={chatCss.friend__img}\r\n        />\r\n        <div class={chatCss.friend__text}>\r\n          <h6>\r\n            {resultedConract\r\n              ? resultedConract.users\r\n                ? parseInt(resultedConract.users[0].id) ===\r\n                  parseInt(localStorage.getItem(\"userId\"))\r\n                  ? resultedConract.users[1].username\r\n                  : resultedConract.users[0].username\r\n                : \"Please choose contact\"\r\n              : \"Please choose contact\"}\r\n          </h6>\r\n          <blockquote>keep move forward ... </blockquote>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class={chatCss.chatting}\r\n        id=\"messageBody\"\r\n        onScroll={(e) => {\r\n          let scrollValue = e.target.scrollTop;\r\n          if (scrollValue === 0 && props.currentContact) {\r\n            props.pageHandler();\r\n          }\r\n        }}\r\n      >\r\n        {resultedMessages\r\n          ? resultedMessages.docs\r\n            ? resultedMessages.docs.map((sms) => (\r\n                <Message\r\n                  key={sms.id}\r\n                  me={sms.user ? sms.user.id : sms.sender}\r\n                  message={sms.content}\r\n                />\r\n              ))\r\n            : \"\"\r\n          : \"\"}\r\n      </div>\r\n{\r\n  resultedConract?\r\n\r\n      <div class={chatCss.chat_box}>\r\n        <div ref={emoji}>\r\n          <div\r\n            className={chatCss.emoji}\r\n            ref={emoj}\r\n            style={{ visibility: \"hidden\" }}\r\n          >\r\n            <Picker\r\n              onEmojiClick={onEmojiClick}\r\n              skinTone={SKIN_TONE_MEDIUM_DARK}\r\n            />\r\n          </div>\r\n          <IconButton onClick={openEmoji}>\r\n            <InsertEmoticon />\r\n          </IconButton>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message here...\"\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              emoj.current.style.visibility = \"hidden\";\r\n              props.addMessage(message);\r\n              setMessage(\"\");\r\n              return (sms.current.value = \"\");\r\n            }\r\n          }}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          ref={sms}\r\n        />\r\n\r\n        <i\r\n          class=\"material-icons\"\r\n          onClick={() => {\r\n            emoj.current.style.visibility = \"hidden\";\r\n            props.addMessage(message);\r\n            setMessage(\"\");\r\n            return (sms.current.value = \"\");\r\n          }}\r\n        >\r\n          send\r\n        </i>\r\n      </div>:\"\"\r\n}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Messaging);\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\store\\Messgaes\\messagesActions.js",["475","476"],"import axios from \"axios\";\r\nimport * as messageTypes from \"./messagesTypess\";\r\nexport const fetchContactsStart = () => {\r\n  return {\r\n    type: messageTypes.GET_CONTACTS_START,\r\n  };\r\n};\r\nexport const fetchContactsSuccess = (contacts) => {\r\n  return {\r\n    type: messageTypes.GET_CONTACTS_SUCCESS,\r\n    contacts,\r\n  };\r\n};\r\nexport const fetchContactsFail = (error) => {\r\n  return {\r\n    type: messageTypes.GET_CONTACTS_FAIL,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const fetchConversationsStart = () => {\r\n  return {\r\n    type: messageTypes.GET_COVERSATIONS_START,\r\n  };\r\n};\r\nexport const fetchConversationsSuccess = (conversations) => {\r\n  return {\r\n    type: messageTypes.GET_COVERSATIONS_SUCCESS,\r\n    conversations,\r\n  };\r\n};\r\nexport const fetchConversationsFail = (error) => {\r\n  return {\r\n    type: messageTypes.GET_COVERSATIONS_FAIL,\r\n    error,\r\n  };\r\n};\r\n\r\nexport const addCoversation = (id, conversation) => {\r\n  return {\r\n    type: messageTypes.ADD_CONVERSATION,\r\n    id,\r\n    conversation,\r\n  };\r\n};\r\nexport const updateCoversation = (id, conversation, page) => {\r\n  ///FOR PAGINATION\r\n  return {\r\n    type: messageTypes.UPDATE_CONVERSATION,\r\n    id,\r\n    conversation,\r\n    page,\r\n  };\r\n};\r\nexport const updateCoversationByMessage = (id, message) => {\r\n  //done\r\n  return {\r\n    type: messageTypes.UPDATE_CONVERSATION_BY_MESSAGE,\r\n    id,\r\n    message,\r\n  };\r\n};\r\n\r\nexport const addCoversations = (ids) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(fetchConversationsStart());\r\n      const idsArr = [];\r\n      const idsArrIndexes = [];\r\n      ids.map((id, index) => {\r\n        idsArr.push(\r\n          axios.get(\r\n            `/conversations/${\r\n              id._id[0] === localStorage.getItem(\"userId\")\r\n                ? id._id[0]\r\n                : id._id[1]\r\n            }/messages`\r\n          )\r\n        );\r\n        idsArrIndexes.push(index);\r\n      });\r\n      // console.log(idsArr)\r\n      const response = await Promise.all(idsArr);\r\n      const allConversations = {};\r\n      response.map((conversation) => {\r\n        let id = conversation.data.to;\r\n        allConversations[id] = conversation.data.docs;\r\n      });\r\n\r\n      dispatch(fetchConversationsSuccess(allConversations));\r\n\r\n      // console.log(allConversations);\r\n    } catch (err) {\r\n      dispatch(fetchConversationsFail(err));\r\n      console.log(err);\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchContacts = (param) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(fetchContactsStart());\r\n      const res = await axios.get(\"/conversations\");\r\n      dispatch(fetchContactsSuccess(res.data));\r\n    !param&&dispatch(addCoversations(res.data.docs));\r\n    } catch (err) {\r\n      dispatch(fetchContactsFail(err));\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearSuccess = () => {\r\n  return {\r\n    type: messageTypes.GET_CLEAR_CONTACTS,\r\n  };\r\n};\r\n\r\nexport const clearContacts = () => {\r\n  return async (dispatch) => {\r\n    dispatch(clearSuccess());\r\n  };\r\n};\r\nexport const changeInput = (input) => {\r\n  return {\r\n    type: messageTypes.CHANGE_INPUT,\r\n    input,\r\n  };\r\n};\r\n\r\nexport const changingInput = (input) => {\r\n  return async (dispatch) => {\r\n    dispatch(changeInput(input));\r\n  };\r\n};\r\n\r\nexport const setCurrentConversationSuccess = (current) => {\r\n  return {\r\n    type: messageTypes.GET_CURRENT_CONVERSATION,\r\n    current\r\n  };\r\n};\r\n\r\nexport const setCurrentConversation1 = (param) => {\r\n  return async (dispatch) => {\r\n    dispatch(setCurrentConversationSuccess(param));\r\n  };\r\n};\r\n\r\n// export const fetchMessagesStart = () => {\r\n//   return {\r\n//     type: messageTypes.GET_MESSAGES_START,\r\n//   };\r\n// };\r\n// export const fetchMessagesSuccess = (messages) => {\r\n//   return {\r\n//     type: messageTypes.GET_MESSAGES_SUCCESS,\r\n//     messages,\r\n//   };\r\n// };\r\n// export const fetchMessagesFail = (error) => {\r\n//   return {\r\n//     type: messageTypes.GET_MESSAGES_FAIL,\r\n//     error,\r\n//   };\r\n// };\r\n\r\n// export const fetchMessages = async (id) => {\r\n//   return async (dispatch) => {\r\n//     try {\r\n//       dispatch(fetchMessagesStart());\r\n//       const res = await axios.get(`/conversations/${id}/messages`);\r\n//       dispatch(fetchMessagesSuccess(res.data));\r\n//     } catch (err) {\r\n//       dispatch(fetchMessagesFail(err));\r\n//     }\r\n//   };\r\n// };\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Chat\\contacts.jsx",["477","478"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport chatCss from \"../../assets/css/chat.module.css\";\r\nimport Contact from \"./contact\";\r\n\r\nfunction Contacts(props) {\r\n  const cons = useRef();\r\n\r\n  return (\r\n    <div className={`col-md-4 ${chatCss.side_chat}`}>\r\n      <div className={chatCss.search_box}>\r\n        <div className={chatCss.merge}>\r\n          <i className=\"material-icons\">search</i>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search Here\"\r\n            ref={cons}\r\n            // onChange={(e) => dispatch(changingInput(e.target.value))}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={chatCss.all_friends}>\r\n        {props.contacts\r\n          ? props.contacts.map((c) => {\r\n              return (\r\n                <Contact\r\n                  key={c.id}\r\n                  id={c.id}\r\n                  clickedHandler={props.currentHandler}\r\n                  createdAt={c.createdAt}\r\n                  lastMessage={c.lastMessage}\r\n                  meta={c.meta}\r\n                  users={c.users}\r\n                  currentContact={props.currentContact}\r\n                  contact={c}\r\n                />\r\n              );\r\n            })\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Contacts);\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Chat\\contact.jsx",["479"],"import React from \"react\";\r\nimport chatCss from \"../../assets/css/chat.module.css\";\r\nimport moment from \"moment\";\r\nfunction Contact(props) {\r\n  return (\r\n    <>\r\n      <div\r\n        class={`${chatCss.friend} ${\r\n          props.currentContact\r\n            ? props.currentContact.id === props.id\r\n              ? chatCss.active\r\n              : \"\"\r\n            : \"\"\r\n        }`}\r\n        onClick={() => props.clickedHandler(props.contact)}\r\n      >\r\n        <img\r\n          src={\r\n           parseInt( props.users[0].id) ===parseInt( localStorage.getItem(\"userId\"))\r\n              ? props.users[1].photo\r\n              : props.users[0].photo\r\n          }\r\n          alt=\"friend image\"\r\n          class={chatCss.friend__img}\r\n        />\r\n        <div class={chatCss.friend__text}>\r\n          <h6>\r\n            {parseInt( props.users[0].id) ===parseInt( localStorage.getItem(\"userId\"))\r\n              ? props.users[1].username\r\n              : props.users[0].username}\r\n          </h6>\r\n          <p>{props.lastMessage ? props.lastMessage.content : \"no messages\"}</p>\r\n        </div>\r\n        <span class={chatCss.time}>\r\n          {moment(props.createdAt).format(\"YY/MM/DD hh:mm\")}\r\n        </span>\r\n      </div>\r\n      <hr />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Contact);\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\Chat\\message.jsx",[],["480","481"],"E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\Components\\QRCode\\qrCode.jsx",["482"],"import React, { useState, useEffect } from 'react';\r\nimport style from './qrCode.module.css';\r\nimport QRCode from 'qrcode';\r\nimport axios from 'axios';\r\nimport ProgressBar from \"@ramonak/react-progress-bar\";\r\n\r\nfunction dataURLtoFile(dataurl, filename) {\r\n \r\n  var arr = dataurl.split(','),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]), \r\n      n = bstr.length, \r\n      u8arr = new Uint8Array(n);\r\n      \r\n  while(n--){\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  \r\n  return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\n\r\n\r\n\r\nconst QRcode = () => {\r\n\r\n  const [text, setText] = useState('');\r\n  const [imageSrc, setImageSrc] = useState('');\r\n  const [imageId, setImageId] = useState('');\r\n  const [videoSrc, setVideoSrc] = useState('');\r\n  const [QrURL, setQrURL] = useState('');\r\n  let [progress, setProgress] = useState('');\r\n\r\n  const defaultBtnActive = () => {\r\n    const defaultBtn = document.getElementById(\"defaultBtn\");\r\n    defaultBtn.click();\r\n  }\r\n\r\n  const getVideoSrc = () => {\r\n\r\n    const videoEl = document.getElementById(\"video\");\r\n    const file = document.getElementById(\"defaultBtn\").files[0];\r\n    \r\n\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload =  ()=> {\r\n        const result = reader.result;\r\n        videoEl.src = result;\r\n      }\r\n      reader.readAsDataURL(file);   \r\n    }\r\n  }\r\n\r\n  const cancelBtn = () => {\r\n    const video = document.getElementById(\"video\");\r\n    video.src = \"\";\r\n  }\r\n\r\n  const uploadVideo = () => {\r\n\r\n    const form = new FormData()\r\n    form.append('title',text)\r\n    form.append('video', videoSrc)\r\n    \r\n    axios.post(`/add-video-qr`, form, {\r\n      onUploadProgress: progressEvent => {\r\n        // console.log(`upload progress: ${Math.round(progressEvent.loaded / progressEvent.total * 100)}`)\r\n        setProgress(Math.round(progressEvent.loaded / progressEvent.total * 100))\r\n      }\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data.video);\r\n        setQrURL(res.data.video)\r\n        setImageId(res.data.id)\r\n      }).catch((err) => {\r\n        console.error(err);\r\n      })\r\n    \r\n  }\r\n\r\n  const generateQRCode = async ()=> {\r\n    try {\r\n      \r\n      const response = await QRCode.toDataURL(QrURL);\r\n      setImageSrc(response);\r\n      console.log(imageSrc)\r\n\r\n      var file = dataURLtoFile(imageSrc,'hello.png');\r\n      console.log(file);\r\n\r\n      const _form = new FormData()\r\n      _form.append('image', file)\r\n      \r\n      axios.post(`/add-photo-qr?id=${imageId}`, _form)\r\n        .then((res) => {\r\n          console.log(res);\r\n        }).catch((err) => {\r\n          console.error(err);\r\n        })\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <div className={style.qrCode}>\r\n          <div className={style.qr__left}>\r\n\r\n            <h2 className={style.qr__title}>Create QR-Code</h2>\r\n            \r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"video name\"\r\n              className={style.qr__inputName}\r\n              onChange={(e) => setText(e.target.value)}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"description\"\r\n              className={style.qr__inputDescription}\r\n            />\r\n\r\n            <input\r\n              type=\"file\"\r\n              id=\"defaultBtn\"\r\n              onClick={() => getVideoSrc()}\r\n              onChange={(e) => setVideoSrc(e.target.files[0])}\r\n              hidden\r\n            />\r\n            \r\n            <button\r\n              id=\"customBtn\"\r\n              className={style.qr__btn}\r\n              onClick={() => defaultBtnActive()}\r\n            > Add Video\r\n            </button>\r\n            \r\n            <div className={style.qr__videoWrapper}>\r\n              <span\r\n                className={style.qr__cancelBtn}\r\n                onClick={() => cancelBtn()}\r\n              >\r\n                &times;\r\n              </span>\r\n              \r\n              <video id=\"video\" src=\"\" controls></video>\r\n            </div>\r\n\r\n            <button\r\n              className={style.uploadBtn}\r\n              onClick={() => uploadVideo()}\r\n            > Upload Video\r\n            </button>\r\n            \r\n            <div className={style.progress}>\r\n              <ProgressBar\r\n                width=\"50%\"\r\n                bgColor=\"#D9A404\"\r\n                labelColor=\"#000\"\r\n                completed={progress}\r\n              />\r\n            </div>\r\n            \r\n          </div>\r\n\r\n          <div className={style.qr__right}>\r\n\r\n            <div className={style.qr__imageWrapper}>\r\n              {imageSrc ?\r\n                (<img id=\"img\" src={imageSrc} alt=\"QR-img\" />) :\r\n                (<p className={style.qr__noImg}> NO QR Yet!</p>)\r\n              }\r\n            </div>\r\n\r\n\r\n              <button\r\n                className={style.qr__print}\r\n                onClick={() => generateQRCode()}\r\n              >\r\n                Create\r\n              </button>\r\n\r\n              <button\r\n                className={style.qr__print}\r\n                onClick={() => window.print()}\r\n              >\r\n                Print\r\n              </button>\r\n\r\n\r\n          </div>\r\n          \r\n\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default QRcode;\r\n","E:\\FCI scu\\Graduation Project\\project\\g-project\\src\\context\\rest-context.js",[],{"ruleId":"483","replacedBy":"484"},{"ruleId":"485","replacedBy":"486"},{"ruleId":"487","severity":1,"message":"488","line":47,"column":6,"nodeType":"489","endLine":47,"endColumn":8,"suggestions":"490"},{"ruleId":"487","severity":1,"message":"491","line":24,"column":6,"nodeType":"489","endLine":24,"endColumn":8,"suggestions":"492"},{"ruleId":"493","severity":1,"message":"494","line":34,"column":26,"nodeType":"495","messageId":"496","endLine":34,"endColumn":28},{"ruleId":"487","severity":1,"message":"497","line":48,"column":6,"nodeType":"489","endLine":48,"endColumn":18,"suggestions":"498"},{"ruleId":"499","severity":1,"message":"500","line":57,"column":19,"nodeType":"501","messageId":"502","endLine":57,"endColumn":31},{"ruleId":"503","severity":1,"message":"504","line":59,"column":26,"nodeType":"501","messageId":"502","endLine":59,"endColumn":37},{"ruleId":"499","severity":1,"message":"500","line":62,"column":28,"nodeType":"501","messageId":"502","endLine":62,"endColumn":40},{"ruleId":"503","severity":1,"message":"504","line":64,"column":33,"nodeType":"501","messageId":"502","endLine":64,"endColumn":44},{"ruleId":"505","severity":1,"message":"506","line":104,"column":11,"nodeType":"507","endLine":104,"endColumn":23},{"ruleId":"493","severity":1,"message":"508","line":99,"column":43,"nodeType":"495","messageId":"509","endLine":99,"endColumn":45},{"ruleId":"493","severity":1,"message":"508","line":110,"column":51,"nodeType":"495","messageId":"509","endLine":110,"endColumn":53},{"ruleId":"487","severity":1,"message":"510","line":140,"column":6,"nodeType":"489","endLine":147,"endColumn":4,"suggestions":"511"},{"ruleId":"493","severity":1,"message":"494","line":205,"column":33,"nodeType":"495","messageId":"496","endLine":205,"endColumn":35},{"ruleId":"493","severity":1,"message":"494","line":215,"column":38,"nodeType":"495","messageId":"496","endLine":215,"endColumn":40},{"ruleId":"493","severity":1,"message":"494","line":236,"column":33,"nodeType":"495","messageId":"496","endLine":236,"endColumn":35},{"ruleId":"493","severity":1,"message":"494","line":246,"column":38,"nodeType":"495","messageId":"496","endLine":246,"endColumn":40},{"ruleId":"487","severity":1,"message":"512","line":39,"column":6,"nodeType":"489","endLine":39,"endColumn":8,"suggestions":"513"},{"ruleId":"505","severity":1,"message":"514","line":90,"column":9,"nodeType":"507","endLine":94,"endColumn":10},{"ruleId":"505","severity":1,"message":"514","line":97,"column":9,"nodeType":"507","endLine":101,"endColumn":10},{"ruleId":"487","severity":1,"message":"512","line":42,"column":6,"nodeType":"489","endLine":42,"endColumn":8,"suggestions":"515"},{"ruleId":"505","severity":1,"message":"514","line":131,"column":9,"nodeType":"507","endLine":135,"endColumn":10},{"ruleId":"505","severity":1,"message":"514","line":138,"column":9,"nodeType":"507","endLine":142,"endColumn":10},{"ruleId":"516","severity":1,"message":"517","line":147,"column":11,"nodeType":"507","endLine":154,"endColumn":12},{"ruleId":"518","severity":1,"message":"519","line":47,"column":15,"nodeType":"507","endLine":47,"endColumn":142},{"ruleId":"520","severity":1,"message":"521","line":10,"column":18,"nodeType":"522","messageId":"523","endLine":10,"endColumn":27},{"ruleId":"518","severity":1,"message":"519","line":9,"column":11,"nodeType":"507","endLine":9,"endColumn":36},{"ruleId":"505","severity":1,"message":"506","line":14,"column":7,"nodeType":"507","endLine":36,"endColumn":8},{"ruleId":"518","severity":1,"message":"519","line":49,"column":11,"nodeType":"507","endLine":49,"endColumn":36},{"ruleId":"518","severity":1,"message":"519","line":58,"column":11,"nodeType":"507","endLine":58,"endColumn":56},{"ruleId":"487","severity":1,"message":"524","line":38,"column":19,"nodeType":"525","endLine":38,"endColumn":46},{"ruleId":"493","severity":1,"message":"494","line":23,"column":26,"nodeType":"495","messageId":"496","endLine":23,"endColumn":28},{"ruleId":"487","severity":1,"message":"526","line":25,"column":9,"nodeType":"527","endLine":26,"endColumn":28},{"ruleId":"493","severity":1,"message":"494","line":89,"column":29,"nodeType":"495","messageId":"496","endLine":89,"endColumn":31},{"ruleId":"493","severity":1,"message":"494","line":25,"column":30,"nodeType":"495","messageId":"496","endLine":25,"endColumn":32},{"ruleId":"487","severity":1,"message":"526","line":27,"column":13,"nodeType":"527","endLine":28,"endColumn":32},{"ruleId":"493","severity":1,"message":"494","line":93,"column":29,"nodeType":"495","messageId":"496","endLine":93,"endColumn":31},{"ruleId":"518","severity":1,"message":"519","line":17,"column":11,"nodeType":"507","endLine":17,"endColumn":36},{"ruleId":"483","replacedBy":"528"},{"ruleId":"485","replacedBy":"529"},{"ruleId":"520","severity":1,"message":"530","line":23,"column":10,"nodeType":"522","messageId":"523","endLine":23,"endColumn":21},{"ruleId":"520","severity":1,"message":"531","line":24,"column":8,"nodeType":"522","messageId":"523","endLine":24,"endColumn":10},{"ruleId":"487","severity":1,"message":"488","line":55,"column":6,"nodeType":"489","endLine":55,"endColumn":8,"suggestions":"532"},{"ruleId":"520","severity":1,"message":"533","line":88,"column":10,"nodeType":"522","messageId":"523","endLine":88,"endColumn":16},{"ruleId":"520","severity":1,"message":"534","line":88,"column":18,"nodeType":"522","messageId":"523","endLine":88,"endColumn":27},{"ruleId":"487","severity":1,"message":"491","line":50,"column":6,"nodeType":"489","endLine":50,"endColumn":8,"suggestions":"535"},{"ruleId":"493","severity":1,"message":"494","line":60,"column":26,"nodeType":"495","messageId":"496","endLine":60,"endColumn":28},{"ruleId":"487","severity":1,"message":"497","line":74,"column":6,"nodeType":"489","endLine":74,"endColumn":18,"suggestions":"536"},{"ruleId":"499","severity":1,"message":"500","line":83,"column":19,"nodeType":"501","messageId":"502","endLine":83,"endColumn":31},{"ruleId":"503","severity":1,"message":"504","line":85,"column":26,"nodeType":"501","messageId":"502","endLine":85,"endColumn":37},{"ruleId":"499","severity":1,"message":"500","line":88,"column":28,"nodeType":"501","messageId":"502","endLine":88,"endColumn":40},{"ruleId":"503","severity":1,"message":"504","line":90,"column":33,"nodeType":"501","messageId":"502","endLine":90,"endColumn":44},{"ruleId":"493","severity":1,"message":"508","line":191,"column":38,"nodeType":"495","messageId":"509","endLine":191,"endColumn":40},{"ruleId":"505","severity":1,"message":"506","line":104,"column":11,"nodeType":"507","endLine":104,"endColumn":23},{"ruleId":"518","severity":1,"message":"519","line":47,"column":15,"nodeType":"507","endLine":47,"endColumn":142},{"ruleId":"487","severity":1,"message":"512","line":39,"column":6,"nodeType":"489","endLine":39,"endColumn":8,"suggestions":"537"},{"ruleId":"505","severity":1,"message":"514","line":90,"column":9,"nodeType":"507","endLine":94,"endColumn":10},{"ruleId":"505","severity":1,"message":"514","line":97,"column":9,"nodeType":"507","endLine":101,"endColumn":10},{"ruleId":"487","severity":1,"message":"512","line":42,"column":6,"nodeType":"489","endLine":42,"endColumn":8,"suggestions":"538"},{"ruleId":"505","severity":1,"message":"514","line":131,"column":9,"nodeType":"507","endLine":135,"endColumn":10},{"ruleId":"505","severity":1,"message":"514","line":138,"column":9,"nodeType":"507","endLine":142,"endColumn":10},{"ruleId":"516","severity":1,"message":"517","line":147,"column":11,"nodeType":"507","endLine":154,"endColumn":12},{"ruleId":"520","severity":1,"message":"521","line":10,"column":18,"nodeType":"522","messageId":"523","endLine":10,"endColumn":27},{"ruleId":"518","severity":1,"message":"519","line":9,"column":6,"nodeType":"507","endLine":9,"endColumn":31},{"ruleId":"505","severity":1,"message":"506","line":14,"column":4,"nodeType":"507","endLine":35,"endColumn":5},{"ruleId":"518","severity":1,"message":"519","line":52,"column":6,"nodeType":"507","endLine":52,"endColumn":31},{"ruleId":"518","severity":1,"message":"519","line":61,"column":6,"nodeType":"507","endLine":61,"endColumn":51},{"ruleId":"487","severity":1,"message":"524","line":36,"column":19,"nodeType":"525","endLine":36,"endColumn":46},{"ruleId":"493","severity":1,"message":"494","line":29,"column":27,"nodeType":"495","messageId":"496","endLine":29,"endColumn":29},{"ruleId":"487","severity":1,"message":"526","line":30,"column":22,"nodeType":"527","endLine":30,"endColumn":92},{"ruleId":"493","severity":1,"message":"494","line":95,"column":26,"nodeType":"495","messageId":"496","endLine":95,"endColumn":28},{"ruleId":"493","severity":1,"message":"494","line":27,"column":25,"nodeType":"495","messageId":"496","endLine":27,"endColumn":27},{"ruleId":"487","severity":1,"message":"526","line":28,"column":20,"nodeType":"527","endLine":28,"endColumn":90},{"ruleId":"493","severity":1,"message":"494","line":91,"column":26,"nodeType":"495","messageId":"496","endLine":91,"endColumn":28},{"ruleId":"518","severity":1,"message":"519","line":17,"column":11,"nodeType":"507","endLine":17,"endColumn":36},{"ruleId":"520","severity":1,"message":"539","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":26},{"ruleId":"520","severity":1,"message":"540","line":100,"column":16,"nodeType":"522","messageId":"523","endLine":100,"endColumn":23},{"ruleId":"520","severity":1,"message":"541","line":101,"column":10,"nodeType":"522","messageId":"523","endLine":101,"endColumn":15},{"ruleId":"520","severity":1,"message":"542","line":103,"column":17,"nodeType":"522","messageId":"523","endLine":103,"endColumn":25},{"ruleId":"520","severity":1,"message":"543","line":8,"column":8,"nodeType":"522","messageId":"523","endLine":8,"endColumn":15},{"ruleId":"493","severity":1,"message":"508","line":100,"column":43,"nodeType":"495","messageId":"509","endLine":100,"endColumn":45},{"ruleId":"493","severity":1,"message":"508","line":111,"column":51,"nodeType":"495","messageId":"509","endLine":111,"endColumn":53},{"ruleId":"487","severity":1,"message":"510","line":141,"column":6,"nodeType":"489","endLine":141,"endColumn":38,"suggestions":"544"},{"ruleId":"493","severity":1,"message":"494","line":222,"column":33,"nodeType":"495","messageId":"496","endLine":222,"endColumn":35},{"ruleId":"493","severity":1,"message":"494","line":232,"column":38,"nodeType":"495","messageId":"496","endLine":232,"endColumn":40},{"ruleId":"493","severity":1,"message":"494","line":253,"column":33,"nodeType":"495","messageId":"496","endLine":253,"endColumn":35},{"ruleId":"493","severity":1,"message":"494","line":263,"column":38,"nodeType":"495","messageId":"496","endLine":263,"endColumn":40},{"ruleId":"487","severity":1,"message":"545","line":46,"column":6,"nodeType":"489","endLine":46,"endColumn":8,"suggestions":"546"},{"ruleId":"547","severity":1,"message":"548","line":72,"column":21,"nodeType":"527","messageId":"549","endLine":72,"endColumn":23},{"ruleId":"487","severity":1,"message":"550","line":86,"column":6,"nodeType":"489","endLine":86,"endColumn":50,"suggestions":"551"},{"ruleId":"487","severity":1,"message":"552","line":86,"column":7,"nodeType":"553","endLine":86,"endColumn":49},{"ruleId":"505","severity":1,"message":"514","line":182,"column":9,"nodeType":"507","endLine":185,"endColumn":10},{"ruleId":"505","severity":1,"message":"514","line":188,"column":9,"nodeType":"507","endLine":191,"endColumn":10},{"ruleId":"483","replacedBy":"554"},{"ruleId":"485","replacedBy":"555"},{"ruleId":"556","severity":1,"message":"557","line":64,"column":9,"nodeType":"507","endLine":77,"endColumn":11},{"ruleId":"493","severity":1,"message":"494","line":70,"column":27,"nodeType":"495","messageId":"496","endLine":70,"endColumn":29},{"ruleId":"493","severity":1,"message":"494","line":85,"column":35,"nodeType":"495","messageId":"496","endLine":85,"endColumn":37},{"ruleId":"520","severity":1,"message":"558","line":1,"column":17,"nodeType":"522","messageId":"523","endLine":1,"endColumn":26},{"ruleId":"520","severity":1,"message":"559","line":1,"column":36,"nodeType":"522","messageId":"523","endLine":1,"endColumn":44},{"ruleId":"556","severity":1,"message":"557","line":17,"column":9,"nodeType":"507","endLine":25,"endColumn":11},{"ruleId":"483","replacedBy":"560"},{"ruleId":"485","replacedBy":"561"},{"ruleId":"520","severity":1,"message":"558","line":1,"column":27,"nodeType":"522","messageId":"523","endLine":1,"endColumn":36},"no-native-reassign",["562"],"no-negated-in-lhs",["563"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Auth'. Either include it or remove the dependency array.","ArrayExpression",["564"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["565"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'props.method'. Either include it or remove the dependency array.",["566"],"no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","no-array-constructor","The array literal notation [] is preferable.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'props.match.params.id' and 'weekIndex'. Either include them or remove the dependency array.",["567"],"React Hook useEffect has a missing dependency: 'counter'. Either include it or remove the dependency array.",["568"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["569"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'setSearch' is assigned a value but never used.","Identifier","unusedVar","Assignments to the 'current' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'allCalories' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","BinaryExpression",["562"],["563"],"'useDispatch' is defined but never used.","'io' is defined but never used.",["570"],"'socket' is assigned a value but never used.","'setSocket' is assigned a value but never used.",["571"],["572"],["573"],["574"],"'Component' is defined but never used.","'setMark' is assigned a value but never used.","'place' is assigned a value but never used.","'setClear' is assigned a value but never used.","'Spinner' is defined but never used.",["575"],"React Hook useEffect has a missing dependency: 'fetchAll'. Either include it or remove the dependency array.",["576"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has a missing dependency: 'contacts'. Either include it or remove the dependency array.",["577"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression",["562"],["563"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useEffect' is defined but never used.","'useState' is defined but never used.",["562"],["563"],"no-global-assign","no-unsafe-negation",{"desc":"578","fix":"579"},{"desc":"580","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},{"desc":"586","fix":"587"},{"desc":"586","fix":"588"},{"desc":"578","fix":"589"},{"desc":"580","fix":"590"},{"desc":"582","fix":"591"},{"desc":"586","fix":"592"},{"desc":"586","fix":"593"},{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},"Update the dependencies array to be: [Auth]",{"range":"600","text":"601"},"Update the dependencies array to be: [props]",{"range":"602","text":"603"},"Update the dependencies array to be: [props.food, props.method]",{"range":"604","text":"605"},"Update the dependencies array to be: [loading, loading2, loading3, props.match.params.id, props.open2, weekIndex]",{"range":"606","text":"607"},"Update the dependencies array to be: [counter]",{"range":"608","text":"609"},{"range":"610","text":"609"},{"range":"611","text":"601"},{"range":"612","text":"603"},{"range":"613","text":"605"},{"range":"614","text":"609"},{"range":"615","text":"609"},"Update the dependencies array to be: [loading, loading2, props.match.params.id, props.open2, weekIndex]",{"range":"616","text":"617"},"Update the dependencies array to be: [fetchAll]",{"range":"618","text":"619"},"Update the dependencies array to be: [contacts]",{"range":"620","text":"621"},[1714,1716],"[Auth]",[742,744],"[props]",[1425,1437],"[props.food, props.method]",[4344,4462],"[loading, loading2, loading3, props.match.params.id, props.open2, weekIndex]",[1234,1236],"[counter]",[1386,1388],[2069,2071],[1328,1330],[2011,2023],[1234,1236],[1386,1388],[4379,4411],"[loading, loading2, props.match.params.id, props.open2, weekIndex]",[1621,1623],"[fetchAll]",[2895,2939],"[contacts]"]